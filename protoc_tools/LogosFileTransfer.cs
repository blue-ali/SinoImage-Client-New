// Generated by ProtoGen, Version=2.4.1.521, Culture=neutral, PublicKeyToken=17b3b1f090c3ea48.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace com.logos.documents.definition {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class LogosFileTransfer {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_com_logos_documents_definition_MsgResultInfo__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.logos.documents.definition.MsgResultInfo, global::com.logos.documents.definition.MsgResultInfo.Builder> internal__static_com_logos_documents_definition_MsgResultInfo__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_logos_documents_definition_MsgNoteInfo__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.logos.documents.definition.MsgNoteInfo, global::com.logos.documents.definition.MsgNoteInfo.Builder> internal__static_com_logos_documents_definition_MsgNoteInfo__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_logos_documents_definition_MsgFileInfo__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.logos.documents.definition.MsgFileInfo, global::com.logos.documents.definition.MsgFileInfo.Builder> internal__static_com_logos_documents_definition_MsgFileInfo__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_logos_documents_definition_MsgQueryBatchInfo__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.logos.documents.definition.MsgQueryBatchInfo, global::com.logos.documents.definition.MsgQueryBatchInfo.Builder> internal__static_com_logos_documents_definition_MsgQueryBatchInfo__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_logos_documents_definition_MsgBatchInfo__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.logos.documents.definition.MsgBatchInfo, global::com.logos.documents.definition.MsgBatchInfo.Builder> internal__static_com_logos_documents_definition_MsgBatchInfo__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_com_logos_documents_definition_MsgResponsInfo__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::com.logos.documents.definition.MsgResponsInfo, global::com.logos.documents.definition.MsgResponsInfo.Builder> internal__static_com_logos_documents_definition_MsgResponsInfo__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static LogosFileTransfer() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          "ChhMb2dvcy5GaWxlVHJhbnNmZXIucHJvdG8SHmNvbS5sb2dvcy5kb2N1bWVu" + 
          "dHMuZGVmaW5pdGlvbiJsCg1Nc2dSZXN1bHRJbmZvEj0KBlN0YXR1cxgBIAIo" + 
          "DjItLmNvbS5sb2dvcy5kb2N1bWVudHMuZGVmaW5pdGlvbi5FUmVzdWx0U3Rh" + 
          "dHVzEgsKA01zZxgCIAIoCRIPCgdCYXRjaE5PGAUgASgJIqcCCgtNc2dOb3Rl" + 
          "SW5mbxIOCgZBdXRob3IYASACKAkSDwoHVmVyc2lvbhgCIAIoCRISCgpDcmVh" + 
          "dGVUaW1lGAQgAigJEg4KBlJlbWFyaxgFIAEoCRIQCghOb3RlTmFtZRgIIAIo" + 
          "CRIPCgdOb3RlTXNnGAogAigJEhAKCEZpbGVMaW5rGAwgAigJEhMKC0ZpbGVN" + 
          "RDVMaW5rGA4gAigJEjwKCU9wZXJhdGlvbhgQIAIoDjIpLmNvbS5sb2dvcy5k" + 
          "b2N1bWVudHMuZGVmaW5pdGlvbi5FT3BlclR5cGUSDwoHUmVnaW9uWBgUIAIo" + 
          "BRIPCgdSZWdpb25ZGBUgAigFEhMKC1JlZ2lvbldpZHRoGBYgAigFEhQKDFJl" + 
          "Z2lvbkhlaWdodBgXIAIoBSKxAgoLTXNnRmlsZUluZm8SDwoHQmF0Y2hJZBgB" + 
          "IAIoCRIOCgZGaWxlSWQYAiACKAkSDwoHQ3JlYXRvchgDIAIoCRISCgpDcmVh" + 
          "dGVUaW1lGAQgAigJEg4KBlJlbWFyaxgFIAEoCRIQCghGaWxlTmFtZRgIIAIo" + 
          "CRIPCgdGaWxlVVJMGAkgASgJEg8KB0ZpbGVNRDUYDCACKAkSEAoIRmlsZVNp" + 
          "emUYDiACKAUSDAoERGF0YRgQIAEoDBI8CglPcGVyYXRpb24YEiACKA4yKS5j" + 
          "b20ubG9nb3MuZG9jdW1lbnRzLmRlZmluaXRpb24uRU9wZXJUeXBlEjoKBU5v" + 
          "dGVzGBogAygLMisuY29tLmxvZ29zLmRvY3VtZW50cy5kZWZpbml0aW9uLk1z" + 
          "Z05vdGVJbmZvIp4BChFNc2dRdWVyeUJhdGNoSW5mbxIMCgRVc2VyGAEgAigJ" + 
          "EhAKCFBhc3N3b3JkGAIgAigJEg0KBU9yZ0lkGAMgAigJEhEKCVF1ZXJ5RGF0" + 
          "ZRgEIAIoBRIRCglRdWVyeVRpbWUYBSACKAUSDwoHQmF0Y2hOTxgGIAIoCRIQ" + 
          "CghTb3VyY2VJUBgqIAEoCRIRCglNYWNoaW5lSUQYLCABKAkipQMKDE1zZ0Jh" + 
          "dGNoSW5mbxIPCgdCYXRjaElkGAEgAigJEhIKCkNyZWF0ZVRpbWUYAiACKAkS" + 
          "DwoHQ3JlYXRvchgDIAIoCRIPCgdWZXJzaW9uGAQgASgJEhQKDExhc3RNb2Rp" + 
          "ZmllZBgFIAIoCRIOCgZSZW1hcmsYBiABKAkSPAoJT3BlcmF0aW9uGBQgAigO" + 
          "MikuY29tLmxvZ29zLmRvY3VtZW50cy5kZWZpbml0aW9uLkVPcGVyVHlwZRI+" + 
          "CglGaWxlSW5mb3MYFiADKAsyKy5jb20ubG9nb3MuZG9jdW1lbnRzLmRlZmlu" + 
          "aXRpb24uTXNnRmlsZUluZm8SFAoMUHJvdmluY2VDb2RlGB8gASgJEg0KBU9y" + 
          "Z0lkGB4gASgJEg0KBVN5c0lkGCIgASgJEg8KB0JhckNvZGUYKCABKAkSEAoI" + 
          "U291cmNlSVAYKiABKAkSQQoKUmVzdWx0SW5mbxgyIAEoCzItLmNvbS5sb2dv" + 
          "cy5kb2N1bWVudHMuZGVmaW5pdGlvbi5Nc2dSZXN1bHRJbmZvEhAKCFBhc3N3" + 
          "b3JkGDMgASgJIlMKDk1zZ1Jlc3BvbnNJbmZvEkEKClJlc3VsdEluZm8YASAB" + 
          "KAsyLS5jb20ubG9nb3MuZG9jdW1lbnRzLmRlZmluaXRpb24uTXNnUmVzdWx0" + 
          "SW5mbypOCglFT3BlclR5cGUSBwoDQUREEAASBwoDREVMEAESBwoDVVBEEAIS" + 
          "CwoHVVBETk9URRADEhkKFUZST01fU0VSVkVSX05PVENIQU5HRRAEKigKDUVS" + 
          "ZXN1bHRTdGF0dXMSCwoHU3VjY2VzcxAAEgoKBkZhaWxlZBABQhcKFWNuLm5l" + 
          "dC5zaW5vZGF0YS5jbS5wYg==");
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_com_logos_documents_definition_MsgResultInfo__Descriptor = Descriptor.MessageTypes[0];
        internal__static_com_logos_documents_definition_MsgResultInfo__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.logos.documents.definition.MsgResultInfo, global::com.logos.documents.definition.MsgResultInfo.Builder>(internal__static_com_logos_documents_definition_MsgResultInfo__Descriptor,
                new string[] { "Status", "Msg", "BatchNO", });
        internal__static_com_logos_documents_definition_MsgNoteInfo__Descriptor = Descriptor.MessageTypes[1];
        internal__static_com_logos_documents_definition_MsgNoteInfo__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.logos.documents.definition.MsgNoteInfo, global::com.logos.documents.definition.MsgNoteInfo.Builder>(internal__static_com_logos_documents_definition_MsgNoteInfo__Descriptor,
                new string[] { "Author", "Version", "CreateTime", "Remark", "NoteName", "NoteMsg", "FileLink", "FileMD5Link", "Operation", "RegionX", "RegionY", "RegionWidth", "RegionHeight", });
        internal__static_com_logos_documents_definition_MsgFileInfo__Descriptor = Descriptor.MessageTypes[2];
        internal__static_com_logos_documents_definition_MsgFileInfo__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.logos.documents.definition.MsgFileInfo, global::com.logos.documents.definition.MsgFileInfo.Builder>(internal__static_com_logos_documents_definition_MsgFileInfo__Descriptor,
                new string[] { "BatchId", "FileId", "Creator", "CreateTime", "Remark", "FileName", "FileURL", "FileMD5", "FileSize", "Data", "Operation", "Notes", });
        internal__static_com_logos_documents_definition_MsgQueryBatchInfo__Descriptor = Descriptor.MessageTypes[3];
        internal__static_com_logos_documents_definition_MsgQueryBatchInfo__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.logos.documents.definition.MsgQueryBatchInfo, global::com.logos.documents.definition.MsgQueryBatchInfo.Builder>(internal__static_com_logos_documents_definition_MsgQueryBatchInfo__Descriptor,
                new string[] { "User", "Password", "OrgId", "QueryDate", "QueryTime", "BatchNO", "SourceIP", "MachineID", });
        internal__static_com_logos_documents_definition_MsgBatchInfo__Descriptor = Descriptor.MessageTypes[4];
        internal__static_com_logos_documents_definition_MsgBatchInfo__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.logos.documents.definition.MsgBatchInfo, global::com.logos.documents.definition.MsgBatchInfo.Builder>(internal__static_com_logos_documents_definition_MsgBatchInfo__Descriptor,
                new string[] { "BatchId", "CreateTime", "Creator", "Version", "LastModified", "Remark", "Operation", "FileInfos", "ProvinceCode", "OrgId", "SysId", "BarCode", "SourceIP", "ResultInfo", "Password", });
        internal__static_com_logos_documents_definition_MsgResponsInfo__Descriptor = Descriptor.MessageTypes[5];
        internal__static_com_logos_documents_definition_MsgResponsInfo__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::com.logos.documents.definition.MsgResponsInfo, global::com.logos.documents.definition.MsgResponsInfo.Builder>(internal__static_com_logos_documents_definition_MsgResponsInfo__Descriptor,
                new string[] { "ResultInfo", });
        return null;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          }, assigner);
    }
    #endregion
    
  }
  #region Enums
  public enum EOperType {
    ADD = 0,
    DEL = 1,
    UPD = 2,
    UPDNOTE = 3,
    FROM_SERVER_NOTCHANGE = 4,
  }
  
  public enum EResultStatus {
    Success = 0,
    Failed = 1,
  }
  
  #endregion
  
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class MsgResultInfo : pb::GeneratedMessage<MsgResultInfo, MsgResultInfo.Builder> {
    private MsgResultInfo() { }
    private static readonly MsgResultInfo defaultInstance = new MsgResultInfo().MakeReadOnly();
    private static readonly string[] _msgResultInfoFieldNames = new string[] { "BatchNO", "Msg", "Status" };
    private static readonly uint[] _msgResultInfoFieldTags = new uint[] { 42, 18, 8 };
    public static MsgResultInfo DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MsgResultInfo DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MsgResultInfo ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.logos.documents.definition.LogosFileTransfer.internal__static_com_logos_documents_definition_MsgResultInfo__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MsgResultInfo, MsgResultInfo.Builder> InternalFieldAccessors {
      get { return global::com.logos.documents.definition.LogosFileTransfer.internal__static_com_logos_documents_definition_MsgResultInfo__FieldAccessorTable; }
    }
    
    public const int StatusFieldNumber = 1;
    private bool hasStatus;
    private global::com.logos.documents.definition.EResultStatus status_ = global::com.logos.documents.definition.EResultStatus.Success;
    public bool HasStatus {
      get { return hasStatus; }
    }
    public global::com.logos.documents.definition.EResultStatus Status {
      get { return status_; }
    }
    
    public const int MsgFieldNumber = 2;
    private bool hasMsg;
    private string msg_ = "";
    public bool HasMsg {
      get { return hasMsg; }
    }
    public string Msg {
      get { return msg_; }
    }
    
    public const int BatchNOFieldNumber = 5;
    private bool hasBatchNO;
    private string batchNO_ = "";
    public bool HasBatchNO {
      get { return hasBatchNO; }
    }
    public string BatchNO {
      get { return batchNO_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasStatus) return false;
        if (!hasMsg) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgResultInfoFieldNames;
      if (hasStatus) {
        output.WriteEnum(1, field_names[2], (int) Status, Status);
      }
      if (hasMsg) {
        output.WriteString(2, field_names[1], Msg);
      }
      if (hasBatchNO) {
        output.WriteString(5, field_names[0], BatchNO);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasStatus) {
          size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Status);
        }
        if (hasMsg) {
          size += pb::CodedOutputStream.ComputeStringSize(2, Msg);
        }
        if (hasBatchNO) {
          size += pb::CodedOutputStream.ComputeStringSize(5, BatchNO);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static MsgResultInfo ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MsgResultInfo ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MsgResultInfo ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MsgResultInfo ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MsgResultInfo ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MsgResultInfo ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MsgResultInfo ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MsgResultInfo ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MsgResultInfo ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MsgResultInfo ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MsgResultInfo MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MsgResultInfo prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<MsgResultInfo, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MsgResultInfo cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MsgResultInfo result;
      
      private MsgResultInfo PrepareBuilder() {
        if (resultIsReadOnly) {
          MsgResultInfo original = result;
          result = new MsgResultInfo();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MsgResultInfo MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.logos.documents.definition.MsgResultInfo.Descriptor; }
      }
      
      public override MsgResultInfo DefaultInstanceForType {
        get { return global::com.logos.documents.definition.MsgResultInfo.DefaultInstance; }
      }
      
      public override MsgResultInfo BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MsgResultInfo) {
          return MergeFrom((MsgResultInfo) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MsgResultInfo other) {
        if (other == global::com.logos.documents.definition.MsgResultInfo.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasStatus) {
          Status = other.Status;
        }
        if (other.HasMsg) {
          Msg = other.Msg;
        }
        if (other.HasBatchNO) {
          BatchNO = other.BatchNO;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgResultInfoFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgResultInfoFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.status_, out unknown)) {
                result.hasStatus = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 18: {
              result.hasMsg = input.ReadString(ref result.msg_);
              break;
            }
            case 42: {
              result.hasBatchNO = input.ReadString(ref result.batchNO_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasStatus {
       get { return result.hasStatus; }
      }
      public global::com.logos.documents.definition.EResultStatus Status {
        get { return result.Status; }
        set { SetStatus(value); }
      }
      public Builder SetStatus(global::com.logos.documents.definition.EResultStatus value) {
        PrepareBuilder();
        result.hasStatus = true;
        result.status_ = value;
        return this;
      }
      public Builder ClearStatus() {
        PrepareBuilder();
        result.hasStatus = false;
        result.status_ = global::com.logos.documents.definition.EResultStatus.Success;
        return this;
      }
      
      public bool HasMsg {
        get { return result.hasMsg; }
      }
      public string Msg {
        get { return result.Msg; }
        set { SetMsg(value); }
      }
      public Builder SetMsg(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMsg = true;
        result.msg_ = value;
        return this;
      }
      public Builder ClearMsg() {
        PrepareBuilder();
        result.hasMsg = false;
        result.msg_ = "";
        return this;
      }
      
      public bool HasBatchNO {
        get { return result.hasBatchNO; }
      }
      public string BatchNO {
        get { return result.BatchNO; }
        set { SetBatchNO(value); }
      }
      public Builder SetBatchNO(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBatchNO = true;
        result.batchNO_ = value;
        return this;
      }
      public Builder ClearBatchNO() {
        PrepareBuilder();
        result.hasBatchNO = false;
        result.batchNO_ = "";
        return this;
      }
    }
    static MsgResultInfo() {
      object.ReferenceEquals(global::com.logos.documents.definition.LogosFileTransfer.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class MsgNoteInfo : pb::GeneratedMessage<MsgNoteInfo, MsgNoteInfo.Builder> {
    private MsgNoteInfo() { }
    private static readonly MsgNoteInfo defaultInstance = new MsgNoteInfo().MakeReadOnly();
    private static readonly string[] _msgNoteInfoFieldNames = new string[] { "Author", "CreateTime", "FileLink", "FileMD5Link", "NoteMsg", "NoteName", "Operation", "RegionHeight", "RegionWidth", "RegionX", "RegionY", "Remark", "Version" };
    private static readonly uint[] _msgNoteInfoFieldTags = new uint[] { 10, 34, 98, 114, 82, 66, 128, 184, 176, 160, 168, 42, 18 };
    public static MsgNoteInfo DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MsgNoteInfo DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MsgNoteInfo ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.logos.documents.definition.LogosFileTransfer.internal__static_com_logos_documents_definition_MsgNoteInfo__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MsgNoteInfo, MsgNoteInfo.Builder> InternalFieldAccessors {
      get { return global::com.logos.documents.definition.LogosFileTransfer.internal__static_com_logos_documents_definition_MsgNoteInfo__FieldAccessorTable; }
    }
    
    public const int AuthorFieldNumber = 1;
    private bool hasAuthor;
    private string author_ = "";
    public bool HasAuthor {
      get { return hasAuthor; }
    }
    public string Author {
      get { return author_; }
    }
    
    public const int VersionFieldNumber = 2;
    private bool hasVersion;
    private string version_ = "";
    public bool HasVersion {
      get { return hasVersion; }
    }
    public string Version {
      get { return version_; }
    }
    
    public const int CreateTimeFieldNumber = 4;
    private bool hasCreateTime;
    private string createTime_ = "";
    public bool HasCreateTime {
      get { return hasCreateTime; }
    }
    public string CreateTime {
      get { return createTime_; }
    }
    
    public const int RemarkFieldNumber = 5;
    private bool hasRemark;
    private string remark_ = "";
    public bool HasRemark {
      get { return hasRemark; }
    }
    public string Remark {
      get { return remark_; }
    }
    
    public const int NoteNameFieldNumber = 8;
    private bool hasNoteName;
    private string noteName_ = "";
    public bool HasNoteName {
      get { return hasNoteName; }
    }
    public string NoteName {
      get { return noteName_; }
    }
    
    public const int NoteMsgFieldNumber = 10;
    private bool hasNoteMsg;
    private string noteMsg_ = "";
    public bool HasNoteMsg {
      get { return hasNoteMsg; }
    }
    public string NoteMsg {
      get { return noteMsg_; }
    }
    
    public const int FileLinkFieldNumber = 12;
    private bool hasFileLink;
    private string fileLink_ = "";
    public bool HasFileLink {
      get { return hasFileLink; }
    }
    public string FileLink {
      get { return fileLink_; }
    }
    
    public const int FileMD5LinkFieldNumber = 14;
    private bool hasFileMD5Link;
    private string fileMD5Link_ = "";
    public bool HasFileMD5Link {
      get { return hasFileMD5Link; }
    }
    public string FileMD5Link {
      get { return fileMD5Link_; }
    }
    
    public const int OperationFieldNumber = 16;
    private bool hasOperation;
    private global::com.logos.documents.definition.EOperType operation_ = global::com.logos.documents.definition.EOperType.ADD;
    public bool HasOperation {
      get { return hasOperation; }
    }
    public global::com.logos.documents.definition.EOperType Operation {
      get { return operation_; }
    }
    
    public const int RegionXFieldNumber = 20;
    private bool hasRegionX;
    private int regionX_;
    public bool HasRegionX {
      get { return hasRegionX; }
    }
    public int RegionX {
      get { return regionX_; }
    }
    
    public const int RegionYFieldNumber = 21;
    private bool hasRegionY;
    private int regionY_;
    public bool HasRegionY {
      get { return hasRegionY; }
    }
    public int RegionY {
      get { return regionY_; }
    }
    
    public const int RegionWidthFieldNumber = 22;
    private bool hasRegionWidth;
    private int regionWidth_;
    public bool HasRegionWidth {
      get { return hasRegionWidth; }
    }
    public int RegionWidth {
      get { return regionWidth_; }
    }
    
    public const int RegionHeightFieldNumber = 23;
    private bool hasRegionHeight;
    private int regionHeight_;
    public bool HasRegionHeight {
      get { return hasRegionHeight; }
    }
    public int RegionHeight {
      get { return regionHeight_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasAuthor) return false;
        if (!hasVersion) return false;
        if (!hasCreateTime) return false;
        if (!hasNoteName) return false;
        if (!hasNoteMsg) return false;
        if (!hasFileLink) return false;
        if (!hasFileMD5Link) return false;
        if (!hasOperation) return false;
        if (!hasRegionX) return false;
        if (!hasRegionY) return false;
        if (!hasRegionWidth) return false;
        if (!hasRegionHeight) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgNoteInfoFieldNames;
      if (hasAuthor) {
        output.WriteString(1, field_names[0], Author);
      }
      if (hasVersion) {
        output.WriteString(2, field_names[12], Version);
      }
      if (hasCreateTime) {
        output.WriteString(4, field_names[1], CreateTime);
      }
      if (hasRemark) {
        output.WriteString(5, field_names[11], Remark);
      }
      if (hasNoteName) {
        output.WriteString(8, field_names[5], NoteName);
      }
      if (hasNoteMsg) {
        output.WriteString(10, field_names[4], NoteMsg);
      }
      if (hasFileLink) {
        output.WriteString(12, field_names[2], FileLink);
      }
      if (hasFileMD5Link) {
        output.WriteString(14, field_names[3], FileMD5Link);
      }
      if (hasOperation) {
        output.WriteEnum(16, field_names[6], (int) Operation, Operation);
      }
      if (hasRegionX) {
        output.WriteInt32(20, field_names[9], RegionX);
      }
      if (hasRegionY) {
        output.WriteInt32(21, field_names[10], RegionY);
      }
      if (hasRegionWidth) {
        output.WriteInt32(22, field_names[8], RegionWidth);
      }
      if (hasRegionHeight) {
        output.WriteInt32(23, field_names[7], RegionHeight);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAuthor) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Author);
        }
        if (hasVersion) {
          size += pb::CodedOutputStream.ComputeStringSize(2, Version);
        }
        if (hasCreateTime) {
          size += pb::CodedOutputStream.ComputeStringSize(4, CreateTime);
        }
        if (hasRemark) {
          size += pb::CodedOutputStream.ComputeStringSize(5, Remark);
        }
        if (hasNoteName) {
          size += pb::CodedOutputStream.ComputeStringSize(8, NoteName);
        }
        if (hasNoteMsg) {
          size += pb::CodedOutputStream.ComputeStringSize(10, NoteMsg);
        }
        if (hasFileLink) {
          size += pb::CodedOutputStream.ComputeStringSize(12, FileLink);
        }
        if (hasFileMD5Link) {
          size += pb::CodedOutputStream.ComputeStringSize(14, FileMD5Link);
        }
        if (hasOperation) {
          size += pb::CodedOutputStream.ComputeEnumSize(16, (int) Operation);
        }
        if (hasRegionX) {
          size += pb::CodedOutputStream.ComputeInt32Size(20, RegionX);
        }
        if (hasRegionY) {
          size += pb::CodedOutputStream.ComputeInt32Size(21, RegionY);
        }
        if (hasRegionWidth) {
          size += pb::CodedOutputStream.ComputeInt32Size(22, RegionWidth);
        }
        if (hasRegionHeight) {
          size += pb::CodedOutputStream.ComputeInt32Size(23, RegionHeight);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static MsgNoteInfo ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MsgNoteInfo ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MsgNoteInfo ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MsgNoteInfo ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MsgNoteInfo ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MsgNoteInfo ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MsgNoteInfo ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MsgNoteInfo ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MsgNoteInfo ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MsgNoteInfo ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MsgNoteInfo MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MsgNoteInfo prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<MsgNoteInfo, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MsgNoteInfo cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MsgNoteInfo result;
      
      private MsgNoteInfo PrepareBuilder() {
        if (resultIsReadOnly) {
          MsgNoteInfo original = result;
          result = new MsgNoteInfo();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MsgNoteInfo MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.logos.documents.definition.MsgNoteInfo.Descriptor; }
      }
      
      public override MsgNoteInfo DefaultInstanceForType {
        get { return global::com.logos.documents.definition.MsgNoteInfo.DefaultInstance; }
      }
      
      public override MsgNoteInfo BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MsgNoteInfo) {
          return MergeFrom((MsgNoteInfo) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MsgNoteInfo other) {
        if (other == global::com.logos.documents.definition.MsgNoteInfo.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAuthor) {
          Author = other.Author;
        }
        if (other.HasVersion) {
          Version = other.Version;
        }
        if (other.HasCreateTime) {
          CreateTime = other.CreateTime;
        }
        if (other.HasRemark) {
          Remark = other.Remark;
        }
        if (other.HasNoteName) {
          NoteName = other.NoteName;
        }
        if (other.HasNoteMsg) {
          NoteMsg = other.NoteMsg;
        }
        if (other.HasFileLink) {
          FileLink = other.FileLink;
        }
        if (other.HasFileMD5Link) {
          FileMD5Link = other.FileMD5Link;
        }
        if (other.HasOperation) {
          Operation = other.Operation;
        }
        if (other.HasRegionX) {
          RegionX = other.RegionX;
        }
        if (other.HasRegionY) {
          RegionY = other.RegionY;
        }
        if (other.HasRegionWidth) {
          RegionWidth = other.RegionWidth;
        }
        if (other.HasRegionHeight) {
          RegionHeight = other.RegionHeight;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgNoteInfoFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgNoteInfoFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasAuthor = input.ReadString(ref result.author_);
              break;
            }
            case 18: {
              result.hasVersion = input.ReadString(ref result.version_);
              break;
            }
            case 34: {
              result.hasCreateTime = input.ReadString(ref result.createTime_);
              break;
            }
            case 42: {
              result.hasRemark = input.ReadString(ref result.remark_);
              break;
            }
            case 66: {
              result.hasNoteName = input.ReadString(ref result.noteName_);
              break;
            }
            case 82: {
              result.hasNoteMsg = input.ReadString(ref result.noteMsg_);
              break;
            }
            case 98: {
              result.hasFileLink = input.ReadString(ref result.fileLink_);
              break;
            }
            case 114: {
              result.hasFileMD5Link = input.ReadString(ref result.fileMD5Link_);
              break;
            }
            case 128: {
              object unknown;
              if(input.ReadEnum(ref result.operation_, out unknown)) {
                result.hasOperation = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(16, (ulong)(int)unknown);
              }
              break;
            }
            case 160: {
              result.hasRegionX = input.ReadInt32(ref result.regionX_);
              break;
            }
            case 168: {
              result.hasRegionY = input.ReadInt32(ref result.regionY_);
              break;
            }
            case 176: {
              result.hasRegionWidth = input.ReadInt32(ref result.regionWidth_);
              break;
            }
            case 184: {
              result.hasRegionHeight = input.ReadInt32(ref result.regionHeight_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAuthor {
        get { return result.hasAuthor; }
      }
      public string Author {
        get { return result.Author; }
        set { SetAuthor(value); }
      }
      public Builder SetAuthor(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAuthor = true;
        result.author_ = value;
        return this;
      }
      public Builder ClearAuthor() {
        PrepareBuilder();
        result.hasAuthor = false;
        result.author_ = "";
        return this;
      }
      
      public bool HasVersion {
        get { return result.hasVersion; }
      }
      public string Version {
        get { return result.Version; }
        set { SetVersion(value); }
      }
      public Builder SetVersion(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasVersion = true;
        result.version_ = value;
        return this;
      }
      public Builder ClearVersion() {
        PrepareBuilder();
        result.hasVersion = false;
        result.version_ = "";
        return this;
      }
      
      public bool HasCreateTime {
        get { return result.hasCreateTime; }
      }
      public string CreateTime {
        get { return result.CreateTime; }
        set { SetCreateTime(value); }
      }
      public Builder SetCreateTime(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCreateTime = true;
        result.createTime_ = value;
        return this;
      }
      public Builder ClearCreateTime() {
        PrepareBuilder();
        result.hasCreateTime = false;
        result.createTime_ = "";
        return this;
      }
      
      public bool HasRemark {
        get { return result.hasRemark; }
      }
      public string Remark {
        get { return result.Remark; }
        set { SetRemark(value); }
      }
      public Builder SetRemark(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRemark = true;
        result.remark_ = value;
        return this;
      }
      public Builder ClearRemark() {
        PrepareBuilder();
        result.hasRemark = false;
        result.remark_ = "";
        return this;
      }
      
      public bool HasNoteName {
        get { return result.hasNoteName; }
      }
      public string NoteName {
        get { return result.NoteName; }
        set { SetNoteName(value); }
      }
      public Builder SetNoteName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasNoteName = true;
        result.noteName_ = value;
        return this;
      }
      public Builder ClearNoteName() {
        PrepareBuilder();
        result.hasNoteName = false;
        result.noteName_ = "";
        return this;
      }
      
      public bool HasNoteMsg {
        get { return result.hasNoteMsg; }
      }
      public string NoteMsg {
        get { return result.NoteMsg; }
        set { SetNoteMsg(value); }
      }
      public Builder SetNoteMsg(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasNoteMsg = true;
        result.noteMsg_ = value;
        return this;
      }
      public Builder ClearNoteMsg() {
        PrepareBuilder();
        result.hasNoteMsg = false;
        result.noteMsg_ = "";
        return this;
      }
      
      public bool HasFileLink {
        get { return result.hasFileLink; }
      }
      public string FileLink {
        get { return result.FileLink; }
        set { SetFileLink(value); }
      }
      public Builder SetFileLink(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFileLink = true;
        result.fileLink_ = value;
        return this;
      }
      public Builder ClearFileLink() {
        PrepareBuilder();
        result.hasFileLink = false;
        result.fileLink_ = "";
        return this;
      }
      
      public bool HasFileMD5Link {
        get { return result.hasFileMD5Link; }
      }
      public string FileMD5Link {
        get { return result.FileMD5Link; }
        set { SetFileMD5Link(value); }
      }
      public Builder SetFileMD5Link(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFileMD5Link = true;
        result.fileMD5Link_ = value;
        return this;
      }
      public Builder ClearFileMD5Link() {
        PrepareBuilder();
        result.hasFileMD5Link = false;
        result.fileMD5Link_ = "";
        return this;
      }
      
      public bool HasOperation {
       get { return result.hasOperation; }
      }
      public global::com.logos.documents.definition.EOperType Operation {
        get { return result.Operation; }
        set { SetOperation(value); }
      }
      public Builder SetOperation(global::com.logos.documents.definition.EOperType value) {
        PrepareBuilder();
        result.hasOperation = true;
        result.operation_ = value;
        return this;
      }
      public Builder ClearOperation() {
        PrepareBuilder();
        result.hasOperation = false;
        result.operation_ = global::com.logos.documents.definition.EOperType.ADD;
        return this;
      }
      
      public bool HasRegionX {
        get { return result.hasRegionX; }
      }
      public int RegionX {
        get { return result.RegionX; }
        set { SetRegionX(value); }
      }
      public Builder SetRegionX(int value) {
        PrepareBuilder();
        result.hasRegionX = true;
        result.regionX_ = value;
        return this;
      }
      public Builder ClearRegionX() {
        PrepareBuilder();
        result.hasRegionX = false;
        result.regionX_ = 0;
        return this;
      }
      
      public bool HasRegionY {
        get { return result.hasRegionY; }
      }
      public int RegionY {
        get { return result.RegionY; }
        set { SetRegionY(value); }
      }
      public Builder SetRegionY(int value) {
        PrepareBuilder();
        result.hasRegionY = true;
        result.regionY_ = value;
        return this;
      }
      public Builder ClearRegionY() {
        PrepareBuilder();
        result.hasRegionY = false;
        result.regionY_ = 0;
        return this;
      }
      
      public bool HasRegionWidth {
        get { return result.hasRegionWidth; }
      }
      public int RegionWidth {
        get { return result.RegionWidth; }
        set { SetRegionWidth(value); }
      }
      public Builder SetRegionWidth(int value) {
        PrepareBuilder();
        result.hasRegionWidth = true;
        result.regionWidth_ = value;
        return this;
      }
      public Builder ClearRegionWidth() {
        PrepareBuilder();
        result.hasRegionWidth = false;
        result.regionWidth_ = 0;
        return this;
      }
      
      public bool HasRegionHeight {
        get { return result.hasRegionHeight; }
      }
      public int RegionHeight {
        get { return result.RegionHeight; }
        set { SetRegionHeight(value); }
      }
      public Builder SetRegionHeight(int value) {
        PrepareBuilder();
        result.hasRegionHeight = true;
        result.regionHeight_ = value;
        return this;
      }
      public Builder ClearRegionHeight() {
        PrepareBuilder();
        result.hasRegionHeight = false;
        result.regionHeight_ = 0;
        return this;
      }
    }
    static MsgNoteInfo() {
      object.ReferenceEquals(global::com.logos.documents.definition.LogosFileTransfer.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class MsgFileInfo : pb::GeneratedMessage<MsgFileInfo, MsgFileInfo.Builder> {
    private MsgFileInfo() { }
    private static readonly MsgFileInfo defaultInstance = new MsgFileInfo().MakeReadOnly();
    private static readonly string[] _msgFileInfoFieldNames = new string[] { "BatchId", "CreateTime", "Creator", "Data", "FileId", "FileMD5", "FileName", "FileSize", "FileURL", "Notes", "Operation", "Remark" };
    private static readonly uint[] _msgFileInfoFieldTags = new uint[] { 10, 34, 26, 130, 18, 98, 66, 112, 74, 210, 144, 42 };
    public static MsgFileInfo DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MsgFileInfo DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MsgFileInfo ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.logos.documents.definition.LogosFileTransfer.internal__static_com_logos_documents_definition_MsgFileInfo__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MsgFileInfo, MsgFileInfo.Builder> InternalFieldAccessors {
      get { return global::com.logos.documents.definition.LogosFileTransfer.internal__static_com_logos_documents_definition_MsgFileInfo__FieldAccessorTable; }
    }
    
    public const int BatchIdFieldNumber = 1;
    private bool hasBatchId;
    private string batchId_ = "";
    public bool HasBatchId {
      get { return hasBatchId; }
    }
    public string BatchId {
      get { return batchId_; }
    }
    
    public const int FileIdFieldNumber = 2;
    private bool hasFileId;
    private string fileId_ = "";
    public bool HasFileId {
      get { return hasFileId; }
    }
    public string FileId {
      get { return fileId_; }
    }
    
    public const int CreatorFieldNumber = 3;
    private bool hasCreator;
    private string creator_ = "";
    public bool HasCreator {
      get { return hasCreator; }
    }
    public string Creator {
      get { return creator_; }
    }
    
    public const int CreateTimeFieldNumber = 4;
    private bool hasCreateTime;
    private string createTime_ = "";
    public bool HasCreateTime {
      get { return hasCreateTime; }
    }
    public string CreateTime {
      get { return createTime_; }
    }
    
    public const int RemarkFieldNumber = 5;
    private bool hasRemark;
    private string remark_ = "";
    public bool HasRemark {
      get { return hasRemark; }
    }
    public string Remark {
      get { return remark_; }
    }
    
    public const int FileNameFieldNumber = 8;
    private bool hasFileName;
    private string fileName_ = "";
    public bool HasFileName {
      get { return hasFileName; }
    }
    public string FileName {
      get { return fileName_; }
    }
    
    public const int FileURLFieldNumber = 9;
    private bool hasFileURL;
    private string fileURL_ = "";
    public bool HasFileURL {
      get { return hasFileURL; }
    }
    public string FileURL {
      get { return fileURL_; }
    }
    
    public const int FileMD5FieldNumber = 12;
    private bool hasFileMD5;
    private string fileMD5_ = "";
    public bool HasFileMD5 {
      get { return hasFileMD5; }
    }
    public string FileMD5 {
      get { return fileMD5_; }
    }
    
    public const int FileSizeFieldNumber = 14;
    private bool hasFileSize;
    private int fileSize_;
    public bool HasFileSize {
      get { return hasFileSize; }
    }
    public int FileSize {
      get { return fileSize_; }
    }
    
    public const int DataFieldNumber = 16;
    private bool hasData;
    private pb::ByteString data_ = pb::ByteString.Empty;
    public bool HasData {
      get { return hasData; }
    }
    public pb::ByteString Data {
      get { return data_; }
    }
    
    public const int OperationFieldNumber = 18;
    private bool hasOperation;
    private global::com.logos.documents.definition.EOperType operation_ = global::com.logos.documents.definition.EOperType.ADD;
    public bool HasOperation {
      get { return hasOperation; }
    }
    public global::com.logos.documents.definition.EOperType Operation {
      get { return operation_; }
    }
    
    public const int NotesFieldNumber = 26;
    private pbc::PopsicleList<global::com.logos.documents.definition.MsgNoteInfo> notes_ = new pbc::PopsicleList<global::com.logos.documents.definition.MsgNoteInfo>();
    public scg::IList<global::com.logos.documents.definition.MsgNoteInfo> NotesList {
      get { return notes_; }
    }
    public int NotesCount {
      get { return notes_.Count; }
    }
    public global::com.logos.documents.definition.MsgNoteInfo GetNotes(int index) {
      return notes_[index];
    }
    
    public override bool IsInitialized {
      get {
        if (!hasBatchId) return false;
        if (!hasFileId) return false;
        if (!hasCreator) return false;
        if (!hasCreateTime) return false;
        if (!hasFileName) return false;
        if (!hasFileMD5) return false;
        if (!hasFileSize) return false;
        if (!hasOperation) return false;
        foreach (global::com.logos.documents.definition.MsgNoteInfo element in NotesList) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgFileInfoFieldNames;
      if (hasBatchId) {
        output.WriteString(1, field_names[0], BatchId);
      }
      if (hasFileId) {
        output.WriteString(2, field_names[4], FileId);
      }
      if (hasCreator) {
        output.WriteString(3, field_names[2], Creator);
      }
      if (hasCreateTime) {
        output.WriteString(4, field_names[1], CreateTime);
      }
      if (hasRemark) {
        output.WriteString(5, field_names[11], Remark);
      }
      if (hasFileName) {
        output.WriteString(8, field_names[6], FileName);
      }
      if (hasFileURL) {
        output.WriteString(9, field_names[8], FileURL);
      }
      if (hasFileMD5) {
        output.WriteString(12, field_names[5], FileMD5);
      }
      if (hasFileSize) {
        output.WriteInt32(14, field_names[7], FileSize);
      }
      if (hasData) {
        output.WriteBytes(16, field_names[3], Data);
      }
      if (hasOperation) {
        output.WriteEnum(18, field_names[10], (int) Operation, Operation);
      }
      if (notes_.Count > 0) {
        output.WriteMessageArray(26, field_names[9], notes_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasBatchId) {
          size += pb::CodedOutputStream.ComputeStringSize(1, BatchId);
        }
        if (hasFileId) {
          size += pb::CodedOutputStream.ComputeStringSize(2, FileId);
        }
        if (hasCreator) {
          size += pb::CodedOutputStream.ComputeStringSize(3, Creator);
        }
        if (hasCreateTime) {
          size += pb::CodedOutputStream.ComputeStringSize(4, CreateTime);
        }
        if (hasRemark) {
          size += pb::CodedOutputStream.ComputeStringSize(5, Remark);
        }
        if (hasFileName) {
          size += pb::CodedOutputStream.ComputeStringSize(8, FileName);
        }
        if (hasFileURL) {
          size += pb::CodedOutputStream.ComputeStringSize(9, FileURL);
        }
        if (hasFileMD5) {
          size += pb::CodedOutputStream.ComputeStringSize(12, FileMD5);
        }
        if (hasFileSize) {
          size += pb::CodedOutputStream.ComputeInt32Size(14, FileSize);
        }
        if (hasData) {
          size += pb::CodedOutputStream.ComputeBytesSize(16, Data);
        }
        if (hasOperation) {
          size += pb::CodedOutputStream.ComputeEnumSize(18, (int) Operation);
        }
        foreach (global::com.logos.documents.definition.MsgNoteInfo element in NotesList) {
          size += pb::CodedOutputStream.ComputeMessageSize(26, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static MsgFileInfo ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MsgFileInfo ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MsgFileInfo ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MsgFileInfo ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MsgFileInfo ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MsgFileInfo ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MsgFileInfo ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MsgFileInfo ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MsgFileInfo ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MsgFileInfo ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MsgFileInfo MakeReadOnly() {
      notes_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MsgFileInfo prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<MsgFileInfo, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MsgFileInfo cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MsgFileInfo result;
      
      private MsgFileInfo PrepareBuilder() {
        if (resultIsReadOnly) {
          MsgFileInfo original = result;
          result = new MsgFileInfo();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MsgFileInfo MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.logos.documents.definition.MsgFileInfo.Descriptor; }
      }
      
      public override MsgFileInfo DefaultInstanceForType {
        get { return global::com.logos.documents.definition.MsgFileInfo.DefaultInstance; }
      }
      
      public override MsgFileInfo BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MsgFileInfo) {
          return MergeFrom((MsgFileInfo) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MsgFileInfo other) {
        if (other == global::com.logos.documents.definition.MsgFileInfo.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasBatchId) {
          BatchId = other.BatchId;
        }
        if (other.HasFileId) {
          FileId = other.FileId;
        }
        if (other.HasCreator) {
          Creator = other.Creator;
        }
        if (other.HasCreateTime) {
          CreateTime = other.CreateTime;
        }
        if (other.HasRemark) {
          Remark = other.Remark;
        }
        if (other.HasFileName) {
          FileName = other.FileName;
        }
        if (other.HasFileURL) {
          FileURL = other.FileURL;
        }
        if (other.HasFileMD5) {
          FileMD5 = other.FileMD5;
        }
        if (other.HasFileSize) {
          FileSize = other.FileSize;
        }
        if (other.HasData) {
          Data = other.Data;
        }
        if (other.HasOperation) {
          Operation = other.Operation;
        }
        if (other.notes_.Count != 0) {
          result.notes_.Add(other.notes_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgFileInfoFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgFileInfoFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasBatchId = input.ReadString(ref result.batchId_);
              break;
            }
            case 18: {
              result.hasFileId = input.ReadString(ref result.fileId_);
              break;
            }
            case 26: {
              result.hasCreator = input.ReadString(ref result.creator_);
              break;
            }
            case 34: {
              result.hasCreateTime = input.ReadString(ref result.createTime_);
              break;
            }
            case 42: {
              result.hasRemark = input.ReadString(ref result.remark_);
              break;
            }
            case 66: {
              result.hasFileName = input.ReadString(ref result.fileName_);
              break;
            }
            case 74: {
              result.hasFileURL = input.ReadString(ref result.fileURL_);
              break;
            }
            case 98: {
              result.hasFileMD5 = input.ReadString(ref result.fileMD5_);
              break;
            }
            case 112: {
              result.hasFileSize = input.ReadInt32(ref result.fileSize_);
              break;
            }
            case 130: {
              result.hasData = input.ReadBytes(ref result.data_);
              break;
            }
            case 144: {
              object unknown;
              if(input.ReadEnum(ref result.operation_, out unknown)) {
                result.hasOperation = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(18, (ulong)(int)unknown);
              }
              break;
            }
            case 210: {
              input.ReadMessageArray(tag, field_name, result.notes_, global::com.logos.documents.definition.MsgNoteInfo.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasBatchId {
        get { return result.hasBatchId; }
      }
      public string BatchId {
        get { return result.BatchId; }
        set { SetBatchId(value); }
      }
      public Builder SetBatchId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBatchId = true;
        result.batchId_ = value;
        return this;
      }
      public Builder ClearBatchId() {
        PrepareBuilder();
        result.hasBatchId = false;
        result.batchId_ = "";
        return this;
      }
      
      public bool HasFileId {
        get { return result.hasFileId; }
      }
      public string FileId {
        get { return result.FileId; }
        set { SetFileId(value); }
      }
      public Builder SetFileId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFileId = true;
        result.fileId_ = value;
        return this;
      }
      public Builder ClearFileId() {
        PrepareBuilder();
        result.hasFileId = false;
        result.fileId_ = "";
        return this;
      }
      
      public bool HasCreator {
        get { return result.hasCreator; }
      }
      public string Creator {
        get { return result.Creator; }
        set { SetCreator(value); }
      }
      public Builder SetCreator(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCreator = true;
        result.creator_ = value;
        return this;
      }
      public Builder ClearCreator() {
        PrepareBuilder();
        result.hasCreator = false;
        result.creator_ = "";
        return this;
      }
      
      public bool HasCreateTime {
        get { return result.hasCreateTime; }
      }
      public string CreateTime {
        get { return result.CreateTime; }
        set { SetCreateTime(value); }
      }
      public Builder SetCreateTime(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCreateTime = true;
        result.createTime_ = value;
        return this;
      }
      public Builder ClearCreateTime() {
        PrepareBuilder();
        result.hasCreateTime = false;
        result.createTime_ = "";
        return this;
      }
      
      public bool HasRemark {
        get { return result.hasRemark; }
      }
      public string Remark {
        get { return result.Remark; }
        set { SetRemark(value); }
      }
      public Builder SetRemark(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRemark = true;
        result.remark_ = value;
        return this;
      }
      public Builder ClearRemark() {
        PrepareBuilder();
        result.hasRemark = false;
        result.remark_ = "";
        return this;
      }
      
      public bool HasFileName {
        get { return result.hasFileName; }
      }
      public string FileName {
        get { return result.FileName; }
        set { SetFileName(value); }
      }
      public Builder SetFileName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFileName = true;
        result.fileName_ = value;
        return this;
      }
      public Builder ClearFileName() {
        PrepareBuilder();
        result.hasFileName = false;
        result.fileName_ = "";
        return this;
      }
      
      public bool HasFileURL {
        get { return result.hasFileURL; }
      }
      public string FileURL {
        get { return result.FileURL; }
        set { SetFileURL(value); }
      }
      public Builder SetFileURL(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFileURL = true;
        result.fileURL_ = value;
        return this;
      }
      public Builder ClearFileURL() {
        PrepareBuilder();
        result.hasFileURL = false;
        result.fileURL_ = "";
        return this;
      }
      
      public bool HasFileMD5 {
        get { return result.hasFileMD5; }
      }
      public string FileMD5 {
        get { return result.FileMD5; }
        set { SetFileMD5(value); }
      }
      public Builder SetFileMD5(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFileMD5 = true;
        result.fileMD5_ = value;
        return this;
      }
      public Builder ClearFileMD5() {
        PrepareBuilder();
        result.hasFileMD5 = false;
        result.fileMD5_ = "";
        return this;
      }
      
      public bool HasFileSize {
        get { return result.hasFileSize; }
      }
      public int FileSize {
        get { return result.FileSize; }
        set { SetFileSize(value); }
      }
      public Builder SetFileSize(int value) {
        PrepareBuilder();
        result.hasFileSize = true;
        result.fileSize_ = value;
        return this;
      }
      public Builder ClearFileSize() {
        PrepareBuilder();
        result.hasFileSize = false;
        result.fileSize_ = 0;
        return this;
      }
      
      public bool HasData {
        get { return result.hasData; }
      }
      public pb::ByteString Data {
        get { return result.Data; }
        set { SetData(value); }
      }
      public Builder SetData(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasData = true;
        result.data_ = value;
        return this;
      }
      public Builder ClearData() {
        PrepareBuilder();
        result.hasData = false;
        result.data_ = pb::ByteString.Empty;
        return this;
      }
      
      public bool HasOperation {
       get { return result.hasOperation; }
      }
      public global::com.logos.documents.definition.EOperType Operation {
        get { return result.Operation; }
        set { SetOperation(value); }
      }
      public Builder SetOperation(global::com.logos.documents.definition.EOperType value) {
        PrepareBuilder();
        result.hasOperation = true;
        result.operation_ = value;
        return this;
      }
      public Builder ClearOperation() {
        PrepareBuilder();
        result.hasOperation = false;
        result.operation_ = global::com.logos.documents.definition.EOperType.ADD;
        return this;
      }
      
      public pbc::IPopsicleList<global::com.logos.documents.definition.MsgNoteInfo> NotesList {
        get { return PrepareBuilder().notes_; }
      }
      public int NotesCount {
        get { return result.NotesCount; }
      }
      public global::com.logos.documents.definition.MsgNoteInfo GetNotes(int index) {
        return result.GetNotes(index);
      }
      public Builder SetNotes(int index, global::com.logos.documents.definition.MsgNoteInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.notes_[index] = value;
        return this;
      }
      public Builder SetNotes(int index, global::com.logos.documents.definition.MsgNoteInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.notes_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddNotes(global::com.logos.documents.definition.MsgNoteInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.notes_.Add(value);
        return this;
      }
      public Builder AddNotes(global::com.logos.documents.definition.MsgNoteInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.notes_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeNotes(scg::IEnumerable<global::com.logos.documents.definition.MsgNoteInfo> values) {
        PrepareBuilder();
        result.notes_.Add(values);
        return this;
      }
      public Builder ClearNotes() {
        PrepareBuilder();
        result.notes_.Clear();
        return this;
      }
    }
    static MsgFileInfo() {
      object.ReferenceEquals(global::com.logos.documents.definition.LogosFileTransfer.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class MsgQueryBatchInfo : pb::GeneratedMessage<MsgQueryBatchInfo, MsgQueryBatchInfo.Builder> {
    private MsgQueryBatchInfo() { }
    private static readonly MsgQueryBatchInfo defaultInstance = new MsgQueryBatchInfo().MakeReadOnly();
    private static readonly string[] _msgQueryBatchInfoFieldNames = new string[] { "BatchNO", "MachineID", "OrgId", "Password", "QueryDate", "QueryTime", "SourceIP", "User" };
    private static readonly uint[] _msgQueryBatchInfoFieldTags = new uint[] { 50, 354, 26, 18, 32, 40, 338, 10 };
    public static MsgQueryBatchInfo DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MsgQueryBatchInfo DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MsgQueryBatchInfo ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.logos.documents.definition.LogosFileTransfer.internal__static_com_logos_documents_definition_MsgQueryBatchInfo__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MsgQueryBatchInfo, MsgQueryBatchInfo.Builder> InternalFieldAccessors {
      get { return global::com.logos.documents.definition.LogosFileTransfer.internal__static_com_logos_documents_definition_MsgQueryBatchInfo__FieldAccessorTable; }
    }
    
    public const int UserFieldNumber = 1;
    private bool hasUser;
    private string user_ = "";
    public bool HasUser {
      get { return hasUser; }
    }
    public string User {
      get { return user_; }
    }
    
    public const int PasswordFieldNumber = 2;
    private bool hasPassword;
    private string password_ = "";
    public bool HasPassword {
      get { return hasPassword; }
    }
    public string Password {
      get { return password_; }
    }
    
    public const int OrgIdFieldNumber = 3;
    private bool hasOrgId;
    private string orgId_ = "";
    public bool HasOrgId {
      get { return hasOrgId; }
    }
    public string OrgId {
      get { return orgId_; }
    }
    
    public const int QueryDateFieldNumber = 4;
    private bool hasQueryDate;
    private int queryDate_;
    public bool HasQueryDate {
      get { return hasQueryDate; }
    }
    public int QueryDate {
      get { return queryDate_; }
    }
    
    public const int QueryTimeFieldNumber = 5;
    private bool hasQueryTime;
    private int queryTime_;
    public bool HasQueryTime {
      get { return hasQueryTime; }
    }
    public int QueryTime {
      get { return queryTime_; }
    }
    
    public const int BatchNOFieldNumber = 6;
    private bool hasBatchNO;
    private string batchNO_ = "";
    public bool HasBatchNO {
      get { return hasBatchNO; }
    }
    public string BatchNO {
      get { return batchNO_; }
    }
    
    public const int SourceIPFieldNumber = 42;
    private bool hasSourceIP;
    private string sourceIP_ = "";
    public bool HasSourceIP {
      get { return hasSourceIP; }
    }
    public string SourceIP {
      get { return sourceIP_; }
    }
    
    public const int MachineIDFieldNumber = 44;
    private bool hasMachineID;
    private string machineID_ = "";
    public bool HasMachineID {
      get { return hasMachineID; }
    }
    public string MachineID {
      get { return machineID_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasUser) return false;
        if (!hasPassword) return false;
        if (!hasOrgId) return false;
        if (!hasQueryDate) return false;
        if (!hasQueryTime) return false;
        if (!hasBatchNO) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgQueryBatchInfoFieldNames;
      if (hasUser) {
        output.WriteString(1, field_names[7], User);
      }
      if (hasPassword) {
        output.WriteString(2, field_names[3], Password);
      }
      if (hasOrgId) {
        output.WriteString(3, field_names[2], OrgId);
      }
      if (hasQueryDate) {
        output.WriteInt32(4, field_names[4], QueryDate);
      }
      if (hasQueryTime) {
        output.WriteInt32(5, field_names[5], QueryTime);
      }
      if (hasBatchNO) {
        output.WriteString(6, field_names[0], BatchNO);
      }
      if (hasSourceIP) {
        output.WriteString(42, field_names[6], SourceIP);
      }
      if (hasMachineID) {
        output.WriteString(44, field_names[1], MachineID);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasUser) {
          size += pb::CodedOutputStream.ComputeStringSize(1, User);
        }
        if (hasPassword) {
          size += pb::CodedOutputStream.ComputeStringSize(2, Password);
        }
        if (hasOrgId) {
          size += pb::CodedOutputStream.ComputeStringSize(3, OrgId);
        }
        if (hasQueryDate) {
          size += pb::CodedOutputStream.ComputeInt32Size(4, QueryDate);
        }
        if (hasQueryTime) {
          size += pb::CodedOutputStream.ComputeInt32Size(5, QueryTime);
        }
        if (hasBatchNO) {
          size += pb::CodedOutputStream.ComputeStringSize(6, BatchNO);
        }
        if (hasSourceIP) {
          size += pb::CodedOutputStream.ComputeStringSize(42, SourceIP);
        }
        if (hasMachineID) {
          size += pb::CodedOutputStream.ComputeStringSize(44, MachineID);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static MsgQueryBatchInfo ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MsgQueryBatchInfo ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MsgQueryBatchInfo ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MsgQueryBatchInfo ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MsgQueryBatchInfo ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MsgQueryBatchInfo ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MsgQueryBatchInfo ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MsgQueryBatchInfo ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MsgQueryBatchInfo ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MsgQueryBatchInfo ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MsgQueryBatchInfo MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MsgQueryBatchInfo prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<MsgQueryBatchInfo, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MsgQueryBatchInfo cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MsgQueryBatchInfo result;
      
      private MsgQueryBatchInfo PrepareBuilder() {
        if (resultIsReadOnly) {
          MsgQueryBatchInfo original = result;
          result = new MsgQueryBatchInfo();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MsgQueryBatchInfo MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.logos.documents.definition.MsgQueryBatchInfo.Descriptor; }
      }
      
      public override MsgQueryBatchInfo DefaultInstanceForType {
        get { return global::com.logos.documents.definition.MsgQueryBatchInfo.DefaultInstance; }
      }
      
      public override MsgQueryBatchInfo BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MsgQueryBatchInfo) {
          return MergeFrom((MsgQueryBatchInfo) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MsgQueryBatchInfo other) {
        if (other == global::com.logos.documents.definition.MsgQueryBatchInfo.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasUser) {
          User = other.User;
        }
        if (other.HasPassword) {
          Password = other.Password;
        }
        if (other.HasOrgId) {
          OrgId = other.OrgId;
        }
        if (other.HasQueryDate) {
          QueryDate = other.QueryDate;
        }
        if (other.HasQueryTime) {
          QueryTime = other.QueryTime;
        }
        if (other.HasBatchNO) {
          BatchNO = other.BatchNO;
        }
        if (other.HasSourceIP) {
          SourceIP = other.SourceIP;
        }
        if (other.HasMachineID) {
          MachineID = other.MachineID;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgQueryBatchInfoFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgQueryBatchInfoFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasUser = input.ReadString(ref result.user_);
              break;
            }
            case 18: {
              result.hasPassword = input.ReadString(ref result.password_);
              break;
            }
            case 26: {
              result.hasOrgId = input.ReadString(ref result.orgId_);
              break;
            }
            case 32: {
              result.hasQueryDate = input.ReadInt32(ref result.queryDate_);
              break;
            }
            case 40: {
              result.hasQueryTime = input.ReadInt32(ref result.queryTime_);
              break;
            }
            case 50: {
              result.hasBatchNO = input.ReadString(ref result.batchNO_);
              break;
            }
            case 338: {
              result.hasSourceIP = input.ReadString(ref result.sourceIP_);
              break;
            }
            case 354: {
              result.hasMachineID = input.ReadString(ref result.machineID_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasUser {
        get { return result.hasUser; }
      }
      public string User {
        get { return result.User; }
        set { SetUser(value); }
      }
      public Builder SetUser(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUser = true;
        result.user_ = value;
        return this;
      }
      public Builder ClearUser() {
        PrepareBuilder();
        result.hasUser = false;
        result.user_ = "";
        return this;
      }
      
      public bool HasPassword {
        get { return result.hasPassword; }
      }
      public string Password {
        get { return result.Password; }
        set { SetPassword(value); }
      }
      public Builder SetPassword(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPassword = true;
        result.password_ = value;
        return this;
      }
      public Builder ClearPassword() {
        PrepareBuilder();
        result.hasPassword = false;
        result.password_ = "";
        return this;
      }
      
      public bool HasOrgId {
        get { return result.hasOrgId; }
      }
      public string OrgId {
        get { return result.OrgId; }
        set { SetOrgId(value); }
      }
      public Builder SetOrgId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasOrgId = true;
        result.orgId_ = value;
        return this;
      }
      public Builder ClearOrgId() {
        PrepareBuilder();
        result.hasOrgId = false;
        result.orgId_ = "";
        return this;
      }
      
      public bool HasQueryDate {
        get { return result.hasQueryDate; }
      }
      public int QueryDate {
        get { return result.QueryDate; }
        set { SetQueryDate(value); }
      }
      public Builder SetQueryDate(int value) {
        PrepareBuilder();
        result.hasQueryDate = true;
        result.queryDate_ = value;
        return this;
      }
      public Builder ClearQueryDate() {
        PrepareBuilder();
        result.hasQueryDate = false;
        result.queryDate_ = 0;
        return this;
      }
      
      public bool HasQueryTime {
        get { return result.hasQueryTime; }
      }
      public int QueryTime {
        get { return result.QueryTime; }
        set { SetQueryTime(value); }
      }
      public Builder SetQueryTime(int value) {
        PrepareBuilder();
        result.hasQueryTime = true;
        result.queryTime_ = value;
        return this;
      }
      public Builder ClearQueryTime() {
        PrepareBuilder();
        result.hasQueryTime = false;
        result.queryTime_ = 0;
        return this;
      }
      
      public bool HasBatchNO {
        get { return result.hasBatchNO; }
      }
      public string BatchNO {
        get { return result.BatchNO; }
        set { SetBatchNO(value); }
      }
      public Builder SetBatchNO(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBatchNO = true;
        result.batchNO_ = value;
        return this;
      }
      public Builder ClearBatchNO() {
        PrepareBuilder();
        result.hasBatchNO = false;
        result.batchNO_ = "";
        return this;
      }
      
      public bool HasSourceIP {
        get { return result.hasSourceIP; }
      }
      public string SourceIP {
        get { return result.SourceIP; }
        set { SetSourceIP(value); }
      }
      public Builder SetSourceIP(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSourceIP = true;
        result.sourceIP_ = value;
        return this;
      }
      public Builder ClearSourceIP() {
        PrepareBuilder();
        result.hasSourceIP = false;
        result.sourceIP_ = "";
        return this;
      }
      
      public bool HasMachineID {
        get { return result.hasMachineID; }
      }
      public string MachineID {
        get { return result.MachineID; }
        set { SetMachineID(value); }
      }
      public Builder SetMachineID(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMachineID = true;
        result.machineID_ = value;
        return this;
      }
      public Builder ClearMachineID() {
        PrepareBuilder();
        result.hasMachineID = false;
        result.machineID_ = "";
        return this;
      }
    }
    static MsgQueryBatchInfo() {
      object.ReferenceEquals(global::com.logos.documents.definition.LogosFileTransfer.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class MsgBatchInfo : pb::GeneratedMessage<MsgBatchInfo, MsgBatchInfo.Builder> {
    private MsgBatchInfo() { }
    private static readonly MsgBatchInfo defaultInstance = new MsgBatchInfo().MakeReadOnly();
    private static readonly string[] _msgBatchInfoFieldNames = new string[] { "BarCode", "BatchId", "CreateTime", "Creator", "FileInfos", "LastModified", "Operation", "OrgId", "Password", "ProvinceCode", "Remark", "ResultInfo", "SourceIP", "SysId", "Version" };
    private static readonly uint[] _msgBatchInfoFieldTags = new uint[] { 322, 10, 18, 26, 178, 42, 160, 242, 410, 250, 50, 402, 338, 274, 34 };
    public static MsgBatchInfo DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MsgBatchInfo DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MsgBatchInfo ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.logos.documents.definition.LogosFileTransfer.internal__static_com_logos_documents_definition_MsgBatchInfo__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MsgBatchInfo, MsgBatchInfo.Builder> InternalFieldAccessors {
      get { return global::com.logos.documents.definition.LogosFileTransfer.internal__static_com_logos_documents_definition_MsgBatchInfo__FieldAccessorTable; }
    }
    
    public const int BatchIdFieldNumber = 1;
    private bool hasBatchId;
    private string batchId_ = "";
    public bool HasBatchId {
      get { return hasBatchId; }
    }
    public string BatchId {
      get { return batchId_; }
    }
    
    public const int CreateTimeFieldNumber = 2;
    private bool hasCreateTime;
    private string createTime_ = "";
    public bool HasCreateTime {
      get { return hasCreateTime; }
    }
    public string CreateTime {
      get { return createTime_; }
    }
    
    public const int CreatorFieldNumber = 3;
    private bool hasCreator;
    private string creator_ = "";
    public bool HasCreator {
      get { return hasCreator; }
    }
    public string Creator {
      get { return creator_; }
    }
    
    public const int VersionFieldNumber = 4;
    private bool hasVersion;
    private string version_ = "";
    public bool HasVersion {
      get { return hasVersion; }
    }
    public string Version {
      get { return version_; }
    }
    
    public const int LastModifiedFieldNumber = 5;
    private bool hasLastModified;
    private string lastModified_ = "";
    public bool HasLastModified {
      get { return hasLastModified; }
    }
    public string LastModified {
      get { return lastModified_; }
    }
    
    public const int RemarkFieldNumber = 6;
    private bool hasRemark;
    private string remark_ = "";
    public bool HasRemark {
      get { return hasRemark; }
    }
    public string Remark {
      get { return remark_; }
    }
    
    public const int OperationFieldNumber = 20;
    private bool hasOperation;
    private global::com.logos.documents.definition.EOperType operation_ = global::com.logos.documents.definition.EOperType.ADD;
    public bool HasOperation {
      get { return hasOperation; }
    }
    public global::com.logos.documents.definition.EOperType Operation {
      get { return operation_; }
    }
    
    public const int FileInfosFieldNumber = 22;
    private pbc::PopsicleList<global::com.logos.documents.definition.MsgFileInfo> fileInfos_ = new pbc::PopsicleList<global::com.logos.documents.definition.MsgFileInfo>();
    public scg::IList<global::com.logos.documents.definition.MsgFileInfo> FileInfosList {
      get { return fileInfos_; }
    }
    public int FileInfosCount {
      get { return fileInfos_.Count; }
    }
    public global::com.logos.documents.definition.MsgFileInfo GetFileInfos(int index) {
      return fileInfos_[index];
    }
    
    public const int ProvinceCodeFieldNumber = 31;
    private bool hasProvinceCode;
    private string provinceCode_ = "";
    public bool HasProvinceCode {
      get { return hasProvinceCode; }
    }
    public string ProvinceCode {
      get { return provinceCode_; }
    }
    
    public const int OrgIdFieldNumber = 30;
    private bool hasOrgId;
    private string orgId_ = "";
    public bool HasOrgId {
      get { return hasOrgId; }
    }
    public string OrgId {
      get { return orgId_; }
    }
    
    public const int SysIdFieldNumber = 34;
    private bool hasSysId;
    private string sysId_ = "";
    public bool HasSysId {
      get { return hasSysId; }
    }
    public string SysId {
      get { return sysId_; }
    }
    
    public const int BarCodeFieldNumber = 40;
    private bool hasBarCode;
    private string barCode_ = "";
    public bool HasBarCode {
      get { return hasBarCode; }
    }
    public string BarCode {
      get { return barCode_; }
    }
    
    public const int SourceIPFieldNumber = 42;
    private bool hasSourceIP;
    private string sourceIP_ = "";
    public bool HasSourceIP {
      get { return hasSourceIP; }
    }
    public string SourceIP {
      get { return sourceIP_; }
    }
    
    public const int ResultInfoFieldNumber = 50;
    private bool hasResultInfo;
    private global::com.logos.documents.definition.MsgResultInfo resultInfo_;
    public bool HasResultInfo {
      get { return hasResultInfo; }
    }
    public global::com.logos.documents.definition.MsgResultInfo ResultInfo {
      get { return resultInfo_ ?? global::com.logos.documents.definition.MsgResultInfo.DefaultInstance; }
    }
    
    public const int PasswordFieldNumber = 51;
    private bool hasPassword;
    private string password_ = "";
    public bool HasPassword {
      get { return hasPassword; }
    }
    public string Password {
      get { return password_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasBatchId) return false;
        if (!hasCreateTime) return false;
        if (!hasCreator) return false;
        if (!hasLastModified) return false;
        if (!hasOperation) return false;
        foreach (global::com.logos.documents.definition.MsgFileInfo element in FileInfosList) {
          if (!element.IsInitialized) return false;
        }
        if (HasResultInfo) {
          if (!ResultInfo.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgBatchInfoFieldNames;
      if (hasBatchId) {
        output.WriteString(1, field_names[1], BatchId);
      }
      if (hasCreateTime) {
        output.WriteString(2, field_names[2], CreateTime);
      }
      if (hasCreator) {
        output.WriteString(3, field_names[3], Creator);
      }
      if (hasVersion) {
        output.WriteString(4, field_names[14], Version);
      }
      if (hasLastModified) {
        output.WriteString(5, field_names[5], LastModified);
      }
      if (hasRemark) {
        output.WriteString(6, field_names[10], Remark);
      }
      if (hasOperation) {
        output.WriteEnum(20, field_names[6], (int) Operation, Operation);
      }
      if (fileInfos_.Count > 0) {
        output.WriteMessageArray(22, field_names[4], fileInfos_);
      }
      if (hasOrgId) {
        output.WriteString(30, field_names[7], OrgId);
      }
      if (hasProvinceCode) {
        output.WriteString(31, field_names[9], ProvinceCode);
      }
      if (hasSysId) {
        output.WriteString(34, field_names[13], SysId);
      }
      if (hasBarCode) {
        output.WriteString(40, field_names[0], BarCode);
      }
      if (hasSourceIP) {
        output.WriteString(42, field_names[12], SourceIP);
      }
      if (hasResultInfo) {
        output.WriteMessage(50, field_names[11], ResultInfo);
      }
      if (hasPassword) {
        output.WriteString(51, field_names[8], Password);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasBatchId) {
          size += pb::CodedOutputStream.ComputeStringSize(1, BatchId);
        }
        if (hasCreateTime) {
          size += pb::CodedOutputStream.ComputeStringSize(2, CreateTime);
        }
        if (hasCreator) {
          size += pb::CodedOutputStream.ComputeStringSize(3, Creator);
        }
        if (hasVersion) {
          size += pb::CodedOutputStream.ComputeStringSize(4, Version);
        }
        if (hasLastModified) {
          size += pb::CodedOutputStream.ComputeStringSize(5, LastModified);
        }
        if (hasRemark) {
          size += pb::CodedOutputStream.ComputeStringSize(6, Remark);
        }
        if (hasOperation) {
          size += pb::CodedOutputStream.ComputeEnumSize(20, (int) Operation);
        }
        foreach (global::com.logos.documents.definition.MsgFileInfo element in FileInfosList) {
          size += pb::CodedOutputStream.ComputeMessageSize(22, element);
        }
        if (hasProvinceCode) {
          size += pb::CodedOutputStream.ComputeStringSize(31, ProvinceCode);
        }
        if (hasOrgId) {
          size += pb::CodedOutputStream.ComputeStringSize(30, OrgId);
        }
        if (hasSysId) {
          size += pb::CodedOutputStream.ComputeStringSize(34, SysId);
        }
        if (hasBarCode) {
          size += pb::CodedOutputStream.ComputeStringSize(40, BarCode);
        }
        if (hasSourceIP) {
          size += pb::CodedOutputStream.ComputeStringSize(42, SourceIP);
        }
        if (hasResultInfo) {
          size += pb::CodedOutputStream.ComputeMessageSize(50, ResultInfo);
        }
        if (hasPassword) {
          size += pb::CodedOutputStream.ComputeStringSize(51, Password);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static MsgBatchInfo ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MsgBatchInfo ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MsgBatchInfo ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MsgBatchInfo ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MsgBatchInfo ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MsgBatchInfo ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MsgBatchInfo ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MsgBatchInfo ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MsgBatchInfo ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MsgBatchInfo ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MsgBatchInfo MakeReadOnly() {
      fileInfos_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MsgBatchInfo prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<MsgBatchInfo, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MsgBatchInfo cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MsgBatchInfo result;
      
      private MsgBatchInfo PrepareBuilder() {
        if (resultIsReadOnly) {
          MsgBatchInfo original = result;
          result = new MsgBatchInfo();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MsgBatchInfo MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.logos.documents.definition.MsgBatchInfo.Descriptor; }
      }
      
      public override MsgBatchInfo DefaultInstanceForType {
        get { return global::com.logos.documents.definition.MsgBatchInfo.DefaultInstance; }
      }
      
      public override MsgBatchInfo BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MsgBatchInfo) {
          return MergeFrom((MsgBatchInfo) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MsgBatchInfo other) {
        if (other == global::com.logos.documents.definition.MsgBatchInfo.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasBatchId) {
          BatchId = other.BatchId;
        }
        if (other.HasCreateTime) {
          CreateTime = other.CreateTime;
        }
        if (other.HasCreator) {
          Creator = other.Creator;
        }
        if (other.HasVersion) {
          Version = other.Version;
        }
        if (other.HasLastModified) {
          LastModified = other.LastModified;
        }
        if (other.HasRemark) {
          Remark = other.Remark;
        }
        if (other.HasOperation) {
          Operation = other.Operation;
        }
        if (other.fileInfos_.Count != 0) {
          result.fileInfos_.Add(other.fileInfos_);
        }
        if (other.HasProvinceCode) {
          ProvinceCode = other.ProvinceCode;
        }
        if (other.HasOrgId) {
          OrgId = other.OrgId;
        }
        if (other.HasSysId) {
          SysId = other.SysId;
        }
        if (other.HasBarCode) {
          BarCode = other.BarCode;
        }
        if (other.HasSourceIP) {
          SourceIP = other.SourceIP;
        }
        if (other.HasResultInfo) {
          MergeResultInfo(other.ResultInfo);
        }
        if (other.HasPassword) {
          Password = other.Password;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgBatchInfoFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgBatchInfoFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasBatchId = input.ReadString(ref result.batchId_);
              break;
            }
            case 18: {
              result.hasCreateTime = input.ReadString(ref result.createTime_);
              break;
            }
            case 26: {
              result.hasCreator = input.ReadString(ref result.creator_);
              break;
            }
            case 34: {
              result.hasVersion = input.ReadString(ref result.version_);
              break;
            }
            case 42: {
              result.hasLastModified = input.ReadString(ref result.lastModified_);
              break;
            }
            case 50: {
              result.hasRemark = input.ReadString(ref result.remark_);
              break;
            }
            case 160: {
              object unknown;
              if(input.ReadEnum(ref result.operation_, out unknown)) {
                result.hasOperation = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(20, (ulong)(int)unknown);
              }
              break;
            }
            case 178: {
              input.ReadMessageArray(tag, field_name, result.fileInfos_, global::com.logos.documents.definition.MsgFileInfo.DefaultInstance, extensionRegistry);
              break;
            }
            case 242: {
              result.hasOrgId = input.ReadString(ref result.orgId_);
              break;
            }
            case 250: {
              result.hasProvinceCode = input.ReadString(ref result.provinceCode_);
              break;
            }
            case 274: {
              result.hasSysId = input.ReadString(ref result.sysId_);
              break;
            }
            case 322: {
              result.hasBarCode = input.ReadString(ref result.barCode_);
              break;
            }
            case 338: {
              result.hasSourceIP = input.ReadString(ref result.sourceIP_);
              break;
            }
            case 402: {
              global::com.logos.documents.definition.MsgResultInfo.Builder subBuilder = global::com.logos.documents.definition.MsgResultInfo.CreateBuilder();
              if (result.hasResultInfo) {
                subBuilder.MergeFrom(ResultInfo);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ResultInfo = subBuilder.BuildPartial();
              break;
            }
            case 410: {
              result.hasPassword = input.ReadString(ref result.password_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasBatchId {
        get { return result.hasBatchId; }
      }
      public string BatchId {
        get { return result.BatchId; }
        set { SetBatchId(value); }
      }
      public Builder SetBatchId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBatchId = true;
        result.batchId_ = value;
        return this;
      }
      public Builder ClearBatchId() {
        PrepareBuilder();
        result.hasBatchId = false;
        result.batchId_ = "";
        return this;
      }
      
      public bool HasCreateTime {
        get { return result.hasCreateTime; }
      }
      public string CreateTime {
        get { return result.CreateTime; }
        set { SetCreateTime(value); }
      }
      public Builder SetCreateTime(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCreateTime = true;
        result.createTime_ = value;
        return this;
      }
      public Builder ClearCreateTime() {
        PrepareBuilder();
        result.hasCreateTime = false;
        result.createTime_ = "";
        return this;
      }
      
      public bool HasCreator {
        get { return result.hasCreator; }
      }
      public string Creator {
        get { return result.Creator; }
        set { SetCreator(value); }
      }
      public Builder SetCreator(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCreator = true;
        result.creator_ = value;
        return this;
      }
      public Builder ClearCreator() {
        PrepareBuilder();
        result.hasCreator = false;
        result.creator_ = "";
        return this;
      }
      
      public bool HasVersion {
        get { return result.hasVersion; }
      }
      public string Version {
        get { return result.Version; }
        set { SetVersion(value); }
      }
      public Builder SetVersion(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasVersion = true;
        result.version_ = value;
        return this;
      }
      public Builder ClearVersion() {
        PrepareBuilder();
        result.hasVersion = false;
        result.version_ = "";
        return this;
      }
      
      public bool HasLastModified {
        get { return result.hasLastModified; }
      }
      public string LastModified {
        get { return result.LastModified; }
        set { SetLastModified(value); }
      }
      public Builder SetLastModified(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasLastModified = true;
        result.lastModified_ = value;
        return this;
      }
      public Builder ClearLastModified() {
        PrepareBuilder();
        result.hasLastModified = false;
        result.lastModified_ = "";
        return this;
      }
      
      public bool HasRemark {
        get { return result.hasRemark; }
      }
      public string Remark {
        get { return result.Remark; }
        set { SetRemark(value); }
      }
      public Builder SetRemark(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRemark = true;
        result.remark_ = value;
        return this;
      }
      public Builder ClearRemark() {
        PrepareBuilder();
        result.hasRemark = false;
        result.remark_ = "";
        return this;
      }
      
      public bool HasOperation {
       get { return result.hasOperation; }
      }
      public global::com.logos.documents.definition.EOperType Operation {
        get { return result.Operation; }
        set { SetOperation(value); }
      }
      public Builder SetOperation(global::com.logos.documents.definition.EOperType value) {
        PrepareBuilder();
        result.hasOperation = true;
        result.operation_ = value;
        return this;
      }
      public Builder ClearOperation() {
        PrepareBuilder();
        result.hasOperation = false;
        result.operation_ = global::com.logos.documents.definition.EOperType.ADD;
        return this;
      }
      
      public pbc::IPopsicleList<global::com.logos.documents.definition.MsgFileInfo> FileInfosList {
        get { return PrepareBuilder().fileInfos_; }
      }
      public int FileInfosCount {
        get { return result.FileInfosCount; }
      }
      public global::com.logos.documents.definition.MsgFileInfo GetFileInfos(int index) {
        return result.GetFileInfos(index);
      }
      public Builder SetFileInfos(int index, global::com.logos.documents.definition.MsgFileInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.fileInfos_[index] = value;
        return this;
      }
      public Builder SetFileInfos(int index, global::com.logos.documents.definition.MsgFileInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.fileInfos_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddFileInfos(global::com.logos.documents.definition.MsgFileInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.fileInfos_.Add(value);
        return this;
      }
      public Builder AddFileInfos(global::com.logos.documents.definition.MsgFileInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.fileInfos_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeFileInfos(scg::IEnumerable<global::com.logos.documents.definition.MsgFileInfo> values) {
        PrepareBuilder();
        result.fileInfos_.Add(values);
        return this;
      }
      public Builder ClearFileInfos() {
        PrepareBuilder();
        result.fileInfos_.Clear();
        return this;
      }
      
      public bool HasProvinceCode {
        get { return result.hasProvinceCode; }
      }
      public string ProvinceCode {
        get { return result.ProvinceCode; }
        set { SetProvinceCode(value); }
      }
      public Builder SetProvinceCode(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasProvinceCode = true;
        result.provinceCode_ = value;
        return this;
      }
      public Builder ClearProvinceCode() {
        PrepareBuilder();
        result.hasProvinceCode = false;
        result.provinceCode_ = "";
        return this;
      }
      
      public bool HasOrgId {
        get { return result.hasOrgId; }
      }
      public string OrgId {
        get { return result.OrgId; }
        set { SetOrgId(value); }
      }
      public Builder SetOrgId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasOrgId = true;
        result.orgId_ = value;
        return this;
      }
      public Builder ClearOrgId() {
        PrepareBuilder();
        result.hasOrgId = false;
        result.orgId_ = "";
        return this;
      }
      
      public bool HasSysId {
        get { return result.hasSysId; }
      }
      public string SysId {
        get { return result.SysId; }
        set { SetSysId(value); }
      }
      public Builder SetSysId(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSysId = true;
        result.sysId_ = value;
        return this;
      }
      public Builder ClearSysId() {
        PrepareBuilder();
        result.hasSysId = false;
        result.sysId_ = "";
        return this;
      }
      
      public bool HasBarCode {
        get { return result.hasBarCode; }
      }
      public string BarCode {
        get { return result.BarCode; }
        set { SetBarCode(value); }
      }
      public Builder SetBarCode(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBarCode = true;
        result.barCode_ = value;
        return this;
      }
      public Builder ClearBarCode() {
        PrepareBuilder();
        result.hasBarCode = false;
        result.barCode_ = "";
        return this;
      }
      
      public bool HasSourceIP {
        get { return result.hasSourceIP; }
      }
      public string SourceIP {
        get { return result.SourceIP; }
        set { SetSourceIP(value); }
      }
      public Builder SetSourceIP(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSourceIP = true;
        result.sourceIP_ = value;
        return this;
      }
      public Builder ClearSourceIP() {
        PrepareBuilder();
        result.hasSourceIP = false;
        result.sourceIP_ = "";
        return this;
      }
      
      public bool HasResultInfo {
       get { return result.hasResultInfo; }
      }
      public global::com.logos.documents.definition.MsgResultInfo ResultInfo {
        get { return result.ResultInfo; }
        set { SetResultInfo(value); }
      }
      public Builder SetResultInfo(global::com.logos.documents.definition.MsgResultInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasResultInfo = true;
        result.resultInfo_ = value;
        return this;
      }
      public Builder SetResultInfo(global::com.logos.documents.definition.MsgResultInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasResultInfo = true;
        result.resultInfo_ = builderForValue.Build();
        return this;
      }
      public Builder MergeResultInfo(global::com.logos.documents.definition.MsgResultInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasResultInfo &&
            result.resultInfo_ != global::com.logos.documents.definition.MsgResultInfo.DefaultInstance) {
            result.resultInfo_ = global::com.logos.documents.definition.MsgResultInfo.CreateBuilder(result.resultInfo_).MergeFrom(value).BuildPartial();
        } else {
          result.resultInfo_ = value;
        }
        result.hasResultInfo = true;
        return this;
      }
      public Builder ClearResultInfo() {
        PrepareBuilder();
        result.hasResultInfo = false;
        result.resultInfo_ = null;
        return this;
      }
      
      public bool HasPassword {
        get { return result.hasPassword; }
      }
      public string Password {
        get { return result.Password; }
        set { SetPassword(value); }
      }
      public Builder SetPassword(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPassword = true;
        result.password_ = value;
        return this;
      }
      public Builder ClearPassword() {
        PrepareBuilder();
        result.hasPassword = false;
        result.password_ = "";
        return this;
      }
    }
    static MsgBatchInfo() {
      object.ReferenceEquals(global::com.logos.documents.definition.LogosFileTransfer.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class MsgResponsInfo : pb::GeneratedMessage<MsgResponsInfo, MsgResponsInfo.Builder> {
    private MsgResponsInfo() { }
    private static readonly MsgResponsInfo defaultInstance = new MsgResponsInfo().MakeReadOnly();
    private static readonly string[] _msgResponsInfoFieldNames = new string[] { "ResultInfo" };
    private static readonly uint[] _msgResponsInfoFieldTags = new uint[] { 10 };
    public static MsgResponsInfo DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MsgResponsInfo DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MsgResponsInfo ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::com.logos.documents.definition.LogosFileTransfer.internal__static_com_logos_documents_definition_MsgResponsInfo__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MsgResponsInfo, MsgResponsInfo.Builder> InternalFieldAccessors {
      get { return global::com.logos.documents.definition.LogosFileTransfer.internal__static_com_logos_documents_definition_MsgResponsInfo__FieldAccessorTable; }
    }
    
    public const int ResultInfoFieldNumber = 1;
    private bool hasResultInfo;
    private global::com.logos.documents.definition.MsgResultInfo resultInfo_;
    public bool HasResultInfo {
      get { return hasResultInfo; }
    }
    public global::com.logos.documents.definition.MsgResultInfo ResultInfo {
      get { return resultInfo_ ?? global::com.logos.documents.definition.MsgResultInfo.DefaultInstance; }
    }
    
    public override bool IsInitialized {
      get {
        if (HasResultInfo) {
          if (!ResultInfo.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgResponsInfoFieldNames;
      if (hasResultInfo) {
        output.WriteMessage(1, field_names[0], ResultInfo);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasResultInfo) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, ResultInfo);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static MsgResponsInfo ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MsgResponsInfo ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MsgResponsInfo ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MsgResponsInfo ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MsgResponsInfo ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MsgResponsInfo ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MsgResponsInfo ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MsgResponsInfo ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MsgResponsInfo ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MsgResponsInfo ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MsgResponsInfo MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MsgResponsInfo prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<MsgResponsInfo, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MsgResponsInfo cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MsgResponsInfo result;
      
      private MsgResponsInfo PrepareBuilder() {
        if (resultIsReadOnly) {
          MsgResponsInfo original = result;
          result = new MsgResponsInfo();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MsgResponsInfo MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::com.logos.documents.definition.MsgResponsInfo.Descriptor; }
      }
      
      public override MsgResponsInfo DefaultInstanceForType {
        get { return global::com.logos.documents.definition.MsgResponsInfo.DefaultInstance; }
      }
      
      public override MsgResponsInfo BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MsgResponsInfo) {
          return MergeFrom((MsgResponsInfo) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MsgResponsInfo other) {
        if (other == global::com.logos.documents.definition.MsgResponsInfo.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasResultInfo) {
          MergeResultInfo(other.ResultInfo);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgResponsInfoFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgResponsInfoFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              global::com.logos.documents.definition.MsgResultInfo.Builder subBuilder = global::com.logos.documents.definition.MsgResultInfo.CreateBuilder();
              if (result.hasResultInfo) {
                subBuilder.MergeFrom(ResultInfo);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ResultInfo = subBuilder.BuildPartial();
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasResultInfo {
       get { return result.hasResultInfo; }
      }
      public global::com.logos.documents.definition.MsgResultInfo ResultInfo {
        get { return result.ResultInfo; }
        set { SetResultInfo(value); }
      }
      public Builder SetResultInfo(global::com.logos.documents.definition.MsgResultInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasResultInfo = true;
        result.resultInfo_ = value;
        return this;
      }
      public Builder SetResultInfo(global::com.logos.documents.definition.MsgResultInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasResultInfo = true;
        result.resultInfo_ = builderForValue.Build();
        return this;
      }
      public Builder MergeResultInfo(global::com.logos.documents.definition.MsgResultInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasResultInfo &&
            result.resultInfo_ != global::com.logos.documents.definition.MsgResultInfo.DefaultInstance) {
            result.resultInfo_ = global::com.logos.documents.definition.MsgResultInfo.CreateBuilder(result.resultInfo_).MergeFrom(value).BuildPartial();
        } else {
          result.resultInfo_ = value;
        }
        result.hasResultInfo = true;
        return this;
      }
      public Builder ClearResultInfo() {
        PrepareBuilder();
        result.hasResultInfo = false;
        result.resultInfo_ = null;
        return this;
      }
    }
    static MsgResponsInfo() {
      object.ReferenceEquals(global::com.logos.documents.definition.LogosFileTransfer.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
