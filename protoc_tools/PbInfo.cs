// Generated by ProtoGen, Version=2.4.1.521, Culture=neutral, PublicKeyToken=17b3b1f090c3ea48.  DO NOT EDIT!
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace DocScanner.Bean.pb {
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public static partial class PbInfo {
  
    #region Extension registration
    public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
    }
    #endregion
    #region Static variables
    internal static pbd::MessageDescriptor internal__static_DocScanner_Bean_pb_MsgResultInfo__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DocScanner.Bean.pb.MsgResultInfo, global::DocScanner.Bean.pb.MsgResultInfo.Builder> internal__static_DocScanner_Bean_pb_MsgResultInfo__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DocScanner_Bean_pb_MsgNoteInfo__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DocScanner.Bean.pb.MsgNoteInfo, global::DocScanner.Bean.pb.MsgNoteInfo.Builder> internal__static_DocScanner_Bean_pb_MsgNoteInfo__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DocScanner_Bean_pb_MsgFileInfo__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DocScanner.Bean.pb.MsgFileInfo, global::DocScanner.Bean.pb.MsgFileInfo.Builder> internal__static_DocScanner_Bean_pb_MsgFileInfo__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DocScanner_Bean_pb_MsgQueryBatchInfo__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DocScanner.Bean.pb.MsgQueryBatchInfo, global::DocScanner.Bean.pb.MsgQueryBatchInfo.Builder> internal__static_DocScanner_Bean_pb_MsgQueryBatchInfo__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DocScanner_Bean_pb_MsgOptionQueryBatchs__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DocScanner.Bean.pb.MsgOptionQueryBatchs, global::DocScanner.Bean.pb.MsgOptionQueryBatchs.Builder> internal__static_DocScanner_Bean_pb_MsgOptionQueryBatchs__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DocScanner_Bean_pb_MsgRspOptionQueryBatchs__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DocScanner.Bean.pb.MsgRspOptionQueryBatchs, global::DocScanner.Bean.pb.MsgRspOptionQueryBatchs.Builder> internal__static_DocScanner_Bean_pb_MsgRspOptionQueryBatchs__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DocScanner_Bean_pb_MsgBatchInfo__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DocScanner.Bean.pb.MsgBatchInfo, global::DocScanner.Bean.pb.MsgBatchInfo.Builder> internal__static_DocScanner_Bean_pb_MsgBatchInfo__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DocScanner_Bean_pb_MsgAccountInfo__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DocScanner.Bean.pb.MsgAccountInfo, global::DocScanner.Bean.pb.MsgAccountInfo.Builder> internal__static_DocScanner_Bean_pb_MsgAccountInfo__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DocScanner_Bean_pb_MsgBatchHisQry__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DocScanner.Bean.pb.MsgBatchHisQry, global::DocScanner.Bean.pb.MsgBatchHisQry.Builder> internal__static_DocScanner_Bean_pb_MsgBatchHisQry__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DocScanner_Bean_pb_MsgBatchHisRsp__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DocScanner.Bean.pb.MsgBatchHisRsp, global::DocScanner.Bean.pb.MsgBatchHisRsp.Builder> internal__static_DocScanner_Bean_pb_MsgBatchHisRsp__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DocScanner_Bean_pb_MsgServersListQry__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DocScanner.Bean.pb.MsgServersListQry, global::DocScanner.Bean.pb.MsgServersListQry.Builder> internal__static_DocScanner_Bean_pb_MsgServersListQry__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DocScanner_Bean_pb_MsgServersListRsp__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DocScanner.Bean.pb.MsgServersListRsp, global::DocScanner.Bean.pb.MsgServersListRsp.Builder> internal__static_DocScanner_Bean_pb_MsgServersListRsp__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DocScanner_Bean_pb_MsgServerInfoQry__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DocScanner.Bean.pb.MsgServerInfoQry, global::DocScanner.Bean.pb.MsgServerInfoQry.Builder> internal__static_DocScanner_Bean_pb_MsgServerInfoQry__FieldAccessorTable;
    internal static pbd::MessageDescriptor internal__static_DocScanner_Bean_pb_MsgServerInfoRsp__Descriptor;
    internal static pb::FieldAccess.FieldAccessorTable<global::DocScanner.Bean.pb.MsgServerInfoRsp, global::DocScanner.Bean.pb.MsgServerInfoRsp.Builder> internal__static_DocScanner_Bean_pb_MsgServerInfoRsp__FieldAccessorTable;
    #endregion
    #region Descriptor
    public static pbd::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbd::FileDescriptor descriptor;
    
    static PbInfo() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          "CgxQYkluZm8ucHJvdG8SEkRvY1NjYW5uZXIuQmVhbi5wYiKLAQoNTXNnUmVz" + 
          "dWx0SW5mbxIxCgZTdGF0dXMYASACKA4yIS5Eb2NTY2FubmVyLkJlYW4ucGIu" + 
          "RVJlc3VsdFN0YXR1cxILCgNNc2cYAiACKAkSDwoHQmF0Y2hOTxgFIAEoCRIU" + 
          "CgxDdXJGaWxlSW5kZXgYBiABKAUSEwoLQ3VyRmlsZU5hbWUYByABKAkiwQIK" + 
          "C01zZ05vdGVJbmZvEg8KB0F1dGhvcjEYASACKAkSEAoIVmVyc2lvbjIYAiAC" + 
          "KAUSEwoLQ3JlYXRlVGltZTQYBCACKAkSDwoHUmVtYXJrNRgFIAEoCRIRCglO" + 
          "b3RlTmFtZTYYBiACKAkSEAoITm90ZU1zZzcYByACKAkSEQoJRmlsZUxpbms4" + 
          "GAggAigJEhQKDEZpbGVNRDVMaW5rORgJIAIoCRIyCgtPcGVyYXRpb24xMBgK" + 
          "IAIoDjIdLkRvY1NjYW5uZXIuQmVhbi5wYi5FT3BlclR5cGUSEQoJUmVnaW9u" + 
          "WDExGAsgAigFEhEKCVJlZ2lvblkxMhgMIAIoBRIVCg1SZWdpb25XaWR0aDEz" + 
          "GA0gAigFEhYKDlJlZ2lvbkhlaWdodDE0GA4gAigFEhIKCkVkaXRhYmxlMTUY" + 
          "DyABKAgixAMKC01zZ0ZpbGVJbmZvEg8KB0F1dGhvcjEYASACKAkSEAoIVmVy" + 
          "c2lvbjIYAiACKAUSEwoLQ3JlYXRlVGltZTQYBCACKAkSDwoHUmVtYXJrNRgF" + 
          "IAEoCRIRCglGaWxlTmFtZTYYBiACKAkSEAoIRmlsZVVSTDcYByABKAkSDwoH" + 
          "RmlsZU5POBgIIAIoCRIQCghGaWxlTUQ1ORgJIAIoCRISCgpGaWxlU2l6ZTEw" + 
          "GAogAigFEg4KBkRhdGExMRgLIAEoDBIyCgtPcGVyYXRpb24xMhgMIAIoDjId" + 
          "LkRvY1NjYW5uZXIuQmVhbi5wYi5FT3BlclR5cGUSEQoJQmF0Y2hOTzEzGA0g" + 
          "AigJEhIKCkNhdGVnb3J5MTQYDiACKAkSMAoHTm90ZXMxNRgPIAMoCzIfLkRv" + 
          "Y1NjYW5uZXIuQmVhbi5wYi5Nc2dOb3RlSW5mbxIWCg5leEZhUGlhb0NvZGUx" + 
          "NhgQIAEoCRISCgpFZGl0YWJsZTE4GBIgASgIEhgKEGV4U2hlbmhlUmVzdWx0" + 
          "MTkYEyABKAUSGAoQZXhTaGVuaGVSZW1hcmsyMBgUIAEoCRITCgtMb2NhbFBh" + 
          "dGgyMRgVIAEoCSK6AQoRTXNnUXVlcnlCYXRjaEluZm8SDQoFVXNlcjEYASAC" + 
          "KAkSEQoJUGFzc3dvcmQyGAIgAigJEg4KBk9yZ0lEMxgDIAIoCRISCgpRdWVy" + 
          "eURhdGU0GAQgAigFEhIKClF1ZXJ5VGltZTUYBSACKAUSEAoIQmF0Y2hOTzYY" + 
          "BiACKAkSEAoIVmVyc2lvbjcYByACKAUSEgoKU291cmNlSVA0MhgqIAEoCRIT" + 
          "CgtNYWNoaW5lSUQ0NBgsIAEoCSI4ChRNc2dPcHRpb25RdWVyeUJhdGNocxIN" + 
          "CgVVc2VyMRgBIAIoCRIRCglQYXNzd29yZDIYAiACKAkiLAoXTXNnUnNwT3B0" + 
          "aW9uUXVlcnlCYXRjaHMSEQoJQmF0Y2hOT3MyGAIgAygJIu4DCgxNc2dCYXRj" + 
          "aEluZm8SDwoHQXV0aG9yMRgBIAIoCRIQCghWZXJzaW9uMhgCIAIoBRITCgtD" + 
          "cmVhdGVUaW1lNBgEIAIoCRIPCgdSZW1hcms1GAUgASgJEhAKCEJhdGNoTk82" + 
          "GAYgAigJEg4KBlRpdGxlNxgHIAEoCRIxCgpPcGVyYXRpb244GAggAigOMh0u" + 
          "RG9jU2Nhbm5lci5CZWFuLnBiLkVPcGVyVHlwZRIzCgpGaWxlSW5mb3M5GAkg" + 
          "AygLMh8uRG9jU2Nhbm5lci5CZWFuLnBiLk1zZ0ZpbGVJbmZvEg8KB09yZ0lE" + 
          "MTAYCiABKAkSEwoLQnVzaVN5c0lkMTEYCyABKAkSFAoMQnVzaVR5cGVJZDEy" + 
          "GAwgASgJEhEKCUJhckNvZGUxMxgNIAEoCRISCgpTb3VyY2VJUDE0GA4gASgJ" + 
          "EhMKC01hY2hpbmVJRDE1GA8gASgJEhIKClBhc3N3b3JkMTYYECACKAkSNwoM" + 
          "UmVzdWx0SW5mbzE3GBEgASgLMiEuRG9jU2Nhbm5lci5CZWFuLnBiLk1zZ1Jl" + 
          "c3VsdEluZm8SEgoKRWRpdGFibGUxOBgSIAEoCBIYChBleFNoZW5oZVJlc3Vs" + 
          "dDE5GBMgASgFEhgKEGV4U2hlbmhlUmVtYXJrMjAYFCABKAkiQgoOTXNnQWNj" + 
          "b3VudEluZm8SDQoFVXNlcjEYASACKAkSEQoJUGFzc3dvcmQyGAIgAigJEg4K" + 
          "Bk9yZ0lEMxgDIAIoCSJECg5Nc2dCYXRjaEhpc1FyeRINCgVVc2VyMRgBIAIo" + 
          "CRIRCglQYXNzd29yZDIYAiACKAkSEAoIQmF0Y2hOTzMYAyACKAkiQwoOTXNn" + 
          "QmF0Y2hIaXNSc3ASMQoHYmF0Y2hzMRgBIAMoCzIgLkRvY1NjYW5uZXIuQmVh" + 
          "bi5wYi5Nc2dCYXRjaEluZm8iEwoRTXNnU2VydmVyc0xpc3RRcnkiKAoRTXNn" + 
          "U2VydmVyc0xpc3RSc3ASEwoLc2VydmVybGlzdDEYASADKAkiEgoQTXNnU2Vy" + 
          "dmVySW5mb1FyeSIjChBNc2dTZXJ2ZXJJbmZvUnNwEg8KB0J1cmRlbjEYASAC" + 
          "KAUqdgoJRU9wZXJUeXBlEhoKFmVGUk9NX1NFUlZFUl9OT1RDSEFOR0UQABII" + 
          "CgRlQUREEAESCAoEZURFTBACEggKBGVVUEQQBBIMCghlVVBETk9URRAIEhAK" + 
          "DGVVUERBVEVCQVNJQxAQEg8KC2VVUERBVEVGSUxFECAqOgoKRVByaXZpbGVn" + 
          "ZRIJCgVlTm9uZRAAEgkKBWVWaWV3EAESCwoHZVVwZGF0ZRACEgkKBWVGdWxs" + 
          "EAQqOwoNRVJlc3VsdFN0YXR1cxIMCghlU3VjY2VzcxAAEgsKB2VGYWlsZWQQ" + 
          "ARIPCgtlT25Qcm9ncmVzcxACQiUKFWNuLm5ldC5zaW5vZGF0YS5jbS5wYkIM" + 
          "UHJvdG9CdWZJbmZv");
      pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
        descriptor = root;
        internal__static_DocScanner_Bean_pb_MsgResultInfo__Descriptor = Descriptor.MessageTypes[0];
        internal__static_DocScanner_Bean_pb_MsgResultInfo__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DocScanner.Bean.pb.MsgResultInfo, global::DocScanner.Bean.pb.MsgResultInfo.Builder>(internal__static_DocScanner_Bean_pb_MsgResultInfo__Descriptor,
                new string[] { "Status", "Msg", "BatchNO", "CurFileIndex", "CurFileName", });
        internal__static_DocScanner_Bean_pb_MsgNoteInfo__Descriptor = Descriptor.MessageTypes[1];
        internal__static_DocScanner_Bean_pb_MsgNoteInfo__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DocScanner.Bean.pb.MsgNoteInfo, global::DocScanner.Bean.pb.MsgNoteInfo.Builder>(internal__static_DocScanner_Bean_pb_MsgNoteInfo__Descriptor,
                new string[] { "Author1", "Version2", "CreateTime4", "Remark5", "NoteName6", "NoteMsg7", "FileLink8", "FileMD5Link9", "Operation10", "RegionX11", "RegionY12", "RegionWidth13", "RegionHeight14", "Editable15", });
        internal__static_DocScanner_Bean_pb_MsgFileInfo__Descriptor = Descriptor.MessageTypes[2];
        internal__static_DocScanner_Bean_pb_MsgFileInfo__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DocScanner.Bean.pb.MsgFileInfo, global::DocScanner.Bean.pb.MsgFileInfo.Builder>(internal__static_DocScanner_Bean_pb_MsgFileInfo__Descriptor,
                new string[] { "Author1", "Version2", "CreateTime4", "Remark5", "FileName6", "FileURL7", "FileNO8", "FileMD59", "FileSize10", "Data11", "Operation12", "BatchNO13", "Category14", "Notes15", "ExFaPiaoCode16", "Editable18", "ExShenheResult19", "ExShenheRemark20", "LocalPath21", });
        internal__static_DocScanner_Bean_pb_MsgQueryBatchInfo__Descriptor = Descriptor.MessageTypes[3];
        internal__static_DocScanner_Bean_pb_MsgQueryBatchInfo__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DocScanner.Bean.pb.MsgQueryBatchInfo, global::DocScanner.Bean.pb.MsgQueryBatchInfo.Builder>(internal__static_DocScanner_Bean_pb_MsgQueryBatchInfo__Descriptor,
                new string[] { "User1", "Password2", "OrgID3", "QueryDate4", "QueryTime5", "BatchNO6", "Version7", "SourceIP42", "MachineID44", });
        internal__static_DocScanner_Bean_pb_MsgOptionQueryBatchs__Descriptor = Descriptor.MessageTypes[4];
        internal__static_DocScanner_Bean_pb_MsgOptionQueryBatchs__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DocScanner.Bean.pb.MsgOptionQueryBatchs, global::DocScanner.Bean.pb.MsgOptionQueryBatchs.Builder>(internal__static_DocScanner_Bean_pb_MsgOptionQueryBatchs__Descriptor,
                new string[] { "User1", "Password2", });
        internal__static_DocScanner_Bean_pb_MsgRspOptionQueryBatchs__Descriptor = Descriptor.MessageTypes[5];
        internal__static_DocScanner_Bean_pb_MsgRspOptionQueryBatchs__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DocScanner.Bean.pb.MsgRspOptionQueryBatchs, global::DocScanner.Bean.pb.MsgRspOptionQueryBatchs.Builder>(internal__static_DocScanner_Bean_pb_MsgRspOptionQueryBatchs__Descriptor,
                new string[] { "BatchNOs2", });
        internal__static_DocScanner_Bean_pb_MsgBatchInfo__Descriptor = Descriptor.MessageTypes[6];
        internal__static_DocScanner_Bean_pb_MsgBatchInfo__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DocScanner.Bean.pb.MsgBatchInfo, global::DocScanner.Bean.pb.MsgBatchInfo.Builder>(internal__static_DocScanner_Bean_pb_MsgBatchInfo__Descriptor,
                new string[] { "Author1", "Version2", "CreateTime4", "Remark5", "BatchNO6", "Title7", "Operation8", "FileInfos9", "OrgID10", "BusiSysId11", "BusiTypeId12", "BarCode13", "SourceIP14", "MachineID15", "Password16", "ResultInfo17", "Editable18", "ExShenheResult19", "ExShenheRemark20", });
        internal__static_DocScanner_Bean_pb_MsgAccountInfo__Descriptor = Descriptor.MessageTypes[7];
        internal__static_DocScanner_Bean_pb_MsgAccountInfo__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DocScanner.Bean.pb.MsgAccountInfo, global::DocScanner.Bean.pb.MsgAccountInfo.Builder>(internal__static_DocScanner_Bean_pb_MsgAccountInfo__Descriptor,
                new string[] { "User1", "Password2", "OrgID3", });
        internal__static_DocScanner_Bean_pb_MsgBatchHisQry__Descriptor = Descriptor.MessageTypes[8];
        internal__static_DocScanner_Bean_pb_MsgBatchHisQry__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DocScanner.Bean.pb.MsgBatchHisQry, global::DocScanner.Bean.pb.MsgBatchHisQry.Builder>(internal__static_DocScanner_Bean_pb_MsgBatchHisQry__Descriptor,
                new string[] { "User1", "Password2", "BatchNO3", });
        internal__static_DocScanner_Bean_pb_MsgBatchHisRsp__Descriptor = Descriptor.MessageTypes[9];
        internal__static_DocScanner_Bean_pb_MsgBatchHisRsp__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DocScanner.Bean.pb.MsgBatchHisRsp, global::DocScanner.Bean.pb.MsgBatchHisRsp.Builder>(internal__static_DocScanner_Bean_pb_MsgBatchHisRsp__Descriptor,
                new string[] { "Batchs1", });
        internal__static_DocScanner_Bean_pb_MsgServersListQry__Descriptor = Descriptor.MessageTypes[10];
        internal__static_DocScanner_Bean_pb_MsgServersListQry__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DocScanner.Bean.pb.MsgServersListQry, global::DocScanner.Bean.pb.MsgServersListQry.Builder>(internal__static_DocScanner_Bean_pb_MsgServersListQry__Descriptor,
                new string[] { });
        internal__static_DocScanner_Bean_pb_MsgServersListRsp__Descriptor = Descriptor.MessageTypes[11];
        internal__static_DocScanner_Bean_pb_MsgServersListRsp__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DocScanner.Bean.pb.MsgServersListRsp, global::DocScanner.Bean.pb.MsgServersListRsp.Builder>(internal__static_DocScanner_Bean_pb_MsgServersListRsp__Descriptor,
                new string[] { "Serverlist1", });
        internal__static_DocScanner_Bean_pb_MsgServerInfoQry__Descriptor = Descriptor.MessageTypes[12];
        internal__static_DocScanner_Bean_pb_MsgServerInfoQry__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DocScanner.Bean.pb.MsgServerInfoQry, global::DocScanner.Bean.pb.MsgServerInfoQry.Builder>(internal__static_DocScanner_Bean_pb_MsgServerInfoQry__Descriptor,
                new string[] { });
        internal__static_DocScanner_Bean_pb_MsgServerInfoRsp__Descriptor = Descriptor.MessageTypes[13];
        internal__static_DocScanner_Bean_pb_MsgServerInfoRsp__FieldAccessorTable = 
            new pb::FieldAccess.FieldAccessorTable<global::DocScanner.Bean.pb.MsgServerInfoRsp, global::DocScanner.Bean.pb.MsgServerInfoRsp.Builder>(internal__static_DocScanner_Bean_pb_MsgServerInfoRsp__Descriptor,
                new string[] { "Burden1", });
        return null;
      };
      pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
          new pbd::FileDescriptor[] {
          }, assigner);
    }
    #endregion
    
  }
  #region Enums
  public enum EOperType {
    eFROM_SERVER_NOTCHANGE = 0,
    eADD = 1,
    eDEL = 2,
    eUPD = 4,
    eUPDNOTE = 8,
    eUPDATEBASIC = 16,
    eUPDATEFILE = 32,
  }
  
  public enum EPrivilege {
    eNone = 0,
    eView = 1,
    eUpdate = 2,
    eFull = 4,
  }
  
  public enum EResultStatus {
    eSuccess = 0,
    eFailed = 1,
    eOnProgress = 2,
  }
  
  #endregion
  
  #region Messages
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class MsgResultInfo : pb::GeneratedMessage<MsgResultInfo, MsgResultInfo.Builder> {
    private MsgResultInfo() { }
    private static readonly MsgResultInfo defaultInstance = new MsgResultInfo().MakeReadOnly();
    private static readonly string[] _msgResultInfoFieldNames = new string[] { "BatchNO", "CurFileIndex", "CurFileName", "Msg", "Status" };
    private static readonly uint[] _msgResultInfoFieldTags = new uint[] { 42, 48, 58, 18, 8 };
    public static MsgResultInfo DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MsgResultInfo DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MsgResultInfo ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DocScanner.Bean.pb.PbInfo.internal__static_DocScanner_Bean_pb_MsgResultInfo__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MsgResultInfo, MsgResultInfo.Builder> InternalFieldAccessors {
      get { return global::DocScanner.Bean.pb.PbInfo.internal__static_DocScanner_Bean_pb_MsgResultInfo__FieldAccessorTable; }
    }
    
    public const int StatusFieldNumber = 1;
    private bool hasStatus;
    private global::DocScanner.Bean.pb.EResultStatus status_ = global::DocScanner.Bean.pb.EResultStatus.eSuccess;
    public bool HasStatus {
      get { return hasStatus; }
    }
    public global::DocScanner.Bean.pb.EResultStatus Status {
      get { return status_; }
    }
    
    public const int MsgFieldNumber = 2;
    private bool hasMsg;
    private string msg_ = "";
    public bool HasMsg {
      get { return hasMsg; }
    }
    public string Msg {
      get { return msg_; }
    }
    
    public const int BatchNOFieldNumber = 5;
    private bool hasBatchNO;
    private string batchNO_ = "";
    public bool HasBatchNO {
      get { return hasBatchNO; }
    }
    public string BatchNO {
      get { return batchNO_; }
    }
    
    public const int CurFileIndexFieldNumber = 6;
    private bool hasCurFileIndex;
    private int curFileIndex_;
    public bool HasCurFileIndex {
      get { return hasCurFileIndex; }
    }
    public int CurFileIndex {
      get { return curFileIndex_; }
    }
    
    public const int CurFileNameFieldNumber = 7;
    private bool hasCurFileName;
    private string curFileName_ = "";
    public bool HasCurFileName {
      get { return hasCurFileName; }
    }
    public string CurFileName {
      get { return curFileName_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasStatus) return false;
        if (!hasMsg) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgResultInfoFieldNames;
      if (hasStatus) {
        output.WriteEnum(1, field_names[4], (int) Status, Status);
      }
      if (hasMsg) {
        output.WriteString(2, field_names[3], Msg);
      }
      if (hasBatchNO) {
        output.WriteString(5, field_names[0], BatchNO);
      }
      if (hasCurFileIndex) {
        output.WriteInt32(6, field_names[1], CurFileIndex);
      }
      if (hasCurFileName) {
        output.WriteString(7, field_names[2], CurFileName);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasStatus) {
          size += pb::CodedOutputStream.ComputeEnumSize(1, (int) Status);
        }
        if (hasMsg) {
          size += pb::CodedOutputStream.ComputeStringSize(2, Msg);
        }
        if (hasBatchNO) {
          size += pb::CodedOutputStream.ComputeStringSize(5, BatchNO);
        }
        if (hasCurFileIndex) {
          size += pb::CodedOutputStream.ComputeInt32Size(6, CurFileIndex);
        }
        if (hasCurFileName) {
          size += pb::CodedOutputStream.ComputeStringSize(7, CurFileName);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static MsgResultInfo ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MsgResultInfo ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MsgResultInfo ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MsgResultInfo ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MsgResultInfo ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MsgResultInfo ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MsgResultInfo ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MsgResultInfo ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MsgResultInfo ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MsgResultInfo ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MsgResultInfo MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MsgResultInfo prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<MsgResultInfo, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MsgResultInfo cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MsgResultInfo result;
      
      private MsgResultInfo PrepareBuilder() {
        if (resultIsReadOnly) {
          MsgResultInfo original = result;
          result = new MsgResultInfo();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MsgResultInfo MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DocScanner.Bean.pb.MsgResultInfo.Descriptor; }
      }
      
      public override MsgResultInfo DefaultInstanceForType {
        get { return global::DocScanner.Bean.pb.MsgResultInfo.DefaultInstance; }
      }
      
      public override MsgResultInfo BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MsgResultInfo) {
          return MergeFrom((MsgResultInfo) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MsgResultInfo other) {
        if (other == global::DocScanner.Bean.pb.MsgResultInfo.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasStatus) {
          Status = other.Status;
        }
        if (other.HasMsg) {
          Msg = other.Msg;
        }
        if (other.HasBatchNO) {
          BatchNO = other.BatchNO;
        }
        if (other.HasCurFileIndex) {
          CurFileIndex = other.CurFileIndex;
        }
        if (other.HasCurFileName) {
          CurFileName = other.CurFileName;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgResultInfoFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgResultInfoFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              object unknown;
              if(input.ReadEnum(ref result.status_, out unknown)) {
                result.hasStatus = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(1, (ulong)(int)unknown);
              }
              break;
            }
            case 18: {
              result.hasMsg = input.ReadString(ref result.msg_);
              break;
            }
            case 42: {
              result.hasBatchNO = input.ReadString(ref result.batchNO_);
              break;
            }
            case 48: {
              result.hasCurFileIndex = input.ReadInt32(ref result.curFileIndex_);
              break;
            }
            case 58: {
              result.hasCurFileName = input.ReadString(ref result.curFileName_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasStatus {
       get { return result.hasStatus; }
      }
      public global::DocScanner.Bean.pb.EResultStatus Status {
        get { return result.Status; }
        set { SetStatus(value); }
      }
      public Builder SetStatus(global::DocScanner.Bean.pb.EResultStatus value) {
        PrepareBuilder();
        result.hasStatus = true;
        result.status_ = value;
        return this;
      }
      public Builder ClearStatus() {
        PrepareBuilder();
        result.hasStatus = false;
        result.status_ = global::DocScanner.Bean.pb.EResultStatus.eSuccess;
        return this;
      }
      
      public bool HasMsg {
        get { return result.hasMsg; }
      }
      public string Msg {
        get { return result.Msg; }
        set { SetMsg(value); }
      }
      public Builder SetMsg(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMsg = true;
        result.msg_ = value;
        return this;
      }
      public Builder ClearMsg() {
        PrepareBuilder();
        result.hasMsg = false;
        result.msg_ = "";
        return this;
      }
      
      public bool HasBatchNO {
        get { return result.hasBatchNO; }
      }
      public string BatchNO {
        get { return result.BatchNO; }
        set { SetBatchNO(value); }
      }
      public Builder SetBatchNO(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBatchNO = true;
        result.batchNO_ = value;
        return this;
      }
      public Builder ClearBatchNO() {
        PrepareBuilder();
        result.hasBatchNO = false;
        result.batchNO_ = "";
        return this;
      }
      
      public bool HasCurFileIndex {
        get { return result.hasCurFileIndex; }
      }
      public int CurFileIndex {
        get { return result.CurFileIndex; }
        set { SetCurFileIndex(value); }
      }
      public Builder SetCurFileIndex(int value) {
        PrepareBuilder();
        result.hasCurFileIndex = true;
        result.curFileIndex_ = value;
        return this;
      }
      public Builder ClearCurFileIndex() {
        PrepareBuilder();
        result.hasCurFileIndex = false;
        result.curFileIndex_ = 0;
        return this;
      }
      
      public bool HasCurFileName {
        get { return result.hasCurFileName; }
      }
      public string CurFileName {
        get { return result.CurFileName; }
        set { SetCurFileName(value); }
      }
      public Builder SetCurFileName(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCurFileName = true;
        result.curFileName_ = value;
        return this;
      }
      public Builder ClearCurFileName() {
        PrepareBuilder();
        result.hasCurFileName = false;
        result.curFileName_ = "";
        return this;
      }
    }
    static MsgResultInfo() {
      object.ReferenceEquals(global::DocScanner.Bean.pb.PbInfo.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class MsgNoteInfo : pb::GeneratedMessage<MsgNoteInfo, MsgNoteInfo.Builder> {
    private MsgNoteInfo() { }
    private static readonly MsgNoteInfo defaultInstance = new MsgNoteInfo().MakeReadOnly();
    private static readonly string[] _msgNoteInfoFieldNames = new string[] { "Author1", "CreateTime4", "Editable15", "FileLink8", "FileMD5Link9", "NoteMsg7", "NoteName6", "Operation10", "RegionHeight14", "RegionWidth13", "RegionX11", "RegionY12", "Remark5", "Version2" };
    private static readonly uint[] _msgNoteInfoFieldTags = new uint[] { 10, 34, 120, 66, 74, 58, 50, 80, 112, 104, 88, 96, 42, 16 };
    public static MsgNoteInfo DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MsgNoteInfo DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MsgNoteInfo ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DocScanner.Bean.pb.PbInfo.internal__static_DocScanner_Bean_pb_MsgNoteInfo__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MsgNoteInfo, MsgNoteInfo.Builder> InternalFieldAccessors {
      get { return global::DocScanner.Bean.pb.PbInfo.internal__static_DocScanner_Bean_pb_MsgNoteInfo__FieldAccessorTable; }
    }
    
    public const int Author1FieldNumber = 1;
    private bool hasAuthor1;
    private string author1_ = "";
    public bool HasAuthor1 {
      get { return hasAuthor1; }
    }
    public string Author1 {
      get { return author1_; }
    }
    
    public const int Version2FieldNumber = 2;
    private bool hasVersion2;
    private int version2_;
    public bool HasVersion2 {
      get { return hasVersion2; }
    }
    public int Version2 {
      get { return version2_; }
    }
    
    public const int CreateTime4FieldNumber = 4;
    private bool hasCreateTime4;
    private string createTime4_ = "";
    public bool HasCreateTime4 {
      get { return hasCreateTime4; }
    }
    public string CreateTime4 {
      get { return createTime4_; }
    }
    
    public const int Remark5FieldNumber = 5;
    private bool hasRemark5;
    private string remark5_ = "";
    public bool HasRemark5 {
      get { return hasRemark5; }
    }
    public string Remark5 {
      get { return remark5_; }
    }
    
    public const int NoteName6FieldNumber = 6;
    private bool hasNoteName6;
    private string noteName6_ = "";
    public bool HasNoteName6 {
      get { return hasNoteName6; }
    }
    public string NoteName6 {
      get { return noteName6_; }
    }
    
    public const int NoteMsg7FieldNumber = 7;
    private bool hasNoteMsg7;
    private string noteMsg7_ = "";
    public bool HasNoteMsg7 {
      get { return hasNoteMsg7; }
    }
    public string NoteMsg7 {
      get { return noteMsg7_; }
    }
    
    public const int FileLink8FieldNumber = 8;
    private bool hasFileLink8;
    private string fileLink8_ = "";
    public bool HasFileLink8 {
      get { return hasFileLink8; }
    }
    public string FileLink8 {
      get { return fileLink8_; }
    }
    
    public const int FileMD5Link9FieldNumber = 9;
    private bool hasFileMD5Link9;
    private string fileMD5Link9_ = "";
    public bool HasFileMD5Link9 {
      get { return hasFileMD5Link9; }
    }
    public string FileMD5Link9 {
      get { return fileMD5Link9_; }
    }
    
    public const int Operation10FieldNumber = 10;
    private bool hasOperation10;
    private global::DocScanner.Bean.pb.EOperType operation10_ = global::DocScanner.Bean.pb.EOperType.eFROM_SERVER_NOTCHANGE;
    public bool HasOperation10 {
      get { return hasOperation10; }
    }
    public global::DocScanner.Bean.pb.EOperType Operation10 {
      get { return operation10_; }
    }
    
    public const int RegionX11FieldNumber = 11;
    private bool hasRegionX11;
    private int regionX11_;
    public bool HasRegionX11 {
      get { return hasRegionX11; }
    }
    public int RegionX11 {
      get { return regionX11_; }
    }
    
    public const int RegionY12FieldNumber = 12;
    private bool hasRegionY12;
    private int regionY12_;
    public bool HasRegionY12 {
      get { return hasRegionY12; }
    }
    public int RegionY12 {
      get { return regionY12_; }
    }
    
    public const int RegionWidth13FieldNumber = 13;
    private bool hasRegionWidth13;
    private int regionWidth13_;
    public bool HasRegionWidth13 {
      get { return hasRegionWidth13; }
    }
    public int RegionWidth13 {
      get { return regionWidth13_; }
    }
    
    public const int RegionHeight14FieldNumber = 14;
    private bool hasRegionHeight14;
    private int regionHeight14_;
    public bool HasRegionHeight14 {
      get { return hasRegionHeight14; }
    }
    public int RegionHeight14 {
      get { return regionHeight14_; }
    }
    
    public const int Editable15FieldNumber = 15;
    private bool hasEditable15;
    private bool editable15_;
    public bool HasEditable15 {
      get { return hasEditable15; }
    }
    public bool Editable15 {
      get { return editable15_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasAuthor1) return false;
        if (!hasVersion2) return false;
        if (!hasCreateTime4) return false;
        if (!hasNoteName6) return false;
        if (!hasNoteMsg7) return false;
        if (!hasFileLink8) return false;
        if (!hasFileMD5Link9) return false;
        if (!hasOperation10) return false;
        if (!hasRegionX11) return false;
        if (!hasRegionY12) return false;
        if (!hasRegionWidth13) return false;
        if (!hasRegionHeight14) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgNoteInfoFieldNames;
      if (hasAuthor1) {
        output.WriteString(1, field_names[0], Author1);
      }
      if (hasVersion2) {
        output.WriteInt32(2, field_names[13], Version2);
      }
      if (hasCreateTime4) {
        output.WriteString(4, field_names[1], CreateTime4);
      }
      if (hasRemark5) {
        output.WriteString(5, field_names[12], Remark5);
      }
      if (hasNoteName6) {
        output.WriteString(6, field_names[6], NoteName6);
      }
      if (hasNoteMsg7) {
        output.WriteString(7, field_names[5], NoteMsg7);
      }
      if (hasFileLink8) {
        output.WriteString(8, field_names[3], FileLink8);
      }
      if (hasFileMD5Link9) {
        output.WriteString(9, field_names[4], FileMD5Link9);
      }
      if (hasOperation10) {
        output.WriteEnum(10, field_names[7], (int) Operation10, Operation10);
      }
      if (hasRegionX11) {
        output.WriteInt32(11, field_names[10], RegionX11);
      }
      if (hasRegionY12) {
        output.WriteInt32(12, field_names[11], RegionY12);
      }
      if (hasRegionWidth13) {
        output.WriteInt32(13, field_names[9], RegionWidth13);
      }
      if (hasRegionHeight14) {
        output.WriteInt32(14, field_names[8], RegionHeight14);
      }
      if (hasEditable15) {
        output.WriteBool(15, field_names[2], Editable15);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAuthor1) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Author1);
        }
        if (hasVersion2) {
          size += pb::CodedOutputStream.ComputeInt32Size(2, Version2);
        }
        if (hasCreateTime4) {
          size += pb::CodedOutputStream.ComputeStringSize(4, CreateTime4);
        }
        if (hasRemark5) {
          size += pb::CodedOutputStream.ComputeStringSize(5, Remark5);
        }
        if (hasNoteName6) {
          size += pb::CodedOutputStream.ComputeStringSize(6, NoteName6);
        }
        if (hasNoteMsg7) {
          size += pb::CodedOutputStream.ComputeStringSize(7, NoteMsg7);
        }
        if (hasFileLink8) {
          size += pb::CodedOutputStream.ComputeStringSize(8, FileLink8);
        }
        if (hasFileMD5Link9) {
          size += pb::CodedOutputStream.ComputeStringSize(9, FileMD5Link9);
        }
        if (hasOperation10) {
          size += pb::CodedOutputStream.ComputeEnumSize(10, (int) Operation10);
        }
        if (hasRegionX11) {
          size += pb::CodedOutputStream.ComputeInt32Size(11, RegionX11);
        }
        if (hasRegionY12) {
          size += pb::CodedOutputStream.ComputeInt32Size(12, RegionY12);
        }
        if (hasRegionWidth13) {
          size += pb::CodedOutputStream.ComputeInt32Size(13, RegionWidth13);
        }
        if (hasRegionHeight14) {
          size += pb::CodedOutputStream.ComputeInt32Size(14, RegionHeight14);
        }
        if (hasEditable15) {
          size += pb::CodedOutputStream.ComputeBoolSize(15, Editable15);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static MsgNoteInfo ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MsgNoteInfo ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MsgNoteInfo ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MsgNoteInfo ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MsgNoteInfo ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MsgNoteInfo ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MsgNoteInfo ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MsgNoteInfo ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MsgNoteInfo ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MsgNoteInfo ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MsgNoteInfo MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MsgNoteInfo prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<MsgNoteInfo, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MsgNoteInfo cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MsgNoteInfo result;
      
      private MsgNoteInfo PrepareBuilder() {
        if (resultIsReadOnly) {
          MsgNoteInfo original = result;
          result = new MsgNoteInfo();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MsgNoteInfo MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DocScanner.Bean.pb.MsgNoteInfo.Descriptor; }
      }
      
      public override MsgNoteInfo DefaultInstanceForType {
        get { return global::DocScanner.Bean.pb.MsgNoteInfo.DefaultInstance; }
      }
      
      public override MsgNoteInfo BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MsgNoteInfo) {
          return MergeFrom((MsgNoteInfo) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MsgNoteInfo other) {
        if (other == global::DocScanner.Bean.pb.MsgNoteInfo.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAuthor1) {
          Author1 = other.Author1;
        }
        if (other.HasVersion2) {
          Version2 = other.Version2;
        }
        if (other.HasCreateTime4) {
          CreateTime4 = other.CreateTime4;
        }
        if (other.HasRemark5) {
          Remark5 = other.Remark5;
        }
        if (other.HasNoteName6) {
          NoteName6 = other.NoteName6;
        }
        if (other.HasNoteMsg7) {
          NoteMsg7 = other.NoteMsg7;
        }
        if (other.HasFileLink8) {
          FileLink8 = other.FileLink8;
        }
        if (other.HasFileMD5Link9) {
          FileMD5Link9 = other.FileMD5Link9;
        }
        if (other.HasOperation10) {
          Operation10 = other.Operation10;
        }
        if (other.HasRegionX11) {
          RegionX11 = other.RegionX11;
        }
        if (other.HasRegionY12) {
          RegionY12 = other.RegionY12;
        }
        if (other.HasRegionWidth13) {
          RegionWidth13 = other.RegionWidth13;
        }
        if (other.HasRegionHeight14) {
          RegionHeight14 = other.RegionHeight14;
        }
        if (other.HasEditable15) {
          Editable15 = other.Editable15;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgNoteInfoFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgNoteInfoFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasAuthor1 = input.ReadString(ref result.author1_);
              break;
            }
            case 16: {
              result.hasVersion2 = input.ReadInt32(ref result.version2_);
              break;
            }
            case 34: {
              result.hasCreateTime4 = input.ReadString(ref result.createTime4_);
              break;
            }
            case 42: {
              result.hasRemark5 = input.ReadString(ref result.remark5_);
              break;
            }
            case 50: {
              result.hasNoteName6 = input.ReadString(ref result.noteName6_);
              break;
            }
            case 58: {
              result.hasNoteMsg7 = input.ReadString(ref result.noteMsg7_);
              break;
            }
            case 66: {
              result.hasFileLink8 = input.ReadString(ref result.fileLink8_);
              break;
            }
            case 74: {
              result.hasFileMD5Link9 = input.ReadString(ref result.fileMD5Link9_);
              break;
            }
            case 80: {
              object unknown;
              if(input.ReadEnum(ref result.operation10_, out unknown)) {
                result.hasOperation10 = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(10, (ulong)(int)unknown);
              }
              break;
            }
            case 88: {
              result.hasRegionX11 = input.ReadInt32(ref result.regionX11_);
              break;
            }
            case 96: {
              result.hasRegionY12 = input.ReadInt32(ref result.regionY12_);
              break;
            }
            case 104: {
              result.hasRegionWidth13 = input.ReadInt32(ref result.regionWidth13_);
              break;
            }
            case 112: {
              result.hasRegionHeight14 = input.ReadInt32(ref result.regionHeight14_);
              break;
            }
            case 120: {
              result.hasEditable15 = input.ReadBool(ref result.editable15_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAuthor1 {
        get { return result.hasAuthor1; }
      }
      public string Author1 {
        get { return result.Author1; }
        set { SetAuthor1(value); }
      }
      public Builder SetAuthor1(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAuthor1 = true;
        result.author1_ = value;
        return this;
      }
      public Builder ClearAuthor1() {
        PrepareBuilder();
        result.hasAuthor1 = false;
        result.author1_ = "";
        return this;
      }
      
      public bool HasVersion2 {
        get { return result.hasVersion2; }
      }
      public int Version2 {
        get { return result.Version2; }
        set { SetVersion2(value); }
      }
      public Builder SetVersion2(int value) {
        PrepareBuilder();
        result.hasVersion2 = true;
        result.version2_ = value;
        return this;
      }
      public Builder ClearVersion2() {
        PrepareBuilder();
        result.hasVersion2 = false;
        result.version2_ = 0;
        return this;
      }
      
      public bool HasCreateTime4 {
        get { return result.hasCreateTime4; }
      }
      public string CreateTime4 {
        get { return result.CreateTime4; }
        set { SetCreateTime4(value); }
      }
      public Builder SetCreateTime4(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCreateTime4 = true;
        result.createTime4_ = value;
        return this;
      }
      public Builder ClearCreateTime4() {
        PrepareBuilder();
        result.hasCreateTime4 = false;
        result.createTime4_ = "";
        return this;
      }
      
      public bool HasRemark5 {
        get { return result.hasRemark5; }
      }
      public string Remark5 {
        get { return result.Remark5; }
        set { SetRemark5(value); }
      }
      public Builder SetRemark5(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRemark5 = true;
        result.remark5_ = value;
        return this;
      }
      public Builder ClearRemark5() {
        PrepareBuilder();
        result.hasRemark5 = false;
        result.remark5_ = "";
        return this;
      }
      
      public bool HasNoteName6 {
        get { return result.hasNoteName6; }
      }
      public string NoteName6 {
        get { return result.NoteName6; }
        set { SetNoteName6(value); }
      }
      public Builder SetNoteName6(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasNoteName6 = true;
        result.noteName6_ = value;
        return this;
      }
      public Builder ClearNoteName6() {
        PrepareBuilder();
        result.hasNoteName6 = false;
        result.noteName6_ = "";
        return this;
      }
      
      public bool HasNoteMsg7 {
        get { return result.hasNoteMsg7; }
      }
      public string NoteMsg7 {
        get { return result.NoteMsg7; }
        set { SetNoteMsg7(value); }
      }
      public Builder SetNoteMsg7(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasNoteMsg7 = true;
        result.noteMsg7_ = value;
        return this;
      }
      public Builder ClearNoteMsg7() {
        PrepareBuilder();
        result.hasNoteMsg7 = false;
        result.noteMsg7_ = "";
        return this;
      }
      
      public bool HasFileLink8 {
        get { return result.hasFileLink8; }
      }
      public string FileLink8 {
        get { return result.FileLink8; }
        set { SetFileLink8(value); }
      }
      public Builder SetFileLink8(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFileLink8 = true;
        result.fileLink8_ = value;
        return this;
      }
      public Builder ClearFileLink8() {
        PrepareBuilder();
        result.hasFileLink8 = false;
        result.fileLink8_ = "";
        return this;
      }
      
      public bool HasFileMD5Link9 {
        get { return result.hasFileMD5Link9; }
      }
      public string FileMD5Link9 {
        get { return result.FileMD5Link9; }
        set { SetFileMD5Link9(value); }
      }
      public Builder SetFileMD5Link9(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFileMD5Link9 = true;
        result.fileMD5Link9_ = value;
        return this;
      }
      public Builder ClearFileMD5Link9() {
        PrepareBuilder();
        result.hasFileMD5Link9 = false;
        result.fileMD5Link9_ = "";
        return this;
      }
      
      public bool HasOperation10 {
       get { return result.hasOperation10; }
      }
      public global::DocScanner.Bean.pb.EOperType Operation10 {
        get { return result.Operation10; }
        set { SetOperation10(value); }
      }
      public Builder SetOperation10(global::DocScanner.Bean.pb.EOperType value) {
        PrepareBuilder();
        result.hasOperation10 = true;
        result.operation10_ = value;
        return this;
      }
      public Builder ClearOperation10() {
        PrepareBuilder();
        result.hasOperation10 = false;
        result.operation10_ = global::DocScanner.Bean.pb.EOperType.eFROM_SERVER_NOTCHANGE;
        return this;
      }
      
      public bool HasRegionX11 {
        get { return result.hasRegionX11; }
      }
      public int RegionX11 {
        get { return result.RegionX11; }
        set { SetRegionX11(value); }
      }
      public Builder SetRegionX11(int value) {
        PrepareBuilder();
        result.hasRegionX11 = true;
        result.regionX11_ = value;
        return this;
      }
      public Builder ClearRegionX11() {
        PrepareBuilder();
        result.hasRegionX11 = false;
        result.regionX11_ = 0;
        return this;
      }
      
      public bool HasRegionY12 {
        get { return result.hasRegionY12; }
      }
      public int RegionY12 {
        get { return result.RegionY12; }
        set { SetRegionY12(value); }
      }
      public Builder SetRegionY12(int value) {
        PrepareBuilder();
        result.hasRegionY12 = true;
        result.regionY12_ = value;
        return this;
      }
      public Builder ClearRegionY12() {
        PrepareBuilder();
        result.hasRegionY12 = false;
        result.regionY12_ = 0;
        return this;
      }
      
      public bool HasRegionWidth13 {
        get { return result.hasRegionWidth13; }
      }
      public int RegionWidth13 {
        get { return result.RegionWidth13; }
        set { SetRegionWidth13(value); }
      }
      public Builder SetRegionWidth13(int value) {
        PrepareBuilder();
        result.hasRegionWidth13 = true;
        result.regionWidth13_ = value;
        return this;
      }
      public Builder ClearRegionWidth13() {
        PrepareBuilder();
        result.hasRegionWidth13 = false;
        result.regionWidth13_ = 0;
        return this;
      }
      
      public bool HasRegionHeight14 {
        get { return result.hasRegionHeight14; }
      }
      public int RegionHeight14 {
        get { return result.RegionHeight14; }
        set { SetRegionHeight14(value); }
      }
      public Builder SetRegionHeight14(int value) {
        PrepareBuilder();
        result.hasRegionHeight14 = true;
        result.regionHeight14_ = value;
        return this;
      }
      public Builder ClearRegionHeight14() {
        PrepareBuilder();
        result.hasRegionHeight14 = false;
        result.regionHeight14_ = 0;
        return this;
      }
      
      public bool HasEditable15 {
        get { return result.hasEditable15; }
      }
      public bool Editable15 {
        get { return result.Editable15; }
        set { SetEditable15(value); }
      }
      public Builder SetEditable15(bool value) {
        PrepareBuilder();
        result.hasEditable15 = true;
        result.editable15_ = value;
        return this;
      }
      public Builder ClearEditable15() {
        PrepareBuilder();
        result.hasEditable15 = false;
        result.editable15_ = false;
        return this;
      }
    }
    static MsgNoteInfo() {
      object.ReferenceEquals(global::DocScanner.Bean.pb.PbInfo.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class MsgFileInfo : pb::GeneratedMessage<MsgFileInfo, MsgFileInfo.Builder> {
    private MsgFileInfo() { }
    private static readonly MsgFileInfo defaultInstance = new MsgFileInfo().MakeReadOnly();
    private static readonly string[] _msgFileInfoFieldNames = new string[] { "Author1", "BatchNO13", "Category14", "CreateTime4", "Data11", "Editable18", "FileMD59", "FileNO8", "FileName6", "FileSize10", "FileURL7", "LocalPath21", "Notes15", "Operation12", "Remark5", "Version2", "exFaPiaoCode16", "exShenheRemark20", "exShenheResult19" };
    private static readonly uint[] _msgFileInfoFieldTags = new uint[] { 10, 106, 114, 34, 90, 144, 74, 66, 50, 80, 58, 170, 122, 96, 42, 16, 130, 162, 152 };
    public static MsgFileInfo DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MsgFileInfo DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MsgFileInfo ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DocScanner.Bean.pb.PbInfo.internal__static_DocScanner_Bean_pb_MsgFileInfo__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MsgFileInfo, MsgFileInfo.Builder> InternalFieldAccessors {
      get { return global::DocScanner.Bean.pb.PbInfo.internal__static_DocScanner_Bean_pb_MsgFileInfo__FieldAccessorTable; }
    }
    
    public const int Author1FieldNumber = 1;
    private bool hasAuthor1;
    private string author1_ = "";
    public bool HasAuthor1 {
      get { return hasAuthor1; }
    }
    public string Author1 {
      get { return author1_; }
    }
    
    public const int Version2FieldNumber = 2;
    private bool hasVersion2;
    private int version2_;
    public bool HasVersion2 {
      get { return hasVersion2; }
    }
    public int Version2 {
      get { return version2_; }
    }
    
    public const int CreateTime4FieldNumber = 4;
    private bool hasCreateTime4;
    private string createTime4_ = "";
    public bool HasCreateTime4 {
      get { return hasCreateTime4; }
    }
    public string CreateTime4 {
      get { return createTime4_; }
    }
    
    public const int Remark5FieldNumber = 5;
    private bool hasRemark5;
    private string remark5_ = "";
    public bool HasRemark5 {
      get { return hasRemark5; }
    }
    public string Remark5 {
      get { return remark5_; }
    }
    
    public const int FileName6FieldNumber = 6;
    private bool hasFileName6;
    private string fileName6_ = "";
    public bool HasFileName6 {
      get { return hasFileName6; }
    }
    public string FileName6 {
      get { return fileName6_; }
    }
    
    public const int FileURL7FieldNumber = 7;
    private bool hasFileURL7;
    private string fileURL7_ = "";
    public bool HasFileURL7 {
      get { return hasFileURL7; }
    }
    public string FileURL7 {
      get { return fileURL7_; }
    }
    
    public const int FileNO8FieldNumber = 8;
    private bool hasFileNO8;
    private string fileNO8_ = "";
    public bool HasFileNO8 {
      get { return hasFileNO8; }
    }
    public string FileNO8 {
      get { return fileNO8_; }
    }
    
    public const int FileMD59FieldNumber = 9;
    private bool hasFileMD59;
    private string fileMD59_ = "";
    public bool HasFileMD59 {
      get { return hasFileMD59; }
    }
    public string FileMD59 {
      get { return fileMD59_; }
    }
    
    public const int FileSize10FieldNumber = 10;
    private bool hasFileSize10;
    private int fileSize10_;
    public bool HasFileSize10 {
      get { return hasFileSize10; }
    }
    public int FileSize10 {
      get { return fileSize10_; }
    }
    
    public const int Data11FieldNumber = 11;
    private bool hasData11;
    private pb::ByteString data11_ = pb::ByteString.Empty;
    public bool HasData11 {
      get { return hasData11; }
    }
    public pb::ByteString Data11 {
      get { return data11_; }
    }
    
    public const int Operation12FieldNumber = 12;
    private bool hasOperation12;
    private global::DocScanner.Bean.pb.EOperType operation12_ = global::DocScanner.Bean.pb.EOperType.eFROM_SERVER_NOTCHANGE;
    public bool HasOperation12 {
      get { return hasOperation12; }
    }
    public global::DocScanner.Bean.pb.EOperType Operation12 {
      get { return operation12_; }
    }
    
    public const int BatchNO13FieldNumber = 13;
    private bool hasBatchNO13;
    private string batchNO13_ = "";
    public bool HasBatchNO13 {
      get { return hasBatchNO13; }
    }
    public string BatchNO13 {
      get { return batchNO13_; }
    }
    
    public const int Category14FieldNumber = 14;
    private bool hasCategory14;
    private string category14_ = "";
    public bool HasCategory14 {
      get { return hasCategory14; }
    }
    public string Category14 {
      get { return category14_; }
    }
    
    public const int Notes15FieldNumber = 15;
    private pbc::PopsicleList<global::DocScanner.Bean.pb.MsgNoteInfo> notes15_ = new pbc::PopsicleList<global::DocScanner.Bean.pb.MsgNoteInfo>();
    public scg::IList<global::DocScanner.Bean.pb.MsgNoteInfo> Notes15List {
      get { return notes15_; }
    }
    public int Notes15Count {
      get { return notes15_.Count; }
    }
    public global::DocScanner.Bean.pb.MsgNoteInfo GetNotes15(int index) {
      return notes15_[index];
    }
    
    public const int ExFaPiaoCode16FieldNumber = 16;
    private bool hasExFaPiaoCode16;
    private string exFaPiaoCode16_ = "";
    public bool HasExFaPiaoCode16 {
      get { return hasExFaPiaoCode16; }
    }
    public string ExFaPiaoCode16 {
      get { return exFaPiaoCode16_; }
    }
    
    public const int Editable18FieldNumber = 18;
    private bool hasEditable18;
    private bool editable18_;
    public bool HasEditable18 {
      get { return hasEditable18; }
    }
    public bool Editable18 {
      get { return editable18_; }
    }
    
    public const int ExShenheResult19FieldNumber = 19;
    private bool hasExShenheResult19;
    private int exShenheResult19_;
    public bool HasExShenheResult19 {
      get { return hasExShenheResult19; }
    }
    public int ExShenheResult19 {
      get { return exShenheResult19_; }
    }
    
    public const int ExShenheRemark20FieldNumber = 20;
    private bool hasExShenheRemark20;
    private string exShenheRemark20_ = "";
    public bool HasExShenheRemark20 {
      get { return hasExShenheRemark20; }
    }
    public string ExShenheRemark20 {
      get { return exShenheRemark20_; }
    }
    
    public const int LocalPath21FieldNumber = 21;
    private bool hasLocalPath21;
    private string localPath21_ = "";
    public bool HasLocalPath21 {
      get { return hasLocalPath21; }
    }
    public string LocalPath21 {
      get { return localPath21_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasAuthor1) return false;
        if (!hasVersion2) return false;
        if (!hasCreateTime4) return false;
        if (!hasFileName6) return false;
        if (!hasFileNO8) return false;
        if (!hasFileMD59) return false;
        if (!hasFileSize10) return false;
        if (!hasOperation12) return false;
        if (!hasBatchNO13) return false;
        if (!hasCategory14) return false;
        foreach (global::DocScanner.Bean.pb.MsgNoteInfo element in Notes15List) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgFileInfoFieldNames;
      if (hasAuthor1) {
        output.WriteString(1, field_names[0], Author1);
      }
      if (hasVersion2) {
        output.WriteInt32(2, field_names[15], Version2);
      }
      if (hasCreateTime4) {
        output.WriteString(4, field_names[3], CreateTime4);
      }
      if (hasRemark5) {
        output.WriteString(5, field_names[14], Remark5);
      }
      if (hasFileName6) {
        output.WriteString(6, field_names[8], FileName6);
      }
      if (hasFileURL7) {
        output.WriteString(7, field_names[10], FileURL7);
      }
      if (hasFileNO8) {
        output.WriteString(8, field_names[7], FileNO8);
      }
      if (hasFileMD59) {
        output.WriteString(9, field_names[6], FileMD59);
      }
      if (hasFileSize10) {
        output.WriteInt32(10, field_names[9], FileSize10);
      }
      if (hasData11) {
        output.WriteBytes(11, field_names[4], Data11);
      }
      if (hasOperation12) {
        output.WriteEnum(12, field_names[13], (int) Operation12, Operation12);
      }
      if (hasBatchNO13) {
        output.WriteString(13, field_names[1], BatchNO13);
      }
      if (hasCategory14) {
        output.WriteString(14, field_names[2], Category14);
      }
      if (notes15_.Count > 0) {
        output.WriteMessageArray(15, field_names[12], notes15_);
      }
      if (hasExFaPiaoCode16) {
        output.WriteString(16, field_names[16], ExFaPiaoCode16);
      }
      if (hasEditable18) {
        output.WriteBool(18, field_names[5], Editable18);
      }
      if (hasExShenheResult19) {
        output.WriteInt32(19, field_names[18], ExShenheResult19);
      }
      if (hasExShenheRemark20) {
        output.WriteString(20, field_names[17], ExShenheRemark20);
      }
      if (hasLocalPath21) {
        output.WriteString(21, field_names[11], LocalPath21);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAuthor1) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Author1);
        }
        if (hasVersion2) {
          size += pb::CodedOutputStream.ComputeInt32Size(2, Version2);
        }
        if (hasCreateTime4) {
          size += pb::CodedOutputStream.ComputeStringSize(4, CreateTime4);
        }
        if (hasRemark5) {
          size += pb::CodedOutputStream.ComputeStringSize(5, Remark5);
        }
        if (hasFileName6) {
          size += pb::CodedOutputStream.ComputeStringSize(6, FileName6);
        }
        if (hasFileURL7) {
          size += pb::CodedOutputStream.ComputeStringSize(7, FileURL7);
        }
        if (hasFileNO8) {
          size += pb::CodedOutputStream.ComputeStringSize(8, FileNO8);
        }
        if (hasFileMD59) {
          size += pb::CodedOutputStream.ComputeStringSize(9, FileMD59);
        }
        if (hasFileSize10) {
          size += pb::CodedOutputStream.ComputeInt32Size(10, FileSize10);
        }
        if (hasData11) {
          size += pb::CodedOutputStream.ComputeBytesSize(11, Data11);
        }
        if (hasOperation12) {
          size += pb::CodedOutputStream.ComputeEnumSize(12, (int) Operation12);
        }
        if (hasBatchNO13) {
          size += pb::CodedOutputStream.ComputeStringSize(13, BatchNO13);
        }
        if (hasCategory14) {
          size += pb::CodedOutputStream.ComputeStringSize(14, Category14);
        }
        foreach (global::DocScanner.Bean.pb.MsgNoteInfo element in Notes15List) {
          size += pb::CodedOutputStream.ComputeMessageSize(15, element);
        }
        if (hasExFaPiaoCode16) {
          size += pb::CodedOutputStream.ComputeStringSize(16, ExFaPiaoCode16);
        }
        if (hasEditable18) {
          size += pb::CodedOutputStream.ComputeBoolSize(18, Editable18);
        }
        if (hasExShenheResult19) {
          size += pb::CodedOutputStream.ComputeInt32Size(19, ExShenheResult19);
        }
        if (hasExShenheRemark20) {
          size += pb::CodedOutputStream.ComputeStringSize(20, ExShenheRemark20);
        }
        if (hasLocalPath21) {
          size += pb::CodedOutputStream.ComputeStringSize(21, LocalPath21);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static MsgFileInfo ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MsgFileInfo ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MsgFileInfo ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MsgFileInfo ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MsgFileInfo ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MsgFileInfo ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MsgFileInfo ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MsgFileInfo ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MsgFileInfo ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MsgFileInfo ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MsgFileInfo MakeReadOnly() {
      notes15_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MsgFileInfo prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<MsgFileInfo, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MsgFileInfo cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MsgFileInfo result;
      
      private MsgFileInfo PrepareBuilder() {
        if (resultIsReadOnly) {
          MsgFileInfo original = result;
          result = new MsgFileInfo();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MsgFileInfo MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DocScanner.Bean.pb.MsgFileInfo.Descriptor; }
      }
      
      public override MsgFileInfo DefaultInstanceForType {
        get { return global::DocScanner.Bean.pb.MsgFileInfo.DefaultInstance; }
      }
      
      public override MsgFileInfo BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MsgFileInfo) {
          return MergeFrom((MsgFileInfo) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MsgFileInfo other) {
        if (other == global::DocScanner.Bean.pb.MsgFileInfo.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAuthor1) {
          Author1 = other.Author1;
        }
        if (other.HasVersion2) {
          Version2 = other.Version2;
        }
        if (other.HasCreateTime4) {
          CreateTime4 = other.CreateTime4;
        }
        if (other.HasRemark5) {
          Remark5 = other.Remark5;
        }
        if (other.HasFileName6) {
          FileName6 = other.FileName6;
        }
        if (other.HasFileURL7) {
          FileURL7 = other.FileURL7;
        }
        if (other.HasFileNO8) {
          FileNO8 = other.FileNO8;
        }
        if (other.HasFileMD59) {
          FileMD59 = other.FileMD59;
        }
        if (other.HasFileSize10) {
          FileSize10 = other.FileSize10;
        }
        if (other.HasData11) {
          Data11 = other.Data11;
        }
        if (other.HasOperation12) {
          Operation12 = other.Operation12;
        }
        if (other.HasBatchNO13) {
          BatchNO13 = other.BatchNO13;
        }
        if (other.HasCategory14) {
          Category14 = other.Category14;
        }
        if (other.notes15_.Count != 0) {
          result.notes15_.Add(other.notes15_);
        }
        if (other.HasExFaPiaoCode16) {
          ExFaPiaoCode16 = other.ExFaPiaoCode16;
        }
        if (other.HasEditable18) {
          Editable18 = other.Editable18;
        }
        if (other.HasExShenheResult19) {
          ExShenheResult19 = other.ExShenheResult19;
        }
        if (other.HasExShenheRemark20) {
          ExShenheRemark20 = other.ExShenheRemark20;
        }
        if (other.HasLocalPath21) {
          LocalPath21 = other.LocalPath21;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgFileInfoFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgFileInfoFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasAuthor1 = input.ReadString(ref result.author1_);
              break;
            }
            case 16: {
              result.hasVersion2 = input.ReadInt32(ref result.version2_);
              break;
            }
            case 34: {
              result.hasCreateTime4 = input.ReadString(ref result.createTime4_);
              break;
            }
            case 42: {
              result.hasRemark5 = input.ReadString(ref result.remark5_);
              break;
            }
            case 50: {
              result.hasFileName6 = input.ReadString(ref result.fileName6_);
              break;
            }
            case 58: {
              result.hasFileURL7 = input.ReadString(ref result.fileURL7_);
              break;
            }
            case 66: {
              result.hasFileNO8 = input.ReadString(ref result.fileNO8_);
              break;
            }
            case 74: {
              result.hasFileMD59 = input.ReadString(ref result.fileMD59_);
              break;
            }
            case 80: {
              result.hasFileSize10 = input.ReadInt32(ref result.fileSize10_);
              break;
            }
            case 90: {
              result.hasData11 = input.ReadBytes(ref result.data11_);
              break;
            }
            case 96: {
              object unknown;
              if(input.ReadEnum(ref result.operation12_, out unknown)) {
                result.hasOperation12 = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(12, (ulong)(int)unknown);
              }
              break;
            }
            case 106: {
              result.hasBatchNO13 = input.ReadString(ref result.batchNO13_);
              break;
            }
            case 114: {
              result.hasCategory14 = input.ReadString(ref result.category14_);
              break;
            }
            case 122: {
              input.ReadMessageArray(tag, field_name, result.notes15_, global::DocScanner.Bean.pb.MsgNoteInfo.DefaultInstance, extensionRegistry);
              break;
            }
            case 130: {
              result.hasExFaPiaoCode16 = input.ReadString(ref result.exFaPiaoCode16_);
              break;
            }
            case 144: {
              result.hasEditable18 = input.ReadBool(ref result.editable18_);
              break;
            }
            case 152: {
              result.hasExShenheResult19 = input.ReadInt32(ref result.exShenheResult19_);
              break;
            }
            case 162: {
              result.hasExShenheRemark20 = input.ReadString(ref result.exShenheRemark20_);
              break;
            }
            case 170: {
              result.hasLocalPath21 = input.ReadString(ref result.localPath21_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAuthor1 {
        get { return result.hasAuthor1; }
      }
      public string Author1 {
        get { return result.Author1; }
        set { SetAuthor1(value); }
      }
      public Builder SetAuthor1(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAuthor1 = true;
        result.author1_ = value;
        return this;
      }
      public Builder ClearAuthor1() {
        PrepareBuilder();
        result.hasAuthor1 = false;
        result.author1_ = "";
        return this;
      }
      
      public bool HasVersion2 {
        get { return result.hasVersion2; }
      }
      public int Version2 {
        get { return result.Version2; }
        set { SetVersion2(value); }
      }
      public Builder SetVersion2(int value) {
        PrepareBuilder();
        result.hasVersion2 = true;
        result.version2_ = value;
        return this;
      }
      public Builder ClearVersion2() {
        PrepareBuilder();
        result.hasVersion2 = false;
        result.version2_ = 0;
        return this;
      }
      
      public bool HasCreateTime4 {
        get { return result.hasCreateTime4; }
      }
      public string CreateTime4 {
        get { return result.CreateTime4; }
        set { SetCreateTime4(value); }
      }
      public Builder SetCreateTime4(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCreateTime4 = true;
        result.createTime4_ = value;
        return this;
      }
      public Builder ClearCreateTime4() {
        PrepareBuilder();
        result.hasCreateTime4 = false;
        result.createTime4_ = "";
        return this;
      }
      
      public bool HasRemark5 {
        get { return result.hasRemark5; }
      }
      public string Remark5 {
        get { return result.Remark5; }
        set { SetRemark5(value); }
      }
      public Builder SetRemark5(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRemark5 = true;
        result.remark5_ = value;
        return this;
      }
      public Builder ClearRemark5() {
        PrepareBuilder();
        result.hasRemark5 = false;
        result.remark5_ = "";
        return this;
      }
      
      public bool HasFileName6 {
        get { return result.hasFileName6; }
      }
      public string FileName6 {
        get { return result.FileName6; }
        set { SetFileName6(value); }
      }
      public Builder SetFileName6(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFileName6 = true;
        result.fileName6_ = value;
        return this;
      }
      public Builder ClearFileName6() {
        PrepareBuilder();
        result.hasFileName6 = false;
        result.fileName6_ = "";
        return this;
      }
      
      public bool HasFileURL7 {
        get { return result.hasFileURL7; }
      }
      public string FileURL7 {
        get { return result.FileURL7; }
        set { SetFileURL7(value); }
      }
      public Builder SetFileURL7(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFileURL7 = true;
        result.fileURL7_ = value;
        return this;
      }
      public Builder ClearFileURL7() {
        PrepareBuilder();
        result.hasFileURL7 = false;
        result.fileURL7_ = "";
        return this;
      }
      
      public bool HasFileNO8 {
        get { return result.hasFileNO8; }
      }
      public string FileNO8 {
        get { return result.FileNO8; }
        set { SetFileNO8(value); }
      }
      public Builder SetFileNO8(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFileNO8 = true;
        result.fileNO8_ = value;
        return this;
      }
      public Builder ClearFileNO8() {
        PrepareBuilder();
        result.hasFileNO8 = false;
        result.fileNO8_ = "";
        return this;
      }
      
      public bool HasFileMD59 {
        get { return result.hasFileMD59; }
      }
      public string FileMD59 {
        get { return result.FileMD59; }
        set { SetFileMD59(value); }
      }
      public Builder SetFileMD59(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasFileMD59 = true;
        result.fileMD59_ = value;
        return this;
      }
      public Builder ClearFileMD59() {
        PrepareBuilder();
        result.hasFileMD59 = false;
        result.fileMD59_ = "";
        return this;
      }
      
      public bool HasFileSize10 {
        get { return result.hasFileSize10; }
      }
      public int FileSize10 {
        get { return result.FileSize10; }
        set { SetFileSize10(value); }
      }
      public Builder SetFileSize10(int value) {
        PrepareBuilder();
        result.hasFileSize10 = true;
        result.fileSize10_ = value;
        return this;
      }
      public Builder ClearFileSize10() {
        PrepareBuilder();
        result.hasFileSize10 = false;
        result.fileSize10_ = 0;
        return this;
      }
      
      public bool HasData11 {
        get { return result.hasData11; }
      }
      public pb::ByteString Data11 {
        get { return result.Data11; }
        set { SetData11(value); }
      }
      public Builder SetData11(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasData11 = true;
        result.data11_ = value;
        return this;
      }
      public Builder ClearData11() {
        PrepareBuilder();
        result.hasData11 = false;
        result.data11_ = pb::ByteString.Empty;
        return this;
      }
      
      public bool HasOperation12 {
       get { return result.hasOperation12; }
      }
      public global::DocScanner.Bean.pb.EOperType Operation12 {
        get { return result.Operation12; }
        set { SetOperation12(value); }
      }
      public Builder SetOperation12(global::DocScanner.Bean.pb.EOperType value) {
        PrepareBuilder();
        result.hasOperation12 = true;
        result.operation12_ = value;
        return this;
      }
      public Builder ClearOperation12() {
        PrepareBuilder();
        result.hasOperation12 = false;
        result.operation12_ = global::DocScanner.Bean.pb.EOperType.eFROM_SERVER_NOTCHANGE;
        return this;
      }
      
      public bool HasBatchNO13 {
        get { return result.hasBatchNO13; }
      }
      public string BatchNO13 {
        get { return result.BatchNO13; }
        set { SetBatchNO13(value); }
      }
      public Builder SetBatchNO13(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBatchNO13 = true;
        result.batchNO13_ = value;
        return this;
      }
      public Builder ClearBatchNO13() {
        PrepareBuilder();
        result.hasBatchNO13 = false;
        result.batchNO13_ = "";
        return this;
      }
      
      public bool HasCategory14 {
        get { return result.hasCategory14; }
      }
      public string Category14 {
        get { return result.Category14; }
        set { SetCategory14(value); }
      }
      public Builder SetCategory14(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCategory14 = true;
        result.category14_ = value;
        return this;
      }
      public Builder ClearCategory14() {
        PrepareBuilder();
        result.hasCategory14 = false;
        result.category14_ = "";
        return this;
      }
      
      public pbc::IPopsicleList<global::DocScanner.Bean.pb.MsgNoteInfo> Notes15List {
        get { return PrepareBuilder().notes15_; }
      }
      public int Notes15Count {
        get { return result.Notes15Count; }
      }
      public global::DocScanner.Bean.pb.MsgNoteInfo GetNotes15(int index) {
        return result.GetNotes15(index);
      }
      public Builder SetNotes15(int index, global::DocScanner.Bean.pb.MsgNoteInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.notes15_[index] = value;
        return this;
      }
      public Builder SetNotes15(int index, global::DocScanner.Bean.pb.MsgNoteInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.notes15_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddNotes15(global::DocScanner.Bean.pb.MsgNoteInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.notes15_.Add(value);
        return this;
      }
      public Builder AddNotes15(global::DocScanner.Bean.pb.MsgNoteInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.notes15_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeNotes15(scg::IEnumerable<global::DocScanner.Bean.pb.MsgNoteInfo> values) {
        PrepareBuilder();
        result.notes15_.Add(values);
        return this;
      }
      public Builder ClearNotes15() {
        PrepareBuilder();
        result.notes15_.Clear();
        return this;
      }
      
      public bool HasExFaPiaoCode16 {
        get { return result.hasExFaPiaoCode16; }
      }
      public string ExFaPiaoCode16 {
        get { return result.ExFaPiaoCode16; }
        set { SetExFaPiaoCode16(value); }
      }
      public Builder SetExFaPiaoCode16(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasExFaPiaoCode16 = true;
        result.exFaPiaoCode16_ = value;
        return this;
      }
      public Builder ClearExFaPiaoCode16() {
        PrepareBuilder();
        result.hasExFaPiaoCode16 = false;
        result.exFaPiaoCode16_ = "";
        return this;
      }
      
      public bool HasEditable18 {
        get { return result.hasEditable18; }
      }
      public bool Editable18 {
        get { return result.Editable18; }
        set { SetEditable18(value); }
      }
      public Builder SetEditable18(bool value) {
        PrepareBuilder();
        result.hasEditable18 = true;
        result.editable18_ = value;
        return this;
      }
      public Builder ClearEditable18() {
        PrepareBuilder();
        result.hasEditable18 = false;
        result.editable18_ = false;
        return this;
      }
      
      public bool HasExShenheResult19 {
        get { return result.hasExShenheResult19; }
      }
      public int ExShenheResult19 {
        get { return result.ExShenheResult19; }
        set { SetExShenheResult19(value); }
      }
      public Builder SetExShenheResult19(int value) {
        PrepareBuilder();
        result.hasExShenheResult19 = true;
        result.exShenheResult19_ = value;
        return this;
      }
      public Builder ClearExShenheResult19() {
        PrepareBuilder();
        result.hasExShenheResult19 = false;
        result.exShenheResult19_ = 0;
        return this;
      }
      
      public bool HasExShenheRemark20 {
        get { return result.hasExShenheRemark20; }
      }
      public string ExShenheRemark20 {
        get { return result.ExShenheRemark20; }
        set { SetExShenheRemark20(value); }
      }
      public Builder SetExShenheRemark20(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasExShenheRemark20 = true;
        result.exShenheRemark20_ = value;
        return this;
      }
      public Builder ClearExShenheRemark20() {
        PrepareBuilder();
        result.hasExShenheRemark20 = false;
        result.exShenheRemark20_ = "";
        return this;
      }
      
      public bool HasLocalPath21 {
        get { return result.hasLocalPath21; }
      }
      public string LocalPath21 {
        get { return result.LocalPath21; }
        set { SetLocalPath21(value); }
      }
      public Builder SetLocalPath21(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasLocalPath21 = true;
        result.localPath21_ = value;
        return this;
      }
      public Builder ClearLocalPath21() {
        PrepareBuilder();
        result.hasLocalPath21 = false;
        result.localPath21_ = "";
        return this;
      }
    }
    static MsgFileInfo() {
      object.ReferenceEquals(global::DocScanner.Bean.pb.PbInfo.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class MsgQueryBatchInfo : pb::GeneratedMessage<MsgQueryBatchInfo, MsgQueryBatchInfo.Builder> {
    private MsgQueryBatchInfo() { }
    private static readonly MsgQueryBatchInfo defaultInstance = new MsgQueryBatchInfo().MakeReadOnly();
    private static readonly string[] _msgQueryBatchInfoFieldNames = new string[] { "BatchNO6", "MachineID44", "OrgID3", "Password2", "QueryDate4", "QueryTime5", "SourceIP42", "User1", "Version7" };
    private static readonly uint[] _msgQueryBatchInfoFieldTags = new uint[] { 50, 354, 26, 18, 32, 40, 338, 10, 56 };
    public static MsgQueryBatchInfo DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MsgQueryBatchInfo DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MsgQueryBatchInfo ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DocScanner.Bean.pb.PbInfo.internal__static_DocScanner_Bean_pb_MsgQueryBatchInfo__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MsgQueryBatchInfo, MsgQueryBatchInfo.Builder> InternalFieldAccessors {
      get { return global::DocScanner.Bean.pb.PbInfo.internal__static_DocScanner_Bean_pb_MsgQueryBatchInfo__FieldAccessorTable; }
    }
    
    public const int User1FieldNumber = 1;
    private bool hasUser1;
    private string user1_ = "";
    public bool HasUser1 {
      get { return hasUser1; }
    }
    public string User1 {
      get { return user1_; }
    }
    
    public const int Password2FieldNumber = 2;
    private bool hasPassword2;
    private string password2_ = "";
    public bool HasPassword2 {
      get { return hasPassword2; }
    }
    public string Password2 {
      get { return password2_; }
    }
    
    public const int OrgID3FieldNumber = 3;
    private bool hasOrgID3;
    private string orgID3_ = "";
    public bool HasOrgID3 {
      get { return hasOrgID3; }
    }
    public string OrgID3 {
      get { return orgID3_; }
    }
    
    public const int QueryDate4FieldNumber = 4;
    private bool hasQueryDate4;
    private int queryDate4_;
    public bool HasQueryDate4 {
      get { return hasQueryDate4; }
    }
    public int QueryDate4 {
      get { return queryDate4_; }
    }
    
    public const int QueryTime5FieldNumber = 5;
    private bool hasQueryTime5;
    private int queryTime5_;
    public bool HasQueryTime5 {
      get { return hasQueryTime5; }
    }
    public int QueryTime5 {
      get { return queryTime5_; }
    }
    
    public const int BatchNO6FieldNumber = 6;
    private bool hasBatchNO6;
    private string batchNO6_ = "";
    public bool HasBatchNO6 {
      get { return hasBatchNO6; }
    }
    public string BatchNO6 {
      get { return batchNO6_; }
    }
    
    public const int Version7FieldNumber = 7;
    private bool hasVersion7;
    private int version7_;
    public bool HasVersion7 {
      get { return hasVersion7; }
    }
    public int Version7 {
      get { return version7_; }
    }
    
    public const int SourceIP42FieldNumber = 42;
    private bool hasSourceIP42;
    private string sourceIP42_ = "";
    public bool HasSourceIP42 {
      get { return hasSourceIP42; }
    }
    public string SourceIP42 {
      get { return sourceIP42_; }
    }
    
    public const int MachineID44FieldNumber = 44;
    private bool hasMachineID44;
    private string machineID44_ = "";
    public bool HasMachineID44 {
      get { return hasMachineID44; }
    }
    public string MachineID44 {
      get { return machineID44_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasUser1) return false;
        if (!hasPassword2) return false;
        if (!hasOrgID3) return false;
        if (!hasQueryDate4) return false;
        if (!hasQueryTime5) return false;
        if (!hasBatchNO6) return false;
        if (!hasVersion7) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgQueryBatchInfoFieldNames;
      if (hasUser1) {
        output.WriteString(1, field_names[7], User1);
      }
      if (hasPassword2) {
        output.WriteString(2, field_names[3], Password2);
      }
      if (hasOrgID3) {
        output.WriteString(3, field_names[2], OrgID3);
      }
      if (hasQueryDate4) {
        output.WriteInt32(4, field_names[4], QueryDate4);
      }
      if (hasQueryTime5) {
        output.WriteInt32(5, field_names[5], QueryTime5);
      }
      if (hasBatchNO6) {
        output.WriteString(6, field_names[0], BatchNO6);
      }
      if (hasVersion7) {
        output.WriteInt32(7, field_names[8], Version7);
      }
      if (hasSourceIP42) {
        output.WriteString(42, field_names[6], SourceIP42);
      }
      if (hasMachineID44) {
        output.WriteString(44, field_names[1], MachineID44);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasUser1) {
          size += pb::CodedOutputStream.ComputeStringSize(1, User1);
        }
        if (hasPassword2) {
          size += pb::CodedOutputStream.ComputeStringSize(2, Password2);
        }
        if (hasOrgID3) {
          size += pb::CodedOutputStream.ComputeStringSize(3, OrgID3);
        }
        if (hasQueryDate4) {
          size += pb::CodedOutputStream.ComputeInt32Size(4, QueryDate4);
        }
        if (hasQueryTime5) {
          size += pb::CodedOutputStream.ComputeInt32Size(5, QueryTime5);
        }
        if (hasBatchNO6) {
          size += pb::CodedOutputStream.ComputeStringSize(6, BatchNO6);
        }
        if (hasVersion7) {
          size += pb::CodedOutputStream.ComputeInt32Size(7, Version7);
        }
        if (hasSourceIP42) {
          size += pb::CodedOutputStream.ComputeStringSize(42, SourceIP42);
        }
        if (hasMachineID44) {
          size += pb::CodedOutputStream.ComputeStringSize(44, MachineID44);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static MsgQueryBatchInfo ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MsgQueryBatchInfo ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MsgQueryBatchInfo ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MsgQueryBatchInfo ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MsgQueryBatchInfo ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MsgQueryBatchInfo ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MsgQueryBatchInfo ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MsgQueryBatchInfo ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MsgQueryBatchInfo ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MsgQueryBatchInfo ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MsgQueryBatchInfo MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MsgQueryBatchInfo prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<MsgQueryBatchInfo, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MsgQueryBatchInfo cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MsgQueryBatchInfo result;
      
      private MsgQueryBatchInfo PrepareBuilder() {
        if (resultIsReadOnly) {
          MsgQueryBatchInfo original = result;
          result = new MsgQueryBatchInfo();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MsgQueryBatchInfo MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DocScanner.Bean.pb.MsgQueryBatchInfo.Descriptor; }
      }
      
      public override MsgQueryBatchInfo DefaultInstanceForType {
        get { return global::DocScanner.Bean.pb.MsgQueryBatchInfo.DefaultInstance; }
      }
      
      public override MsgQueryBatchInfo BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MsgQueryBatchInfo) {
          return MergeFrom((MsgQueryBatchInfo) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MsgQueryBatchInfo other) {
        if (other == global::DocScanner.Bean.pb.MsgQueryBatchInfo.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasUser1) {
          User1 = other.User1;
        }
        if (other.HasPassword2) {
          Password2 = other.Password2;
        }
        if (other.HasOrgID3) {
          OrgID3 = other.OrgID3;
        }
        if (other.HasQueryDate4) {
          QueryDate4 = other.QueryDate4;
        }
        if (other.HasQueryTime5) {
          QueryTime5 = other.QueryTime5;
        }
        if (other.HasBatchNO6) {
          BatchNO6 = other.BatchNO6;
        }
        if (other.HasVersion7) {
          Version7 = other.Version7;
        }
        if (other.HasSourceIP42) {
          SourceIP42 = other.SourceIP42;
        }
        if (other.HasMachineID44) {
          MachineID44 = other.MachineID44;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgQueryBatchInfoFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgQueryBatchInfoFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasUser1 = input.ReadString(ref result.user1_);
              break;
            }
            case 18: {
              result.hasPassword2 = input.ReadString(ref result.password2_);
              break;
            }
            case 26: {
              result.hasOrgID3 = input.ReadString(ref result.orgID3_);
              break;
            }
            case 32: {
              result.hasQueryDate4 = input.ReadInt32(ref result.queryDate4_);
              break;
            }
            case 40: {
              result.hasQueryTime5 = input.ReadInt32(ref result.queryTime5_);
              break;
            }
            case 50: {
              result.hasBatchNO6 = input.ReadString(ref result.batchNO6_);
              break;
            }
            case 56: {
              result.hasVersion7 = input.ReadInt32(ref result.version7_);
              break;
            }
            case 338: {
              result.hasSourceIP42 = input.ReadString(ref result.sourceIP42_);
              break;
            }
            case 354: {
              result.hasMachineID44 = input.ReadString(ref result.machineID44_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasUser1 {
        get { return result.hasUser1; }
      }
      public string User1 {
        get { return result.User1; }
        set { SetUser1(value); }
      }
      public Builder SetUser1(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUser1 = true;
        result.user1_ = value;
        return this;
      }
      public Builder ClearUser1() {
        PrepareBuilder();
        result.hasUser1 = false;
        result.user1_ = "";
        return this;
      }
      
      public bool HasPassword2 {
        get { return result.hasPassword2; }
      }
      public string Password2 {
        get { return result.Password2; }
        set { SetPassword2(value); }
      }
      public Builder SetPassword2(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPassword2 = true;
        result.password2_ = value;
        return this;
      }
      public Builder ClearPassword2() {
        PrepareBuilder();
        result.hasPassword2 = false;
        result.password2_ = "";
        return this;
      }
      
      public bool HasOrgID3 {
        get { return result.hasOrgID3; }
      }
      public string OrgID3 {
        get { return result.OrgID3; }
        set { SetOrgID3(value); }
      }
      public Builder SetOrgID3(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasOrgID3 = true;
        result.orgID3_ = value;
        return this;
      }
      public Builder ClearOrgID3() {
        PrepareBuilder();
        result.hasOrgID3 = false;
        result.orgID3_ = "";
        return this;
      }
      
      public bool HasQueryDate4 {
        get { return result.hasQueryDate4; }
      }
      public int QueryDate4 {
        get { return result.QueryDate4; }
        set { SetQueryDate4(value); }
      }
      public Builder SetQueryDate4(int value) {
        PrepareBuilder();
        result.hasQueryDate4 = true;
        result.queryDate4_ = value;
        return this;
      }
      public Builder ClearQueryDate4() {
        PrepareBuilder();
        result.hasQueryDate4 = false;
        result.queryDate4_ = 0;
        return this;
      }
      
      public bool HasQueryTime5 {
        get { return result.hasQueryTime5; }
      }
      public int QueryTime5 {
        get { return result.QueryTime5; }
        set { SetQueryTime5(value); }
      }
      public Builder SetQueryTime5(int value) {
        PrepareBuilder();
        result.hasQueryTime5 = true;
        result.queryTime5_ = value;
        return this;
      }
      public Builder ClearQueryTime5() {
        PrepareBuilder();
        result.hasQueryTime5 = false;
        result.queryTime5_ = 0;
        return this;
      }
      
      public bool HasBatchNO6 {
        get { return result.hasBatchNO6; }
      }
      public string BatchNO6 {
        get { return result.BatchNO6; }
        set { SetBatchNO6(value); }
      }
      public Builder SetBatchNO6(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBatchNO6 = true;
        result.batchNO6_ = value;
        return this;
      }
      public Builder ClearBatchNO6() {
        PrepareBuilder();
        result.hasBatchNO6 = false;
        result.batchNO6_ = "";
        return this;
      }
      
      public bool HasVersion7 {
        get { return result.hasVersion7; }
      }
      public int Version7 {
        get { return result.Version7; }
        set { SetVersion7(value); }
      }
      public Builder SetVersion7(int value) {
        PrepareBuilder();
        result.hasVersion7 = true;
        result.version7_ = value;
        return this;
      }
      public Builder ClearVersion7() {
        PrepareBuilder();
        result.hasVersion7 = false;
        result.version7_ = 0;
        return this;
      }
      
      public bool HasSourceIP42 {
        get { return result.hasSourceIP42; }
      }
      public string SourceIP42 {
        get { return result.SourceIP42; }
        set { SetSourceIP42(value); }
      }
      public Builder SetSourceIP42(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSourceIP42 = true;
        result.sourceIP42_ = value;
        return this;
      }
      public Builder ClearSourceIP42() {
        PrepareBuilder();
        result.hasSourceIP42 = false;
        result.sourceIP42_ = "";
        return this;
      }
      
      public bool HasMachineID44 {
        get { return result.hasMachineID44; }
      }
      public string MachineID44 {
        get { return result.MachineID44; }
        set { SetMachineID44(value); }
      }
      public Builder SetMachineID44(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMachineID44 = true;
        result.machineID44_ = value;
        return this;
      }
      public Builder ClearMachineID44() {
        PrepareBuilder();
        result.hasMachineID44 = false;
        result.machineID44_ = "";
        return this;
      }
    }
    static MsgQueryBatchInfo() {
      object.ReferenceEquals(global::DocScanner.Bean.pb.PbInfo.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class MsgOptionQueryBatchs : pb::GeneratedMessage<MsgOptionQueryBatchs, MsgOptionQueryBatchs.Builder> {
    private MsgOptionQueryBatchs() { }
    private static readonly MsgOptionQueryBatchs defaultInstance = new MsgOptionQueryBatchs().MakeReadOnly();
    private static readonly string[] _msgOptionQueryBatchsFieldNames = new string[] { "Password2", "User1" };
    private static readonly uint[] _msgOptionQueryBatchsFieldTags = new uint[] { 18, 10 };
    public static MsgOptionQueryBatchs DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MsgOptionQueryBatchs DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MsgOptionQueryBatchs ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DocScanner.Bean.pb.PbInfo.internal__static_DocScanner_Bean_pb_MsgOptionQueryBatchs__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MsgOptionQueryBatchs, MsgOptionQueryBatchs.Builder> InternalFieldAccessors {
      get { return global::DocScanner.Bean.pb.PbInfo.internal__static_DocScanner_Bean_pb_MsgOptionQueryBatchs__FieldAccessorTable; }
    }
    
    public const int User1FieldNumber = 1;
    private bool hasUser1;
    private string user1_ = "";
    public bool HasUser1 {
      get { return hasUser1; }
    }
    public string User1 {
      get { return user1_; }
    }
    
    public const int Password2FieldNumber = 2;
    private bool hasPassword2;
    private string password2_ = "";
    public bool HasPassword2 {
      get { return hasPassword2; }
    }
    public string Password2 {
      get { return password2_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasUser1) return false;
        if (!hasPassword2) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgOptionQueryBatchsFieldNames;
      if (hasUser1) {
        output.WriteString(1, field_names[1], User1);
      }
      if (hasPassword2) {
        output.WriteString(2, field_names[0], Password2);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasUser1) {
          size += pb::CodedOutputStream.ComputeStringSize(1, User1);
        }
        if (hasPassword2) {
          size += pb::CodedOutputStream.ComputeStringSize(2, Password2);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static MsgOptionQueryBatchs ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MsgOptionQueryBatchs ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MsgOptionQueryBatchs ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MsgOptionQueryBatchs ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MsgOptionQueryBatchs ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MsgOptionQueryBatchs ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MsgOptionQueryBatchs ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MsgOptionQueryBatchs ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MsgOptionQueryBatchs ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MsgOptionQueryBatchs ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MsgOptionQueryBatchs MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MsgOptionQueryBatchs prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<MsgOptionQueryBatchs, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MsgOptionQueryBatchs cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MsgOptionQueryBatchs result;
      
      private MsgOptionQueryBatchs PrepareBuilder() {
        if (resultIsReadOnly) {
          MsgOptionQueryBatchs original = result;
          result = new MsgOptionQueryBatchs();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MsgOptionQueryBatchs MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DocScanner.Bean.pb.MsgOptionQueryBatchs.Descriptor; }
      }
      
      public override MsgOptionQueryBatchs DefaultInstanceForType {
        get { return global::DocScanner.Bean.pb.MsgOptionQueryBatchs.DefaultInstance; }
      }
      
      public override MsgOptionQueryBatchs BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MsgOptionQueryBatchs) {
          return MergeFrom((MsgOptionQueryBatchs) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MsgOptionQueryBatchs other) {
        if (other == global::DocScanner.Bean.pb.MsgOptionQueryBatchs.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasUser1) {
          User1 = other.User1;
        }
        if (other.HasPassword2) {
          Password2 = other.Password2;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgOptionQueryBatchsFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgOptionQueryBatchsFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasUser1 = input.ReadString(ref result.user1_);
              break;
            }
            case 18: {
              result.hasPassword2 = input.ReadString(ref result.password2_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasUser1 {
        get { return result.hasUser1; }
      }
      public string User1 {
        get { return result.User1; }
        set { SetUser1(value); }
      }
      public Builder SetUser1(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUser1 = true;
        result.user1_ = value;
        return this;
      }
      public Builder ClearUser1() {
        PrepareBuilder();
        result.hasUser1 = false;
        result.user1_ = "";
        return this;
      }
      
      public bool HasPassword2 {
        get { return result.hasPassword2; }
      }
      public string Password2 {
        get { return result.Password2; }
        set { SetPassword2(value); }
      }
      public Builder SetPassword2(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPassword2 = true;
        result.password2_ = value;
        return this;
      }
      public Builder ClearPassword2() {
        PrepareBuilder();
        result.hasPassword2 = false;
        result.password2_ = "";
        return this;
      }
    }
    static MsgOptionQueryBatchs() {
      object.ReferenceEquals(global::DocScanner.Bean.pb.PbInfo.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class MsgRspOptionQueryBatchs : pb::GeneratedMessage<MsgRspOptionQueryBatchs, MsgRspOptionQueryBatchs.Builder> {
    private MsgRspOptionQueryBatchs() { }
    private static readonly MsgRspOptionQueryBatchs defaultInstance = new MsgRspOptionQueryBatchs().MakeReadOnly();
    private static readonly string[] _msgRspOptionQueryBatchsFieldNames = new string[] { "BatchNOs2" };
    private static readonly uint[] _msgRspOptionQueryBatchsFieldTags = new uint[] { 18 };
    public static MsgRspOptionQueryBatchs DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MsgRspOptionQueryBatchs DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MsgRspOptionQueryBatchs ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DocScanner.Bean.pb.PbInfo.internal__static_DocScanner_Bean_pb_MsgRspOptionQueryBatchs__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MsgRspOptionQueryBatchs, MsgRspOptionQueryBatchs.Builder> InternalFieldAccessors {
      get { return global::DocScanner.Bean.pb.PbInfo.internal__static_DocScanner_Bean_pb_MsgRspOptionQueryBatchs__FieldAccessorTable; }
    }
    
    public const int BatchNOs2FieldNumber = 2;
    private pbc::PopsicleList<string> batchNOs2_ = new pbc::PopsicleList<string>();
    public scg::IList<string> BatchNOs2List {
      get { return pbc::Lists.AsReadOnly(batchNOs2_); }
    }
    public int BatchNOs2Count {
      get { return batchNOs2_.Count; }
    }
    public string GetBatchNOs2(int index) {
      return batchNOs2_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgRspOptionQueryBatchsFieldNames;
      if (batchNOs2_.Count > 0) {
        output.WriteStringArray(2, field_names[0], batchNOs2_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        {
          int dataSize = 0;
          foreach (string element in BatchNOs2List) {
            dataSize += pb::CodedOutputStream.ComputeStringSizeNoTag(element);
          }
          size += dataSize;
          size += 1 * batchNOs2_.Count;
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static MsgRspOptionQueryBatchs ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MsgRspOptionQueryBatchs ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MsgRspOptionQueryBatchs ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MsgRspOptionQueryBatchs ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MsgRspOptionQueryBatchs ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MsgRspOptionQueryBatchs ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MsgRspOptionQueryBatchs ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MsgRspOptionQueryBatchs ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MsgRspOptionQueryBatchs ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MsgRspOptionQueryBatchs ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MsgRspOptionQueryBatchs MakeReadOnly() {
      batchNOs2_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MsgRspOptionQueryBatchs prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<MsgRspOptionQueryBatchs, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MsgRspOptionQueryBatchs cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MsgRspOptionQueryBatchs result;
      
      private MsgRspOptionQueryBatchs PrepareBuilder() {
        if (resultIsReadOnly) {
          MsgRspOptionQueryBatchs original = result;
          result = new MsgRspOptionQueryBatchs();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MsgRspOptionQueryBatchs MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DocScanner.Bean.pb.MsgRspOptionQueryBatchs.Descriptor; }
      }
      
      public override MsgRspOptionQueryBatchs DefaultInstanceForType {
        get { return global::DocScanner.Bean.pb.MsgRspOptionQueryBatchs.DefaultInstance; }
      }
      
      public override MsgRspOptionQueryBatchs BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MsgRspOptionQueryBatchs) {
          return MergeFrom((MsgRspOptionQueryBatchs) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MsgRspOptionQueryBatchs other) {
        if (other == global::DocScanner.Bean.pb.MsgRspOptionQueryBatchs.DefaultInstance) return this;
        PrepareBuilder();
        if (other.batchNOs2_.Count != 0) {
          result.batchNOs2_.Add(other.batchNOs2_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgRspOptionQueryBatchsFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgRspOptionQueryBatchsFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 18: {
              input.ReadStringArray(tag, field_name, result.batchNOs2_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<string> BatchNOs2List {
        get { return PrepareBuilder().batchNOs2_; }
      }
      public int BatchNOs2Count {
        get { return result.BatchNOs2Count; }
      }
      public string GetBatchNOs2(int index) {
        return result.GetBatchNOs2(index);
      }
      public Builder SetBatchNOs2(int index, string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.batchNOs2_[index] = value;
        return this;
      }
      public Builder AddBatchNOs2(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.batchNOs2_.Add(value);
        return this;
      }
      public Builder AddRangeBatchNOs2(scg::IEnumerable<string> values) {
        PrepareBuilder();
        result.batchNOs2_.Add(values);
        return this;
      }
      public Builder ClearBatchNOs2() {
        PrepareBuilder();
        result.batchNOs2_.Clear();
        return this;
      }
    }
    static MsgRspOptionQueryBatchs() {
      object.ReferenceEquals(global::DocScanner.Bean.pb.PbInfo.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class MsgBatchInfo : pb::GeneratedMessage<MsgBatchInfo, MsgBatchInfo.Builder> {
    private MsgBatchInfo() { }
    private static readonly MsgBatchInfo defaultInstance = new MsgBatchInfo().MakeReadOnly();
    private static readonly string[] _msgBatchInfoFieldNames = new string[] { "Author1", "BarCode13", "BatchNO6", "BusiSysId11", "BusiTypeId12", "CreateTime4", "Editable18", "FileInfos9", "MachineID15", "Operation8", "OrgID10", "Password16", "Remark5", "ResultInfo17", "SourceIP14", "Title7", "Version2", "exShenheRemark20", "exShenheResult19" };
    private static readonly uint[] _msgBatchInfoFieldTags = new uint[] { 10, 106, 50, 90, 98, 34, 144, 74, 122, 64, 82, 130, 42, 138, 114, 58, 16, 162, 152 };
    public static MsgBatchInfo DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MsgBatchInfo DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MsgBatchInfo ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DocScanner.Bean.pb.PbInfo.internal__static_DocScanner_Bean_pb_MsgBatchInfo__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MsgBatchInfo, MsgBatchInfo.Builder> InternalFieldAccessors {
      get { return global::DocScanner.Bean.pb.PbInfo.internal__static_DocScanner_Bean_pb_MsgBatchInfo__FieldAccessorTable; }
    }
    
    public const int Author1FieldNumber = 1;
    private bool hasAuthor1;
    private string author1_ = "";
    public bool HasAuthor1 {
      get { return hasAuthor1; }
    }
    public string Author1 {
      get { return author1_; }
    }
    
    public const int Version2FieldNumber = 2;
    private bool hasVersion2;
    private int version2_;
    public bool HasVersion2 {
      get { return hasVersion2; }
    }
    public int Version2 {
      get { return version2_; }
    }
    
    public const int CreateTime4FieldNumber = 4;
    private bool hasCreateTime4;
    private string createTime4_ = "";
    public bool HasCreateTime4 {
      get { return hasCreateTime4; }
    }
    public string CreateTime4 {
      get { return createTime4_; }
    }
    
    public const int Remark5FieldNumber = 5;
    private bool hasRemark5;
    private string remark5_ = "";
    public bool HasRemark5 {
      get { return hasRemark5; }
    }
    public string Remark5 {
      get { return remark5_; }
    }
    
    public const int BatchNO6FieldNumber = 6;
    private bool hasBatchNO6;
    private string batchNO6_ = "";
    public bool HasBatchNO6 {
      get { return hasBatchNO6; }
    }
    public string BatchNO6 {
      get { return batchNO6_; }
    }
    
    public const int Title7FieldNumber = 7;
    private bool hasTitle7;
    private string title7_ = "";
    public bool HasTitle7 {
      get { return hasTitle7; }
    }
    public string Title7 {
      get { return title7_; }
    }
    
    public const int Operation8FieldNumber = 8;
    private bool hasOperation8;
    private global::DocScanner.Bean.pb.EOperType operation8_ = global::DocScanner.Bean.pb.EOperType.eFROM_SERVER_NOTCHANGE;
    public bool HasOperation8 {
      get { return hasOperation8; }
    }
    public global::DocScanner.Bean.pb.EOperType Operation8 {
      get { return operation8_; }
    }
    
    public const int FileInfos9FieldNumber = 9;
    private pbc::PopsicleList<global::DocScanner.Bean.pb.MsgFileInfo> fileInfos9_ = new pbc::PopsicleList<global::DocScanner.Bean.pb.MsgFileInfo>();
    public scg::IList<global::DocScanner.Bean.pb.MsgFileInfo> FileInfos9List {
      get { return fileInfos9_; }
    }
    public int FileInfos9Count {
      get { return fileInfos9_.Count; }
    }
    public global::DocScanner.Bean.pb.MsgFileInfo GetFileInfos9(int index) {
      return fileInfos9_[index];
    }
    
    public const int OrgID10FieldNumber = 10;
    private bool hasOrgID10;
    private string orgID10_ = "";
    public bool HasOrgID10 {
      get { return hasOrgID10; }
    }
    public string OrgID10 {
      get { return orgID10_; }
    }
    
    public const int BusiSysId11FieldNumber = 11;
    private bool hasBusiSysId11;
    private string busiSysId11_ = "";
    public bool HasBusiSysId11 {
      get { return hasBusiSysId11; }
    }
    public string BusiSysId11 {
      get { return busiSysId11_; }
    }
    
    public const int BusiTypeId12FieldNumber = 12;
    private bool hasBusiTypeId12;
    private string busiTypeId12_ = "";
    public bool HasBusiTypeId12 {
      get { return hasBusiTypeId12; }
    }
    public string BusiTypeId12 {
      get { return busiTypeId12_; }
    }
    
    public const int BarCode13FieldNumber = 13;
    private bool hasBarCode13;
    private string barCode13_ = "";
    public bool HasBarCode13 {
      get { return hasBarCode13; }
    }
    public string BarCode13 {
      get { return barCode13_; }
    }
    
    public const int SourceIP14FieldNumber = 14;
    private bool hasSourceIP14;
    private string sourceIP14_ = "";
    public bool HasSourceIP14 {
      get { return hasSourceIP14; }
    }
    public string SourceIP14 {
      get { return sourceIP14_; }
    }
    
    public const int MachineID15FieldNumber = 15;
    private bool hasMachineID15;
    private string machineID15_ = "";
    public bool HasMachineID15 {
      get { return hasMachineID15; }
    }
    public string MachineID15 {
      get { return machineID15_; }
    }
    
    public const int Password16FieldNumber = 16;
    private bool hasPassword16;
    private string password16_ = "";
    public bool HasPassword16 {
      get { return hasPassword16; }
    }
    public string Password16 {
      get { return password16_; }
    }
    
    public const int ResultInfo17FieldNumber = 17;
    private bool hasResultInfo17;
    private global::DocScanner.Bean.pb.MsgResultInfo resultInfo17_;
    public bool HasResultInfo17 {
      get { return hasResultInfo17; }
    }
    public global::DocScanner.Bean.pb.MsgResultInfo ResultInfo17 {
      get { return resultInfo17_ ?? global::DocScanner.Bean.pb.MsgResultInfo.DefaultInstance; }
    }
    
    public const int Editable18FieldNumber = 18;
    private bool hasEditable18;
    private bool editable18_;
    public bool HasEditable18 {
      get { return hasEditable18; }
    }
    public bool Editable18 {
      get { return editable18_; }
    }
    
    public const int ExShenheResult19FieldNumber = 19;
    private bool hasExShenheResult19;
    private int exShenheResult19_;
    public bool HasExShenheResult19 {
      get { return hasExShenheResult19; }
    }
    public int ExShenheResult19 {
      get { return exShenheResult19_; }
    }
    
    public const int ExShenheRemark20FieldNumber = 20;
    private bool hasExShenheRemark20;
    private string exShenheRemark20_ = "";
    public bool HasExShenheRemark20 {
      get { return hasExShenheRemark20; }
    }
    public string ExShenheRemark20 {
      get { return exShenheRemark20_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasAuthor1) return false;
        if (!hasVersion2) return false;
        if (!hasCreateTime4) return false;
        if (!hasBatchNO6) return false;
        if (!hasOperation8) return false;
        if (!hasPassword16) return false;
        foreach (global::DocScanner.Bean.pb.MsgFileInfo element in FileInfos9List) {
          if (!element.IsInitialized) return false;
        }
        if (HasResultInfo17) {
          if (!ResultInfo17.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgBatchInfoFieldNames;
      if (hasAuthor1) {
        output.WriteString(1, field_names[0], Author1);
      }
      if (hasVersion2) {
        output.WriteInt32(2, field_names[16], Version2);
      }
      if (hasCreateTime4) {
        output.WriteString(4, field_names[5], CreateTime4);
      }
      if (hasRemark5) {
        output.WriteString(5, field_names[12], Remark5);
      }
      if (hasBatchNO6) {
        output.WriteString(6, field_names[2], BatchNO6);
      }
      if (hasTitle7) {
        output.WriteString(7, field_names[15], Title7);
      }
      if (hasOperation8) {
        output.WriteEnum(8, field_names[9], (int) Operation8, Operation8);
      }
      if (fileInfos9_.Count > 0) {
        output.WriteMessageArray(9, field_names[7], fileInfos9_);
      }
      if (hasOrgID10) {
        output.WriteString(10, field_names[10], OrgID10);
      }
      if (hasBusiSysId11) {
        output.WriteString(11, field_names[3], BusiSysId11);
      }
      if (hasBusiTypeId12) {
        output.WriteString(12, field_names[4], BusiTypeId12);
      }
      if (hasBarCode13) {
        output.WriteString(13, field_names[1], BarCode13);
      }
      if (hasSourceIP14) {
        output.WriteString(14, field_names[14], SourceIP14);
      }
      if (hasMachineID15) {
        output.WriteString(15, field_names[8], MachineID15);
      }
      if (hasPassword16) {
        output.WriteString(16, field_names[11], Password16);
      }
      if (hasResultInfo17) {
        output.WriteMessage(17, field_names[13], ResultInfo17);
      }
      if (hasEditable18) {
        output.WriteBool(18, field_names[6], Editable18);
      }
      if (hasExShenheResult19) {
        output.WriteInt32(19, field_names[18], ExShenheResult19);
      }
      if (hasExShenheRemark20) {
        output.WriteString(20, field_names[17], ExShenheRemark20);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasAuthor1) {
          size += pb::CodedOutputStream.ComputeStringSize(1, Author1);
        }
        if (hasVersion2) {
          size += pb::CodedOutputStream.ComputeInt32Size(2, Version2);
        }
        if (hasCreateTime4) {
          size += pb::CodedOutputStream.ComputeStringSize(4, CreateTime4);
        }
        if (hasRemark5) {
          size += pb::CodedOutputStream.ComputeStringSize(5, Remark5);
        }
        if (hasBatchNO6) {
          size += pb::CodedOutputStream.ComputeStringSize(6, BatchNO6);
        }
        if (hasTitle7) {
          size += pb::CodedOutputStream.ComputeStringSize(7, Title7);
        }
        if (hasOperation8) {
          size += pb::CodedOutputStream.ComputeEnumSize(8, (int) Operation8);
        }
        foreach (global::DocScanner.Bean.pb.MsgFileInfo element in FileInfos9List) {
          size += pb::CodedOutputStream.ComputeMessageSize(9, element);
        }
        if (hasOrgID10) {
          size += pb::CodedOutputStream.ComputeStringSize(10, OrgID10);
        }
        if (hasBusiSysId11) {
          size += pb::CodedOutputStream.ComputeStringSize(11, BusiSysId11);
        }
        if (hasBusiTypeId12) {
          size += pb::CodedOutputStream.ComputeStringSize(12, BusiTypeId12);
        }
        if (hasBarCode13) {
          size += pb::CodedOutputStream.ComputeStringSize(13, BarCode13);
        }
        if (hasSourceIP14) {
          size += pb::CodedOutputStream.ComputeStringSize(14, SourceIP14);
        }
        if (hasMachineID15) {
          size += pb::CodedOutputStream.ComputeStringSize(15, MachineID15);
        }
        if (hasPassword16) {
          size += pb::CodedOutputStream.ComputeStringSize(16, Password16);
        }
        if (hasResultInfo17) {
          size += pb::CodedOutputStream.ComputeMessageSize(17, ResultInfo17);
        }
        if (hasEditable18) {
          size += pb::CodedOutputStream.ComputeBoolSize(18, Editable18);
        }
        if (hasExShenheResult19) {
          size += pb::CodedOutputStream.ComputeInt32Size(19, ExShenheResult19);
        }
        if (hasExShenheRemark20) {
          size += pb::CodedOutputStream.ComputeStringSize(20, ExShenheRemark20);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static MsgBatchInfo ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MsgBatchInfo ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MsgBatchInfo ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MsgBatchInfo ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MsgBatchInfo ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MsgBatchInfo ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MsgBatchInfo ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MsgBatchInfo ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MsgBatchInfo ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MsgBatchInfo ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MsgBatchInfo MakeReadOnly() {
      fileInfos9_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MsgBatchInfo prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<MsgBatchInfo, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MsgBatchInfo cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MsgBatchInfo result;
      
      private MsgBatchInfo PrepareBuilder() {
        if (resultIsReadOnly) {
          MsgBatchInfo original = result;
          result = new MsgBatchInfo();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MsgBatchInfo MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DocScanner.Bean.pb.MsgBatchInfo.Descriptor; }
      }
      
      public override MsgBatchInfo DefaultInstanceForType {
        get { return global::DocScanner.Bean.pb.MsgBatchInfo.DefaultInstance; }
      }
      
      public override MsgBatchInfo BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MsgBatchInfo) {
          return MergeFrom((MsgBatchInfo) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MsgBatchInfo other) {
        if (other == global::DocScanner.Bean.pb.MsgBatchInfo.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasAuthor1) {
          Author1 = other.Author1;
        }
        if (other.HasVersion2) {
          Version2 = other.Version2;
        }
        if (other.HasCreateTime4) {
          CreateTime4 = other.CreateTime4;
        }
        if (other.HasRemark5) {
          Remark5 = other.Remark5;
        }
        if (other.HasBatchNO6) {
          BatchNO6 = other.BatchNO6;
        }
        if (other.HasTitle7) {
          Title7 = other.Title7;
        }
        if (other.HasOperation8) {
          Operation8 = other.Operation8;
        }
        if (other.fileInfos9_.Count != 0) {
          result.fileInfos9_.Add(other.fileInfos9_);
        }
        if (other.HasOrgID10) {
          OrgID10 = other.OrgID10;
        }
        if (other.HasBusiSysId11) {
          BusiSysId11 = other.BusiSysId11;
        }
        if (other.HasBusiTypeId12) {
          BusiTypeId12 = other.BusiTypeId12;
        }
        if (other.HasBarCode13) {
          BarCode13 = other.BarCode13;
        }
        if (other.HasSourceIP14) {
          SourceIP14 = other.SourceIP14;
        }
        if (other.HasMachineID15) {
          MachineID15 = other.MachineID15;
        }
        if (other.HasPassword16) {
          Password16 = other.Password16;
        }
        if (other.HasResultInfo17) {
          MergeResultInfo17(other.ResultInfo17);
        }
        if (other.HasEditable18) {
          Editable18 = other.Editable18;
        }
        if (other.HasExShenheResult19) {
          ExShenheResult19 = other.ExShenheResult19;
        }
        if (other.HasExShenheRemark20) {
          ExShenheRemark20 = other.ExShenheRemark20;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgBatchInfoFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgBatchInfoFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasAuthor1 = input.ReadString(ref result.author1_);
              break;
            }
            case 16: {
              result.hasVersion2 = input.ReadInt32(ref result.version2_);
              break;
            }
            case 34: {
              result.hasCreateTime4 = input.ReadString(ref result.createTime4_);
              break;
            }
            case 42: {
              result.hasRemark5 = input.ReadString(ref result.remark5_);
              break;
            }
            case 50: {
              result.hasBatchNO6 = input.ReadString(ref result.batchNO6_);
              break;
            }
            case 58: {
              result.hasTitle7 = input.ReadString(ref result.title7_);
              break;
            }
            case 64: {
              object unknown;
              if(input.ReadEnum(ref result.operation8_, out unknown)) {
                result.hasOperation8 = true;
              } else if(unknown is int) {
                if (unknownFields == null) {
                  unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                }
                unknownFields.MergeVarintField(8, (ulong)(int)unknown);
              }
              break;
            }
            case 74: {
              input.ReadMessageArray(tag, field_name, result.fileInfos9_, global::DocScanner.Bean.pb.MsgFileInfo.DefaultInstance, extensionRegistry);
              break;
            }
            case 82: {
              result.hasOrgID10 = input.ReadString(ref result.orgID10_);
              break;
            }
            case 90: {
              result.hasBusiSysId11 = input.ReadString(ref result.busiSysId11_);
              break;
            }
            case 98: {
              result.hasBusiTypeId12 = input.ReadString(ref result.busiTypeId12_);
              break;
            }
            case 106: {
              result.hasBarCode13 = input.ReadString(ref result.barCode13_);
              break;
            }
            case 114: {
              result.hasSourceIP14 = input.ReadString(ref result.sourceIP14_);
              break;
            }
            case 122: {
              result.hasMachineID15 = input.ReadString(ref result.machineID15_);
              break;
            }
            case 130: {
              result.hasPassword16 = input.ReadString(ref result.password16_);
              break;
            }
            case 138: {
              global::DocScanner.Bean.pb.MsgResultInfo.Builder subBuilder = global::DocScanner.Bean.pb.MsgResultInfo.CreateBuilder();
              if (result.hasResultInfo17) {
                subBuilder.MergeFrom(ResultInfo17);
              }
              input.ReadMessage(subBuilder, extensionRegistry);
              ResultInfo17 = subBuilder.BuildPartial();
              break;
            }
            case 144: {
              result.hasEditable18 = input.ReadBool(ref result.editable18_);
              break;
            }
            case 152: {
              result.hasExShenheResult19 = input.ReadInt32(ref result.exShenheResult19_);
              break;
            }
            case 162: {
              result.hasExShenheRemark20 = input.ReadString(ref result.exShenheRemark20_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasAuthor1 {
        get { return result.hasAuthor1; }
      }
      public string Author1 {
        get { return result.Author1; }
        set { SetAuthor1(value); }
      }
      public Builder SetAuthor1(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasAuthor1 = true;
        result.author1_ = value;
        return this;
      }
      public Builder ClearAuthor1() {
        PrepareBuilder();
        result.hasAuthor1 = false;
        result.author1_ = "";
        return this;
      }
      
      public bool HasVersion2 {
        get { return result.hasVersion2; }
      }
      public int Version2 {
        get { return result.Version2; }
        set { SetVersion2(value); }
      }
      public Builder SetVersion2(int value) {
        PrepareBuilder();
        result.hasVersion2 = true;
        result.version2_ = value;
        return this;
      }
      public Builder ClearVersion2() {
        PrepareBuilder();
        result.hasVersion2 = false;
        result.version2_ = 0;
        return this;
      }
      
      public bool HasCreateTime4 {
        get { return result.hasCreateTime4; }
      }
      public string CreateTime4 {
        get { return result.CreateTime4; }
        set { SetCreateTime4(value); }
      }
      public Builder SetCreateTime4(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasCreateTime4 = true;
        result.createTime4_ = value;
        return this;
      }
      public Builder ClearCreateTime4() {
        PrepareBuilder();
        result.hasCreateTime4 = false;
        result.createTime4_ = "";
        return this;
      }
      
      public bool HasRemark5 {
        get { return result.hasRemark5; }
      }
      public string Remark5 {
        get { return result.Remark5; }
        set { SetRemark5(value); }
      }
      public Builder SetRemark5(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasRemark5 = true;
        result.remark5_ = value;
        return this;
      }
      public Builder ClearRemark5() {
        PrepareBuilder();
        result.hasRemark5 = false;
        result.remark5_ = "";
        return this;
      }
      
      public bool HasBatchNO6 {
        get { return result.hasBatchNO6; }
      }
      public string BatchNO6 {
        get { return result.BatchNO6; }
        set { SetBatchNO6(value); }
      }
      public Builder SetBatchNO6(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBatchNO6 = true;
        result.batchNO6_ = value;
        return this;
      }
      public Builder ClearBatchNO6() {
        PrepareBuilder();
        result.hasBatchNO6 = false;
        result.batchNO6_ = "";
        return this;
      }
      
      public bool HasTitle7 {
        get { return result.hasTitle7; }
      }
      public string Title7 {
        get { return result.Title7; }
        set { SetTitle7(value); }
      }
      public Builder SetTitle7(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasTitle7 = true;
        result.title7_ = value;
        return this;
      }
      public Builder ClearTitle7() {
        PrepareBuilder();
        result.hasTitle7 = false;
        result.title7_ = "";
        return this;
      }
      
      public bool HasOperation8 {
       get { return result.hasOperation8; }
      }
      public global::DocScanner.Bean.pb.EOperType Operation8 {
        get { return result.Operation8; }
        set { SetOperation8(value); }
      }
      public Builder SetOperation8(global::DocScanner.Bean.pb.EOperType value) {
        PrepareBuilder();
        result.hasOperation8 = true;
        result.operation8_ = value;
        return this;
      }
      public Builder ClearOperation8() {
        PrepareBuilder();
        result.hasOperation8 = false;
        result.operation8_ = global::DocScanner.Bean.pb.EOperType.eFROM_SERVER_NOTCHANGE;
        return this;
      }
      
      public pbc::IPopsicleList<global::DocScanner.Bean.pb.MsgFileInfo> FileInfos9List {
        get { return PrepareBuilder().fileInfos9_; }
      }
      public int FileInfos9Count {
        get { return result.FileInfos9Count; }
      }
      public global::DocScanner.Bean.pb.MsgFileInfo GetFileInfos9(int index) {
        return result.GetFileInfos9(index);
      }
      public Builder SetFileInfos9(int index, global::DocScanner.Bean.pb.MsgFileInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.fileInfos9_[index] = value;
        return this;
      }
      public Builder SetFileInfos9(int index, global::DocScanner.Bean.pb.MsgFileInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.fileInfos9_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddFileInfos9(global::DocScanner.Bean.pb.MsgFileInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.fileInfos9_.Add(value);
        return this;
      }
      public Builder AddFileInfos9(global::DocScanner.Bean.pb.MsgFileInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.fileInfos9_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeFileInfos9(scg::IEnumerable<global::DocScanner.Bean.pb.MsgFileInfo> values) {
        PrepareBuilder();
        result.fileInfos9_.Add(values);
        return this;
      }
      public Builder ClearFileInfos9() {
        PrepareBuilder();
        result.fileInfos9_.Clear();
        return this;
      }
      
      public bool HasOrgID10 {
        get { return result.hasOrgID10; }
      }
      public string OrgID10 {
        get { return result.OrgID10; }
        set { SetOrgID10(value); }
      }
      public Builder SetOrgID10(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasOrgID10 = true;
        result.orgID10_ = value;
        return this;
      }
      public Builder ClearOrgID10() {
        PrepareBuilder();
        result.hasOrgID10 = false;
        result.orgID10_ = "";
        return this;
      }
      
      public bool HasBusiSysId11 {
        get { return result.hasBusiSysId11; }
      }
      public string BusiSysId11 {
        get { return result.BusiSysId11; }
        set { SetBusiSysId11(value); }
      }
      public Builder SetBusiSysId11(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBusiSysId11 = true;
        result.busiSysId11_ = value;
        return this;
      }
      public Builder ClearBusiSysId11() {
        PrepareBuilder();
        result.hasBusiSysId11 = false;
        result.busiSysId11_ = "";
        return this;
      }
      
      public bool HasBusiTypeId12 {
        get { return result.hasBusiTypeId12; }
      }
      public string BusiTypeId12 {
        get { return result.BusiTypeId12; }
        set { SetBusiTypeId12(value); }
      }
      public Builder SetBusiTypeId12(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBusiTypeId12 = true;
        result.busiTypeId12_ = value;
        return this;
      }
      public Builder ClearBusiTypeId12() {
        PrepareBuilder();
        result.hasBusiTypeId12 = false;
        result.busiTypeId12_ = "";
        return this;
      }
      
      public bool HasBarCode13 {
        get { return result.hasBarCode13; }
      }
      public string BarCode13 {
        get { return result.BarCode13; }
        set { SetBarCode13(value); }
      }
      public Builder SetBarCode13(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBarCode13 = true;
        result.barCode13_ = value;
        return this;
      }
      public Builder ClearBarCode13() {
        PrepareBuilder();
        result.hasBarCode13 = false;
        result.barCode13_ = "";
        return this;
      }
      
      public bool HasSourceIP14 {
        get { return result.hasSourceIP14; }
      }
      public string SourceIP14 {
        get { return result.SourceIP14; }
        set { SetSourceIP14(value); }
      }
      public Builder SetSourceIP14(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasSourceIP14 = true;
        result.sourceIP14_ = value;
        return this;
      }
      public Builder ClearSourceIP14() {
        PrepareBuilder();
        result.hasSourceIP14 = false;
        result.sourceIP14_ = "";
        return this;
      }
      
      public bool HasMachineID15 {
        get { return result.hasMachineID15; }
      }
      public string MachineID15 {
        get { return result.MachineID15; }
        set { SetMachineID15(value); }
      }
      public Builder SetMachineID15(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasMachineID15 = true;
        result.machineID15_ = value;
        return this;
      }
      public Builder ClearMachineID15() {
        PrepareBuilder();
        result.hasMachineID15 = false;
        result.machineID15_ = "";
        return this;
      }
      
      public bool HasPassword16 {
        get { return result.hasPassword16; }
      }
      public string Password16 {
        get { return result.Password16; }
        set { SetPassword16(value); }
      }
      public Builder SetPassword16(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPassword16 = true;
        result.password16_ = value;
        return this;
      }
      public Builder ClearPassword16() {
        PrepareBuilder();
        result.hasPassword16 = false;
        result.password16_ = "";
        return this;
      }
      
      public bool HasResultInfo17 {
       get { return result.hasResultInfo17; }
      }
      public global::DocScanner.Bean.pb.MsgResultInfo ResultInfo17 {
        get { return result.ResultInfo17; }
        set { SetResultInfo17(value); }
      }
      public Builder SetResultInfo17(global::DocScanner.Bean.pb.MsgResultInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasResultInfo17 = true;
        result.resultInfo17_ = value;
        return this;
      }
      public Builder SetResultInfo17(global::DocScanner.Bean.pb.MsgResultInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.hasResultInfo17 = true;
        result.resultInfo17_ = builderForValue.Build();
        return this;
      }
      public Builder MergeResultInfo17(global::DocScanner.Bean.pb.MsgResultInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        if (result.hasResultInfo17 &&
            result.resultInfo17_ != global::DocScanner.Bean.pb.MsgResultInfo.DefaultInstance) {
            result.resultInfo17_ = global::DocScanner.Bean.pb.MsgResultInfo.CreateBuilder(result.resultInfo17_).MergeFrom(value).BuildPartial();
        } else {
          result.resultInfo17_ = value;
        }
        result.hasResultInfo17 = true;
        return this;
      }
      public Builder ClearResultInfo17() {
        PrepareBuilder();
        result.hasResultInfo17 = false;
        result.resultInfo17_ = null;
        return this;
      }
      
      public bool HasEditable18 {
        get { return result.hasEditable18; }
      }
      public bool Editable18 {
        get { return result.Editable18; }
        set { SetEditable18(value); }
      }
      public Builder SetEditable18(bool value) {
        PrepareBuilder();
        result.hasEditable18 = true;
        result.editable18_ = value;
        return this;
      }
      public Builder ClearEditable18() {
        PrepareBuilder();
        result.hasEditable18 = false;
        result.editable18_ = false;
        return this;
      }
      
      public bool HasExShenheResult19 {
        get { return result.hasExShenheResult19; }
      }
      public int ExShenheResult19 {
        get { return result.ExShenheResult19; }
        set { SetExShenheResult19(value); }
      }
      public Builder SetExShenheResult19(int value) {
        PrepareBuilder();
        result.hasExShenheResult19 = true;
        result.exShenheResult19_ = value;
        return this;
      }
      public Builder ClearExShenheResult19() {
        PrepareBuilder();
        result.hasExShenheResult19 = false;
        result.exShenheResult19_ = 0;
        return this;
      }
      
      public bool HasExShenheRemark20 {
        get { return result.hasExShenheRemark20; }
      }
      public string ExShenheRemark20 {
        get { return result.ExShenheRemark20; }
        set { SetExShenheRemark20(value); }
      }
      public Builder SetExShenheRemark20(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasExShenheRemark20 = true;
        result.exShenheRemark20_ = value;
        return this;
      }
      public Builder ClearExShenheRemark20() {
        PrepareBuilder();
        result.hasExShenheRemark20 = false;
        result.exShenheRemark20_ = "";
        return this;
      }
    }
    static MsgBatchInfo() {
      object.ReferenceEquals(global::DocScanner.Bean.pb.PbInfo.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class MsgAccountInfo : pb::GeneratedMessage<MsgAccountInfo, MsgAccountInfo.Builder> {
    private MsgAccountInfo() { }
    private static readonly MsgAccountInfo defaultInstance = new MsgAccountInfo().MakeReadOnly();
    private static readonly string[] _msgAccountInfoFieldNames = new string[] { "OrgID3", "Password2", "User1" };
    private static readonly uint[] _msgAccountInfoFieldTags = new uint[] { 26, 18, 10 };
    public static MsgAccountInfo DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MsgAccountInfo DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MsgAccountInfo ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DocScanner.Bean.pb.PbInfo.internal__static_DocScanner_Bean_pb_MsgAccountInfo__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MsgAccountInfo, MsgAccountInfo.Builder> InternalFieldAccessors {
      get { return global::DocScanner.Bean.pb.PbInfo.internal__static_DocScanner_Bean_pb_MsgAccountInfo__FieldAccessorTable; }
    }
    
    public const int User1FieldNumber = 1;
    private bool hasUser1;
    private string user1_ = "";
    public bool HasUser1 {
      get { return hasUser1; }
    }
    public string User1 {
      get { return user1_; }
    }
    
    public const int Password2FieldNumber = 2;
    private bool hasPassword2;
    private string password2_ = "";
    public bool HasPassword2 {
      get { return hasPassword2; }
    }
    public string Password2 {
      get { return password2_; }
    }
    
    public const int OrgID3FieldNumber = 3;
    private bool hasOrgID3;
    private string orgID3_ = "";
    public bool HasOrgID3 {
      get { return hasOrgID3; }
    }
    public string OrgID3 {
      get { return orgID3_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasUser1) return false;
        if (!hasPassword2) return false;
        if (!hasOrgID3) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgAccountInfoFieldNames;
      if (hasUser1) {
        output.WriteString(1, field_names[2], User1);
      }
      if (hasPassword2) {
        output.WriteString(2, field_names[1], Password2);
      }
      if (hasOrgID3) {
        output.WriteString(3, field_names[0], OrgID3);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasUser1) {
          size += pb::CodedOutputStream.ComputeStringSize(1, User1);
        }
        if (hasPassword2) {
          size += pb::CodedOutputStream.ComputeStringSize(2, Password2);
        }
        if (hasOrgID3) {
          size += pb::CodedOutputStream.ComputeStringSize(3, OrgID3);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static MsgAccountInfo ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MsgAccountInfo ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MsgAccountInfo ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MsgAccountInfo ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MsgAccountInfo ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MsgAccountInfo ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MsgAccountInfo ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MsgAccountInfo ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MsgAccountInfo ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MsgAccountInfo ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MsgAccountInfo MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MsgAccountInfo prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<MsgAccountInfo, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MsgAccountInfo cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MsgAccountInfo result;
      
      private MsgAccountInfo PrepareBuilder() {
        if (resultIsReadOnly) {
          MsgAccountInfo original = result;
          result = new MsgAccountInfo();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MsgAccountInfo MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DocScanner.Bean.pb.MsgAccountInfo.Descriptor; }
      }
      
      public override MsgAccountInfo DefaultInstanceForType {
        get { return global::DocScanner.Bean.pb.MsgAccountInfo.DefaultInstance; }
      }
      
      public override MsgAccountInfo BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MsgAccountInfo) {
          return MergeFrom((MsgAccountInfo) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MsgAccountInfo other) {
        if (other == global::DocScanner.Bean.pb.MsgAccountInfo.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasUser1) {
          User1 = other.User1;
        }
        if (other.HasPassword2) {
          Password2 = other.Password2;
        }
        if (other.HasOrgID3) {
          OrgID3 = other.OrgID3;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgAccountInfoFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgAccountInfoFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasUser1 = input.ReadString(ref result.user1_);
              break;
            }
            case 18: {
              result.hasPassword2 = input.ReadString(ref result.password2_);
              break;
            }
            case 26: {
              result.hasOrgID3 = input.ReadString(ref result.orgID3_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasUser1 {
        get { return result.hasUser1; }
      }
      public string User1 {
        get { return result.User1; }
        set { SetUser1(value); }
      }
      public Builder SetUser1(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUser1 = true;
        result.user1_ = value;
        return this;
      }
      public Builder ClearUser1() {
        PrepareBuilder();
        result.hasUser1 = false;
        result.user1_ = "";
        return this;
      }
      
      public bool HasPassword2 {
        get { return result.hasPassword2; }
      }
      public string Password2 {
        get { return result.Password2; }
        set { SetPassword2(value); }
      }
      public Builder SetPassword2(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPassword2 = true;
        result.password2_ = value;
        return this;
      }
      public Builder ClearPassword2() {
        PrepareBuilder();
        result.hasPassword2 = false;
        result.password2_ = "";
        return this;
      }
      
      public bool HasOrgID3 {
        get { return result.hasOrgID3; }
      }
      public string OrgID3 {
        get { return result.OrgID3; }
        set { SetOrgID3(value); }
      }
      public Builder SetOrgID3(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasOrgID3 = true;
        result.orgID3_ = value;
        return this;
      }
      public Builder ClearOrgID3() {
        PrepareBuilder();
        result.hasOrgID3 = false;
        result.orgID3_ = "";
        return this;
      }
    }
    static MsgAccountInfo() {
      object.ReferenceEquals(global::DocScanner.Bean.pb.PbInfo.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class MsgBatchHisQry : pb::GeneratedMessage<MsgBatchHisQry, MsgBatchHisQry.Builder> {
    private MsgBatchHisQry() { }
    private static readonly MsgBatchHisQry defaultInstance = new MsgBatchHisQry().MakeReadOnly();
    private static readonly string[] _msgBatchHisQryFieldNames = new string[] { "BatchNO3", "Password2", "User1" };
    private static readonly uint[] _msgBatchHisQryFieldTags = new uint[] { 26, 18, 10 };
    public static MsgBatchHisQry DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MsgBatchHisQry DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MsgBatchHisQry ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DocScanner.Bean.pb.PbInfo.internal__static_DocScanner_Bean_pb_MsgBatchHisQry__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MsgBatchHisQry, MsgBatchHisQry.Builder> InternalFieldAccessors {
      get { return global::DocScanner.Bean.pb.PbInfo.internal__static_DocScanner_Bean_pb_MsgBatchHisQry__FieldAccessorTable; }
    }
    
    public const int User1FieldNumber = 1;
    private bool hasUser1;
    private string user1_ = "";
    public bool HasUser1 {
      get { return hasUser1; }
    }
    public string User1 {
      get { return user1_; }
    }
    
    public const int Password2FieldNumber = 2;
    private bool hasPassword2;
    private string password2_ = "";
    public bool HasPassword2 {
      get { return hasPassword2; }
    }
    public string Password2 {
      get { return password2_; }
    }
    
    public const int BatchNO3FieldNumber = 3;
    private bool hasBatchNO3;
    private string batchNO3_ = "";
    public bool HasBatchNO3 {
      get { return hasBatchNO3; }
    }
    public string BatchNO3 {
      get { return batchNO3_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasUser1) return false;
        if (!hasPassword2) return false;
        if (!hasBatchNO3) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgBatchHisQryFieldNames;
      if (hasUser1) {
        output.WriteString(1, field_names[2], User1);
      }
      if (hasPassword2) {
        output.WriteString(2, field_names[1], Password2);
      }
      if (hasBatchNO3) {
        output.WriteString(3, field_names[0], BatchNO3);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasUser1) {
          size += pb::CodedOutputStream.ComputeStringSize(1, User1);
        }
        if (hasPassword2) {
          size += pb::CodedOutputStream.ComputeStringSize(2, Password2);
        }
        if (hasBatchNO3) {
          size += pb::CodedOutputStream.ComputeStringSize(3, BatchNO3);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static MsgBatchHisQry ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MsgBatchHisQry ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MsgBatchHisQry ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MsgBatchHisQry ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MsgBatchHisQry ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MsgBatchHisQry ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MsgBatchHisQry ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MsgBatchHisQry ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MsgBatchHisQry ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MsgBatchHisQry ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MsgBatchHisQry MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MsgBatchHisQry prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<MsgBatchHisQry, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MsgBatchHisQry cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MsgBatchHisQry result;
      
      private MsgBatchHisQry PrepareBuilder() {
        if (resultIsReadOnly) {
          MsgBatchHisQry original = result;
          result = new MsgBatchHisQry();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MsgBatchHisQry MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DocScanner.Bean.pb.MsgBatchHisQry.Descriptor; }
      }
      
      public override MsgBatchHisQry DefaultInstanceForType {
        get { return global::DocScanner.Bean.pb.MsgBatchHisQry.DefaultInstance; }
      }
      
      public override MsgBatchHisQry BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MsgBatchHisQry) {
          return MergeFrom((MsgBatchHisQry) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MsgBatchHisQry other) {
        if (other == global::DocScanner.Bean.pb.MsgBatchHisQry.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasUser1) {
          User1 = other.User1;
        }
        if (other.HasPassword2) {
          Password2 = other.Password2;
        }
        if (other.HasBatchNO3) {
          BatchNO3 = other.BatchNO3;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgBatchHisQryFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgBatchHisQryFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              result.hasUser1 = input.ReadString(ref result.user1_);
              break;
            }
            case 18: {
              result.hasPassword2 = input.ReadString(ref result.password2_);
              break;
            }
            case 26: {
              result.hasBatchNO3 = input.ReadString(ref result.batchNO3_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasUser1 {
        get { return result.hasUser1; }
      }
      public string User1 {
        get { return result.User1; }
        set { SetUser1(value); }
      }
      public Builder SetUser1(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasUser1 = true;
        result.user1_ = value;
        return this;
      }
      public Builder ClearUser1() {
        PrepareBuilder();
        result.hasUser1 = false;
        result.user1_ = "";
        return this;
      }
      
      public bool HasPassword2 {
        get { return result.hasPassword2; }
      }
      public string Password2 {
        get { return result.Password2; }
        set { SetPassword2(value); }
      }
      public Builder SetPassword2(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasPassword2 = true;
        result.password2_ = value;
        return this;
      }
      public Builder ClearPassword2() {
        PrepareBuilder();
        result.hasPassword2 = false;
        result.password2_ = "";
        return this;
      }
      
      public bool HasBatchNO3 {
        get { return result.hasBatchNO3; }
      }
      public string BatchNO3 {
        get { return result.BatchNO3; }
        set { SetBatchNO3(value); }
      }
      public Builder SetBatchNO3(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.hasBatchNO3 = true;
        result.batchNO3_ = value;
        return this;
      }
      public Builder ClearBatchNO3() {
        PrepareBuilder();
        result.hasBatchNO3 = false;
        result.batchNO3_ = "";
        return this;
      }
    }
    static MsgBatchHisQry() {
      object.ReferenceEquals(global::DocScanner.Bean.pb.PbInfo.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class MsgBatchHisRsp : pb::GeneratedMessage<MsgBatchHisRsp, MsgBatchHisRsp.Builder> {
    private MsgBatchHisRsp() { }
    private static readonly MsgBatchHisRsp defaultInstance = new MsgBatchHisRsp().MakeReadOnly();
    private static readonly string[] _msgBatchHisRspFieldNames = new string[] { "batchs1" };
    private static readonly uint[] _msgBatchHisRspFieldTags = new uint[] { 10 };
    public static MsgBatchHisRsp DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MsgBatchHisRsp DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MsgBatchHisRsp ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DocScanner.Bean.pb.PbInfo.internal__static_DocScanner_Bean_pb_MsgBatchHisRsp__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MsgBatchHisRsp, MsgBatchHisRsp.Builder> InternalFieldAccessors {
      get { return global::DocScanner.Bean.pb.PbInfo.internal__static_DocScanner_Bean_pb_MsgBatchHisRsp__FieldAccessorTable; }
    }
    
    public const int Batchs1FieldNumber = 1;
    private pbc::PopsicleList<global::DocScanner.Bean.pb.MsgBatchInfo> batchs1_ = new pbc::PopsicleList<global::DocScanner.Bean.pb.MsgBatchInfo>();
    public scg::IList<global::DocScanner.Bean.pb.MsgBatchInfo> Batchs1List {
      get { return batchs1_; }
    }
    public int Batchs1Count {
      get { return batchs1_.Count; }
    }
    public global::DocScanner.Bean.pb.MsgBatchInfo GetBatchs1(int index) {
      return batchs1_[index];
    }
    
    public override bool IsInitialized {
      get {
        foreach (global::DocScanner.Bean.pb.MsgBatchInfo element in Batchs1List) {
          if (!element.IsInitialized) return false;
        }
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgBatchHisRspFieldNames;
      if (batchs1_.Count > 0) {
        output.WriteMessageArray(1, field_names[0], batchs1_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        foreach (global::DocScanner.Bean.pb.MsgBatchInfo element in Batchs1List) {
          size += pb::CodedOutputStream.ComputeMessageSize(1, element);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static MsgBatchHisRsp ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MsgBatchHisRsp ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MsgBatchHisRsp ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MsgBatchHisRsp ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MsgBatchHisRsp ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MsgBatchHisRsp ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MsgBatchHisRsp ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MsgBatchHisRsp ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MsgBatchHisRsp ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MsgBatchHisRsp ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MsgBatchHisRsp MakeReadOnly() {
      batchs1_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MsgBatchHisRsp prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<MsgBatchHisRsp, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MsgBatchHisRsp cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MsgBatchHisRsp result;
      
      private MsgBatchHisRsp PrepareBuilder() {
        if (resultIsReadOnly) {
          MsgBatchHisRsp original = result;
          result = new MsgBatchHisRsp();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MsgBatchHisRsp MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DocScanner.Bean.pb.MsgBatchHisRsp.Descriptor; }
      }
      
      public override MsgBatchHisRsp DefaultInstanceForType {
        get { return global::DocScanner.Bean.pb.MsgBatchHisRsp.DefaultInstance; }
      }
      
      public override MsgBatchHisRsp BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MsgBatchHisRsp) {
          return MergeFrom((MsgBatchHisRsp) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MsgBatchHisRsp other) {
        if (other == global::DocScanner.Bean.pb.MsgBatchHisRsp.DefaultInstance) return this;
        PrepareBuilder();
        if (other.batchs1_.Count != 0) {
          result.batchs1_.Add(other.batchs1_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgBatchHisRspFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgBatchHisRspFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadMessageArray(tag, field_name, result.batchs1_, global::DocScanner.Bean.pb.MsgBatchInfo.DefaultInstance, extensionRegistry);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<global::DocScanner.Bean.pb.MsgBatchInfo> Batchs1List {
        get { return PrepareBuilder().batchs1_; }
      }
      public int Batchs1Count {
        get { return result.Batchs1Count; }
      }
      public global::DocScanner.Bean.pb.MsgBatchInfo GetBatchs1(int index) {
        return result.GetBatchs1(index);
      }
      public Builder SetBatchs1(int index, global::DocScanner.Bean.pb.MsgBatchInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.batchs1_[index] = value;
        return this;
      }
      public Builder SetBatchs1(int index, global::DocScanner.Bean.pb.MsgBatchInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.batchs1_[index] = builderForValue.Build();
        return this;
      }
      public Builder AddBatchs1(global::DocScanner.Bean.pb.MsgBatchInfo value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.batchs1_.Add(value);
        return this;
      }
      public Builder AddBatchs1(global::DocScanner.Bean.pb.MsgBatchInfo.Builder builderForValue) {
        pb::ThrowHelper.ThrowIfNull(builderForValue, "builderForValue");
        PrepareBuilder();
        result.batchs1_.Add(builderForValue.Build());
        return this;
      }
      public Builder AddRangeBatchs1(scg::IEnumerable<global::DocScanner.Bean.pb.MsgBatchInfo> values) {
        PrepareBuilder();
        result.batchs1_.Add(values);
        return this;
      }
      public Builder ClearBatchs1() {
        PrepareBuilder();
        result.batchs1_.Clear();
        return this;
      }
    }
    static MsgBatchHisRsp() {
      object.ReferenceEquals(global::DocScanner.Bean.pb.PbInfo.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class MsgServersListQry : pb::GeneratedMessage<MsgServersListQry, MsgServersListQry.Builder> {
    private MsgServersListQry() { }
    private static readonly MsgServersListQry defaultInstance = new MsgServersListQry().MakeReadOnly();
    private static readonly string[] _msgServersListQryFieldNames = new string[] {  };
    private static readonly uint[] _msgServersListQryFieldTags = new uint[] {  };
    public static MsgServersListQry DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MsgServersListQry DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MsgServersListQry ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DocScanner.Bean.pb.PbInfo.internal__static_DocScanner_Bean_pb_MsgServersListQry__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MsgServersListQry, MsgServersListQry.Builder> InternalFieldAccessors {
      get { return global::DocScanner.Bean.pb.PbInfo.internal__static_DocScanner_Bean_pb_MsgServersListQry__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgServersListQryFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static MsgServersListQry ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MsgServersListQry ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MsgServersListQry ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MsgServersListQry ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MsgServersListQry ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MsgServersListQry ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MsgServersListQry ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MsgServersListQry ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MsgServersListQry ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MsgServersListQry ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MsgServersListQry MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MsgServersListQry prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<MsgServersListQry, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MsgServersListQry cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MsgServersListQry result;
      
      private MsgServersListQry PrepareBuilder() {
        if (resultIsReadOnly) {
          MsgServersListQry original = result;
          result = new MsgServersListQry();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MsgServersListQry MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DocScanner.Bean.pb.MsgServersListQry.Descriptor; }
      }
      
      public override MsgServersListQry DefaultInstanceForType {
        get { return global::DocScanner.Bean.pb.MsgServersListQry.DefaultInstance; }
      }
      
      public override MsgServersListQry BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MsgServersListQry) {
          return MergeFrom((MsgServersListQry) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MsgServersListQry other) {
        if (other == global::DocScanner.Bean.pb.MsgServersListQry.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgServersListQryFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgServersListQryFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static MsgServersListQry() {
      object.ReferenceEquals(global::DocScanner.Bean.pb.PbInfo.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class MsgServersListRsp : pb::GeneratedMessage<MsgServersListRsp, MsgServersListRsp.Builder> {
    private MsgServersListRsp() { }
    private static readonly MsgServersListRsp defaultInstance = new MsgServersListRsp().MakeReadOnly();
    private static readonly string[] _msgServersListRspFieldNames = new string[] { "serverlist1" };
    private static readonly uint[] _msgServersListRspFieldTags = new uint[] { 10 };
    public static MsgServersListRsp DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MsgServersListRsp DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MsgServersListRsp ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DocScanner.Bean.pb.PbInfo.internal__static_DocScanner_Bean_pb_MsgServersListRsp__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MsgServersListRsp, MsgServersListRsp.Builder> InternalFieldAccessors {
      get { return global::DocScanner.Bean.pb.PbInfo.internal__static_DocScanner_Bean_pb_MsgServersListRsp__FieldAccessorTable; }
    }
    
    public const int Serverlist1FieldNumber = 1;
    private pbc::PopsicleList<string> serverlist1_ = new pbc::PopsicleList<string>();
    public scg::IList<string> Serverlist1List {
      get { return pbc::Lists.AsReadOnly(serverlist1_); }
    }
    public int Serverlist1Count {
      get { return serverlist1_.Count; }
    }
    public string GetServerlist1(int index) {
      return serverlist1_[index];
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgServersListRspFieldNames;
      if (serverlist1_.Count > 0) {
        output.WriteStringArray(1, field_names[0], serverlist1_);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        {
          int dataSize = 0;
          foreach (string element in Serverlist1List) {
            dataSize += pb::CodedOutputStream.ComputeStringSizeNoTag(element);
          }
          size += dataSize;
          size += 1 * serverlist1_.Count;
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static MsgServersListRsp ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MsgServersListRsp ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MsgServersListRsp ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MsgServersListRsp ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MsgServersListRsp ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MsgServersListRsp ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MsgServersListRsp ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MsgServersListRsp ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MsgServersListRsp ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MsgServersListRsp ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MsgServersListRsp MakeReadOnly() {
      serverlist1_.MakeReadOnly();
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MsgServersListRsp prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<MsgServersListRsp, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MsgServersListRsp cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MsgServersListRsp result;
      
      private MsgServersListRsp PrepareBuilder() {
        if (resultIsReadOnly) {
          MsgServersListRsp original = result;
          result = new MsgServersListRsp();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MsgServersListRsp MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DocScanner.Bean.pb.MsgServersListRsp.Descriptor; }
      }
      
      public override MsgServersListRsp DefaultInstanceForType {
        get { return global::DocScanner.Bean.pb.MsgServersListRsp.DefaultInstance; }
      }
      
      public override MsgServersListRsp BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MsgServersListRsp) {
          return MergeFrom((MsgServersListRsp) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MsgServersListRsp other) {
        if (other == global::DocScanner.Bean.pb.MsgServersListRsp.DefaultInstance) return this;
        PrepareBuilder();
        if (other.serverlist1_.Count != 0) {
          result.serverlist1_.Add(other.serverlist1_);
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgServersListRspFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgServersListRspFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 10: {
              input.ReadStringArray(tag, field_name, result.serverlist1_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public pbc::IPopsicleList<string> Serverlist1List {
        get { return PrepareBuilder().serverlist1_; }
      }
      public int Serverlist1Count {
        get { return result.Serverlist1Count; }
      }
      public string GetServerlist1(int index) {
        return result.GetServerlist1(index);
      }
      public Builder SetServerlist1(int index, string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.serverlist1_[index] = value;
        return this;
      }
      public Builder AddServerlist1(string value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        PrepareBuilder();
        result.serverlist1_.Add(value);
        return this;
      }
      public Builder AddRangeServerlist1(scg::IEnumerable<string> values) {
        PrepareBuilder();
        result.serverlist1_.Add(values);
        return this;
      }
      public Builder ClearServerlist1() {
        PrepareBuilder();
        result.serverlist1_.Clear();
        return this;
      }
    }
    static MsgServersListRsp() {
      object.ReferenceEquals(global::DocScanner.Bean.pb.PbInfo.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class MsgServerInfoQry : pb::GeneratedMessage<MsgServerInfoQry, MsgServerInfoQry.Builder> {
    private MsgServerInfoQry() { }
    private static readonly MsgServerInfoQry defaultInstance = new MsgServerInfoQry().MakeReadOnly();
    private static readonly string[] _msgServerInfoQryFieldNames = new string[] {  };
    private static readonly uint[] _msgServerInfoQryFieldTags = new uint[] {  };
    public static MsgServerInfoQry DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MsgServerInfoQry DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MsgServerInfoQry ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DocScanner.Bean.pb.PbInfo.internal__static_DocScanner_Bean_pb_MsgServerInfoQry__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MsgServerInfoQry, MsgServerInfoQry.Builder> InternalFieldAccessors {
      get { return global::DocScanner.Bean.pb.PbInfo.internal__static_DocScanner_Bean_pb_MsgServerInfoQry__FieldAccessorTable; }
    }
    
    public override bool IsInitialized {
      get {
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgServerInfoQryFieldNames;
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static MsgServerInfoQry ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MsgServerInfoQry ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MsgServerInfoQry ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MsgServerInfoQry ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MsgServerInfoQry ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MsgServerInfoQry ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MsgServerInfoQry ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MsgServerInfoQry ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MsgServerInfoQry ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MsgServerInfoQry ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MsgServerInfoQry MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MsgServerInfoQry prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<MsgServerInfoQry, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MsgServerInfoQry cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MsgServerInfoQry result;
      
      private MsgServerInfoQry PrepareBuilder() {
        if (resultIsReadOnly) {
          MsgServerInfoQry original = result;
          result = new MsgServerInfoQry();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MsgServerInfoQry MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DocScanner.Bean.pb.MsgServerInfoQry.Descriptor; }
      }
      
      public override MsgServerInfoQry DefaultInstanceForType {
        get { return global::DocScanner.Bean.pb.MsgServerInfoQry.DefaultInstance; }
      }
      
      public override MsgServerInfoQry BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MsgServerInfoQry) {
          return MergeFrom((MsgServerInfoQry) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MsgServerInfoQry other) {
        if (other == global::DocScanner.Bean.pb.MsgServerInfoQry.DefaultInstance) return this;
        PrepareBuilder();
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgServerInfoQryFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgServerInfoQryFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
    }
    static MsgServerInfoQry() {
      object.ReferenceEquals(global::DocScanner.Bean.pb.PbInfo.Descriptor, null);
    }
  }
  
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
  public sealed partial class MsgServerInfoRsp : pb::GeneratedMessage<MsgServerInfoRsp, MsgServerInfoRsp.Builder> {
    private MsgServerInfoRsp() { }
    private static readonly MsgServerInfoRsp defaultInstance = new MsgServerInfoRsp().MakeReadOnly();
    private static readonly string[] _msgServerInfoRspFieldNames = new string[] { "Burden1" };
    private static readonly uint[] _msgServerInfoRspFieldTags = new uint[] { 8 };
    public static MsgServerInfoRsp DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override MsgServerInfoRsp DefaultInstanceForType {
      get { return DefaultInstance; }
    }
    
    protected override MsgServerInfoRsp ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::DocScanner.Bean.pb.PbInfo.internal__static_DocScanner_Bean_pb_MsgServerInfoRsp__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<MsgServerInfoRsp, MsgServerInfoRsp.Builder> InternalFieldAccessors {
      get { return global::DocScanner.Bean.pb.PbInfo.internal__static_DocScanner_Bean_pb_MsgServerInfoRsp__FieldAccessorTable; }
    }
    
    public const int Burden1FieldNumber = 1;
    private bool hasBurden1;
    private int burden1_;
    public bool HasBurden1 {
      get { return hasBurden1; }
    }
    public int Burden1 {
      get { return burden1_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasBurden1) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::ICodedOutputStream output) {
      int size = SerializedSize;
      string[] field_names = _msgServerInfoRspFieldNames;
      if (hasBurden1) {
        output.WriteInt32(1, field_names[0], Burden1);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (hasBurden1) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, Burden1);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static MsgServerInfoRsp ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MsgServerInfoRsp ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MsgServerInfoRsp ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static MsgServerInfoRsp ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static MsgServerInfoRsp ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MsgServerInfoRsp ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static MsgServerInfoRsp ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static MsgServerInfoRsp ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static MsgServerInfoRsp ParseFrom(pb::ICodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static MsgServerInfoRsp ParseFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    private MsgServerInfoRsp MakeReadOnly() {
      return this;
    }
    
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(MsgServerInfoRsp prototype) {
      return new Builder(prototype);
    }
    
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed partial class Builder : pb::GeneratedBuilder<MsgServerInfoRsp, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {
        result = DefaultInstance;
        resultIsReadOnly = true;
      }
      internal Builder(MsgServerInfoRsp cloneFrom) {
        result = cloneFrom;
        resultIsReadOnly = true;
      }
      
      private bool resultIsReadOnly;
      private MsgServerInfoRsp result;
      
      private MsgServerInfoRsp PrepareBuilder() {
        if (resultIsReadOnly) {
          MsgServerInfoRsp original = result;
          result = new MsgServerInfoRsp();
          resultIsReadOnly = false;
          MergeFrom(original);
        }
        return result;
      }
      
      public override bool IsInitialized {
        get { return result.IsInitialized; }
      }
      
      protected override MsgServerInfoRsp MessageBeingBuilt {
        get { return PrepareBuilder(); }
      }
      
      public override Builder Clear() {
        result = DefaultInstance;
        resultIsReadOnly = true;
        return this;
      }
      
      public override Builder Clone() {
        if (resultIsReadOnly) {
          return new Builder(result);
        } else {
          return new Builder().MergeFrom(result);
        }
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::DocScanner.Bean.pb.MsgServerInfoRsp.Descriptor; }
      }
      
      public override MsgServerInfoRsp DefaultInstanceForType {
        get { return global::DocScanner.Bean.pb.MsgServerInfoRsp.DefaultInstance; }
      }
      
      public override MsgServerInfoRsp BuildPartial() {
        if (resultIsReadOnly) {
          return result;
        }
        resultIsReadOnly = true;
        return result.MakeReadOnly();
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is MsgServerInfoRsp) {
          return MergeFrom((MsgServerInfoRsp) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(MsgServerInfoRsp other) {
        if (other == global::DocScanner.Bean.pb.MsgServerInfoRsp.DefaultInstance) return this;
        PrepareBuilder();
        if (other.HasBurden1) {
          Burden1 = other.Burden1;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::ICodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        PrepareBuilder();
        pb::UnknownFieldSet.Builder unknownFields = null;
        uint tag;
        string field_name;
        while (input.ReadTag(out tag, out field_name)) {
          if(tag == 0 && field_name != null) {
            int field_ordinal = global::System.Array.BinarySearch(_msgServerInfoRspFieldNames, field_name, global::System.StringComparer.Ordinal);
            if(field_ordinal >= 0)
              tag = _msgServerInfoRspFieldTags[field_ordinal];
            else {
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              continue;
            }
          }
          switch (tag) {
            case 0: {
              throw pb::InvalidProtocolBufferException.InvalidTag();
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag, field_name);
              break;
            }
            case 8: {
              result.hasBurden1 = input.ReadInt32(ref result.burden1_);
              break;
            }
          }
        }
        
        if (unknownFields != null) {
          this.UnknownFields = unknownFields.Build();
        }
        return this;
      }
      
      
      public bool HasBurden1 {
        get { return result.hasBurden1; }
      }
      public int Burden1 {
        get { return result.Burden1; }
        set { SetBurden1(value); }
      }
      public Builder SetBurden1(int value) {
        PrepareBuilder();
        result.hasBurden1 = true;
        result.burden1_ = value;
        return this;
      }
      public Builder ClearBurden1() {
        PrepareBuilder();
        result.hasBurden1 = false;
        result.burden1_ = 0;
        return this;
      }
    }
    static MsgServerInfoRsp() {
      object.ReferenceEquals(global::DocScanner.Bean.pb.PbInfo.Descriptor, null);
    }
  }
  
  #endregion
  
}

#endregion Designer generated code
